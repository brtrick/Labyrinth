{"version":3,"file":"main.js","mappings":"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","sources":["webpack://quarto/./node_modules/three/build/three.module.js","webpack://quarto/./src/gameLogic/piece.js","webpack://quarto/./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack://quarto/./src/gameLogic/pieceToPlay.js","webpack://quarto/./src/gameLogic/piecePool.js","webpack://quarto/./src/gameLogic/board.js","webpack://quarto/./src/gameLogic/board3D.js","webpack://quarto/./src/gameLogic/quarto.js","webpack://quarto/./src/gameLogic/instructions.js","webpack://quarto/./src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const REVISION='127';const MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const CullFaceNone=0;const CullFaceBack=1;const CullFaceFront=2;const CullFaceFrontBack=3;const BasicShadowMap=0;const PCFShadowMap=1;const PCFSoftShadowMap=2;const VSMShadowMap=3;const FrontSide=0;const BackSide=1;const DoubleSide=2;const FlatShading=1;const SmoothShading=2;const NoBlending=0;const NormalBlending=1;const AdditiveBlending=2;const SubtractiveBlending=3;const MultiplyBlending=4;const CustomBlending=5;const AddEquation=100;const SubtractEquation=101;const ReverseSubtractEquation=102;const MinEquation=103;const MaxEquation=104;const ZeroFactor=200;const OneFactor=201;const SrcColorFactor=202;const OneMinusSrcColorFactor=203;const SrcAlphaFactor=204;const OneMinusSrcAlphaFactor=205;const DstAlphaFactor=206;const OneMinusDstAlphaFactor=207;const DstColorFactor=208;const OneMinusDstColorFactor=209;const SrcAlphaSaturateFactor=210;const NeverDepth=0;const AlwaysDepth=1;const LessDepth=2;const LessEqualDepth=3;const EqualDepth=4;const GreaterEqualDepth=5;const GreaterDepth=6;const NotEqualDepth=7;const MultiplyOperation=0;const MixOperation=1;const AddOperation=2;const NoToneMapping=0;const LinearToneMapping=1;const ReinhardToneMapping=2;const CineonToneMapping=3;const ACESFilmicToneMapping=4;const CustomToneMapping=5;const UVMapping=300;const CubeReflectionMapping=301;const CubeRefractionMapping=302;const EquirectangularReflectionMapping=303;const EquirectangularRefractionMapping=304;const CubeUVReflectionMapping=306;const CubeUVRefractionMapping=307;const RepeatWrapping=1000;const ClampToEdgeWrapping=1001;const MirroredRepeatWrapping=1002;const NearestFilter=1003;const NearestMipmapNearestFilter=1004;const NearestMipMapNearestFilter=1004;const NearestMipmapLinearFilter=1005;const NearestMipMapLinearFilter=1005;const LinearFilter=1006;const LinearMipmapNearestFilter=1007;const LinearMipMapNearestFilter=1007;const LinearMipmapLinearFilter=1008;const LinearMipMapLinearFilter=1008;const UnsignedByteType=1009;const ByteType=1010;const ShortType=1011;const UnsignedShortType=1012;const IntType=1013;const UnsignedIntType=1014;const FloatType=1015;const HalfFloatType=1016;const UnsignedShort4444Type=1017;const UnsignedShort5551Type=1018;const UnsignedShort565Type=1019;const UnsignedInt248Type=1020;const AlphaFormat=1021;const RGBFormat=1022;const RGBAFormat=1023;const LuminanceFormat=1024;const LuminanceAlphaFormat=1025;const RGBEFormat=RGBAFormat;const DepthFormat=1026;const DepthStencilFormat=1027;const RedFormat=1028;const RedIntegerFormat=1029;const RGFormat=1030;const RGIntegerFormat=1031;const RGBIntegerFormat=1032;const RGBAIntegerFormat=1033;const RGB_S3TC_DXT1_Format=33776;const RGBA_S3TC_DXT1_Format=33777;const RGBA_S3TC_DXT3_Format=33778;const RGBA_S3TC_DXT5_Format=33779;const RGB_PVRTC_4BPPV1_Format=35840;const RGB_PVRTC_2BPPV1_Format=35841;const RGBA_PVRTC_4BPPV1_Format=35842;const RGBA_PVRTC_2BPPV1_Format=35843;const RGB_ETC1_Format=36196;const RGB_ETC2_Format=37492;const RGBA_ETC2_EAC_Format=37496;const RGBA_ASTC_4x4_Format=37808;const RGBA_ASTC_5x4_Format=37809;const RGBA_ASTC_5x5_Format=37810;const RGBA_ASTC_6x5_Format=37811;const RGBA_ASTC_6x6_Format=37812;const RGBA_ASTC_8x5_Format=37813;const RGBA_ASTC_8x6_Format=37814;const RGBA_ASTC_8x8_Format=37815;const RGBA_ASTC_10x5_Format=37816;const RGBA_ASTC_10x6_Format=37817;const RGBA_ASTC_10x8_Format=37818;const RGBA_ASTC_10x10_Format=37819;const RGBA_ASTC_12x10_Format=37820;const RGBA_ASTC_12x12_Format=37821;const RGBA_BPTC_Format=36492;const SRGB8_ALPHA8_ASTC_4x4_Format=37840;const SRGB8_ALPHA8_ASTC_5x4_Format=37841;const SRGB8_ALPHA8_ASTC_5x5_Format=37842;const SRGB8_ALPHA8_ASTC_6x5_Format=37843;const SRGB8_ALPHA8_ASTC_6x6_Format=37844;const SRGB8_ALPHA8_ASTC_8x5_Format=37845;const SRGB8_ALPHA8_ASTC_8x6_Format=37846;const SRGB8_ALPHA8_ASTC_8x8_Format=37847;const SRGB8_ALPHA8_ASTC_10x5_Format=37848;const SRGB8_ALPHA8_ASTC_10x6_Format=37849;const SRGB8_ALPHA8_ASTC_10x8_Format=37850;const SRGB8_ALPHA8_ASTC_10x10_Format=37851;const SRGB8_ALPHA8_ASTC_12x10_Format=37852;const SRGB8_ALPHA8_ASTC_12x12_Format=37853;const LoopOnce=2200;const LoopRepeat=2201;const LoopPingPong=2202;const InterpolateDiscrete=2300;const InterpolateLinear=2301;const InterpolateSmooth=2302;const ZeroCurvatureEnding=2400;const ZeroSlopeEnding=2401;const WrapAroundEnding=2402;const NormalAnimationBlendMode=2500;const AdditiveAnimationBlendMode=2501;const TrianglesDrawMode=0;const TriangleStripDrawMode=1;const TriangleFanDrawMode=2;const LinearEncoding=3000;const sRGBEncoding=3001;const GammaEncoding=3007;const RGBEEncoding=3002;const LogLuvEncoding=3003;const RGBM7Encoding=3004;const RGBM16Encoding=3005;const RGBDEncoding=3006;const BasicDepthPacking=3200;const RGBADepthPacking=3201;const TangentSpaceNormalMap=0;const ObjectSpaceNormalMap=1;const ZeroStencilOp=0;const KeepStencilOp=7680;const ReplaceStencilOp=7681;const IncrementStencilOp=7682;const DecrementStencilOp=7683;const IncrementWrapStencilOp=34055;const DecrementWrapStencilOp=34056;const InvertStencilOp=5386;const NeverStencilFunc=512;const LessStencilFunc=513;const EqualStencilFunc=514;const LessEqualStencilFunc=515;const GreaterStencilFunc=516;const NotEqualStencilFunc=517;const GreaterEqualStencilFunc=518;const AlwaysStencilFunc=519;const StaticDrawUsage=35044;const DynamicDrawUsage=35048;const StreamDrawUsage=35040;const StaticReadUsage=35045;const DynamicReadUsage=35049;const StreamReadUsage=35041;const StaticCopyUsage=35046;const DynamicCopyUsage=35050;const StreamCopyUsage=35042;const GLSL1='100';const GLSL3='300 es';/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(type,listener){if(this._listeners===undefined)this._listeners={};const listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}},hasEventListener:function(type,listener){if(this._listeners===undefined)return false;const listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;},removeEventListener:function(type,listener){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[type];if(listenerArray!==undefined){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}},dispatchEvent:function(event){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.\nconst array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event);}event.target=null;}}});const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}let _seed=1234567;const MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nconst d0=Math.random()*0xffffffff|0;const d1=Math.random()*0xffffffff|0;const d2=Math.random()*0xffffffff|0;const d3=Math.random()*0xffffffff|0;const uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();},clamp:function(value,min,max){return Math.max(min,Math.min(max,value));},// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\neuclideanModulo:function(n,m){return(n%m+m)%m;},// Linear mapping from range <a1, a2> to range <b1, b2>\nmapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);},// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\ninverseLerp:function(x,y,value){if(x!==y){return(value-x)/(y-x);}else{return 0;}},// https://en.wikipedia.org/wiki/Linear_interpolation\nlerp:function(x,y,t){return(1-t)*x+t*y;},// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\ndamp:function(x,y,lambda,dt){return MathUtils.lerp(x,y,1-Math.exp(-lambda*dt));},// https://www.desmos.com/calculator/vcsjnyz7x4\npingpong:function(x,length=1){return length-Math.abs(MathUtils.euclideanModulo(x,length*2)-length);},// http://en.wikipedia.org/wiki/Smoothstep\nsmoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);},// Random integer from <low, high> interval\nrandInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1));},// Random float from <low, high> interval\nrandFloat:function(low,high){return low+Math.random()*(high-low);},// Random float from <-range/2, range/2> interval\nrandFloatSpread:function(range){return range*(0.5-Math.random());},// Deterministic pseudo-random float in the interval [ 0, 1 ]\nseededRandom:function(s){if(s!==undefined)_seed=s%2147483647;// Park-Miller algorithm\n_seed=_seed*16807%2147483647;return(_seed-1)/2147483646;},degToRad:function(degrees){return degrees*MathUtils.DEG2RAD;},radToDeg:function(radians){return radians*MathUtils.RAD2DEG;},isPowerOfTwo:function(value){return(value&value-1)===0&&value!==0;},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));},setQuaternionFromProperEuler:function(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n// rotations are applied to the axes in the order specified by 'order'\n// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n// angles are in radians\nconst cos=Math.cos;const sin=Math.sin;const c2=cos(b/2);const s2=sin(b/2);const c13=cos((a+c)/2);const s13=sin((a+c)/2);const c1_3=cos((a-c)/2);const s1_3=sin((a-c)/2);const c3_1=cos((c-a)/2);const s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}};class Vector2{constructor(x=0,y=0){this.x=x;this.y=y;}get width(){return this.x;}set width(value){this.x=value;}get height(){return this.y;}set height(value){this.y=value;}set(x,y){this.x=x;this.y=y;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y);}copy(v){this.x=v.x;this.y=v.y;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;}addScalar(s){this.x+=s;this.y+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;}subScalar(s){this.x-=s;this.y-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;}multiply(v){this.x*=v.x;this.y*=v.y;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;}divide(v){this.x/=v.x;this.y/=v.y;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}applyMatrix3(m){const x=this.x,y=this.y;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;}negate(){this.x=-this.x;this.y=-this.y;return this;}dot(v){return this.x*v.x+this.y*v.y;}cross(v){return this.x*v.y-this.y*v.x;}lengthSq(){return this.x*this.x+this.y*this.y;}length(){return Math.sqrt(this.x*this.x+this.y*this.y);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);}normalize(){return this.divideScalar(this.length()||1);}angle(){// computes the angle in radians with respect to the positive x-axis\nconst angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;}rotateAround(center,angle){const c=Math.cos(angle),s=Math.sin(angle);const x=this.x-center.x;const y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}random(){this.x=Math.random();this.y=Math.random();return this;}}Vector2.prototype.isVector2=true;class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;}identity(){this.set(1,0,0,0,1,0,0,0,1);return this;}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;}setFromMatrix4(m){const me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;}multiply(m){return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[3],a13=ae[6];const a21=ae[1],a22=ae[4],a23=ae[7];const a31=ae[2],a32=ae[5],a33=ae[8];const b11=be[0],b12=be[3],b13=be[6];const b21=be[1],b22=be[4],b23=be[7];const b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;}determinant(){const te=this.elements;const a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;}transpose(){let tmp;const m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;}getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).invert().transpose();}transposeIntoArray(r){const m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;}setUvTransform(tx,ty,sx,sy,rotation,cx,cy){const c=Math.cos(rotation);const s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);return this;}scale(sx,sy){const te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;}rotate(theta){const c=Math.cos(theta);const s=Math.sin(theta);const te=this.elements;const a11=te[0],a12=te[3],a13=te[6];const a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;}translate(tx,ty){const te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}clone(){return new this.constructor().fromArray(this.elements);}}Matrix3.prototype.isMatrix3=true;let _canvas;const ImageUtils={getDataURL:function(image){if(/^data:/i.test(image.src)){return image.src;}if(typeof HTMLCanvasElement=='undefined'){return image.src;}let canvas;if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;const context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',image);return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}};let textureId=0;class Texture extends EventDispatcher{constructor(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=ClampToEdgeWrapping,wrapT=ClampToEdgeWrapping,magFilter=LinearFilter,minFilter=LinearMipmapLinearFilter,format=RGBAFormat,type=UnsignedByteType,anisotropy=1,encoding=LinearEncoding){super();Object.defineProperty(this,'id',{value:textureId++});this.uuid=MathUtils.generateUUID();this.name='';this.image=image;this.mipmaps=[];this.mapping=mapping;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\nthis.encoding=encoding;this.version=0;this.onUpdate=null;}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);}clone(){return new this.constructor().copy(this);}copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;}toJSON(meta){const isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}const output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nconst image=this.image;if(image.uuid===undefined){image.uuid=MathUtils.generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){let url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(let i=0,l=image.length;i<l;i++){// check cube texture with data textures\nif(image[i].isDataTexture){url.push(serializeImage(image[i].image));}else{url.push(serializeImage(image[i]));}}}else{// process single image\nurl=serializeImage(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;}dispose(){this.dispatchEvent({type:'dispose'});}transformUv(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}set needsUpdate(value){if(value===true)this.version++;}}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype.isTexture=true;function serializeImage(image){if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){// default images\nreturn ImageUtils.getDataURL(image);}else{if(image.data){// images of DataTexture\nreturn{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};}else{console.warn('THREE.Texture: Unable to serialize Texture.');return{};}}}class Vector4{constructor(x=0,y=0,z=0,w=1){this.x=x;this.y=y;this.z=z;this.w=w;}get width(){return this.z;}set width(value){this.z=value;}get height(){return this.w;}set height(value){this.w=value;}set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setW(w){this.w=w;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;}multiply(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,w=this.w;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;}setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nlet angle,x,y,z;// variables for result\nconst epsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;const xx=(m11+1)/2;const yy=(m22+1)/2;const zz=(m33+1)/2;const xy=(m12+m21)/4;const xz=(m13+m31)/4;const yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nlet s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}}Vector4.prototype.isVector4=true;/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/class WebGLRenderTarget extends EventDispatcher{constructor(width,height,options){super();this.width=width;this.height=height;this.depth=1;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=1;this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:false;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}setTexture(texture){texture.image={width:this.width,height:this.height,depth:this.depth};this.texture=texture;}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=depth;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);}clone(){return new this.constructor().copy(this);}copy(source){this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}WebGLRenderTarget.prototype.isWebGLRenderTarget=true;class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(width,height,options){super(width,height,options);this.samples=4;}copy(source){super.copy.call(this,source);this.samples=source.samples;return this;}}WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget=true;class Quaternion{constructor(x=0,y=0,z=0,w=1){this._x=x;this._y=y;this._z=z;this._w=w;}static slerp(qa,qb,qm,t){console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');return qm.slerpQuaternions(qa,qb,t);}static slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nlet x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];const x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(t===0){dst[dstOffset+0]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;return;}if(t===1){dst[dstOffset+0]=x1;dst[dstOffset+1]=y1;dst[dstOffset+2]=z1;dst[dstOffset+3]=w1;return;}if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){let s=1-t;const cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){const sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}const tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){const f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}static multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){const x0=src0[srcOffset0];const y0=src0[srcOffset0+1];const z0=src0[srcOffset0+2];const w0=src0[srcOffset0+3];const x1=src1[srcOffset1];const y1=src1[srcOffset1+1];const z1=src1[srcOffset1+2];const w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get w(){return this._w;}set w(value){this._w=value;this._onChangeCallback();}set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._w);}copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;}setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}const x=euler._x,y=euler._y,z=euler._z,order=euler._order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nconst cos=Math.cos;const sin=Math.sin;const c1=cos(x/2);const c2=cos(y/2);const c3=cos(z/2);const s1=sin(x/2);const s2=sin(y/2);const s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;}setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nconst halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;}setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){const s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){const s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){const s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{const s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._onChangeCallback();return this;}setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized\nlet r=vFrom.dot(vTo)+1;if(r<Number.EPSILON){// vFrom and vTo point in opposite directions\nr=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\nthis._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();}angleTo(q){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(q),-1,1)));}rotateTowards(q,step){const angle=this.angleTo(q);if(angle===0)return this;const t=Math.min(1,step/angle);this.slerp(q,t);return this;}identity(){return this.set(0,0,0,1);}invert(){// quaternion is assumed to have unit length\nreturn this.conjugate();}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;}dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);}normalize(){let l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;}multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);}premultiply(q){return this.multiplyQuaternions(q,this);}multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nconst qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;const qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;}slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);const x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nlet cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}const sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){const s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}const sinHalfTheta=Math.sqrt(sqrSinHalfTheta);const halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);const ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;}slerpQuaternions(qa,qb,t){this.copy(qa).slerp(qb,t);}equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;}fromArray(array,offset=0){this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;}fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Quaternion.prototype.isQuaternion=true;class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z;}set(x,y,z){if(z===undefined)z=this.z;// sprite.scale.set(x,y)\nthis.x=x;this.y=y;this.z=z;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;}multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;}multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;}applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion$4.setFromEuler(euler));}applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle));}applyMatrix3(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;}applyNormalMatrix(m){return this.applyMatrix3(m).normalize();}applyMatrix4(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;const w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;}applyQuaternion(q){const x=this.x,y=this.y,z=this.z;const qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nconst ix=qw*x+qy*z-qz*y;const iy=qw*y+qz*x-qx*z;const iz=qw*z+qx*y-qy*x;const iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;}project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);}unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);}transformDirection(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nconst x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();}divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;}// TODO lengthSquared?\nlengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;}cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);}crossVectors(a,b){const ax=a.x,ay=a.y,az=a.z;const bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}projectOnVector(v){const denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);const scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);}projectOnPlane(planeNormal){_vector$c.copy(this).projectOnVector(planeNormal);return this.sub(_vector$c);}reflect(normal){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nreturn this.sub(_vector$c.copy(normal).multiplyScalar(2*this.dot(normal)));}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;const theta=this.dot(v)/denominator;// clamp, to handle numerical problems\nreturn Math.acos(MathUtils.clamp(theta,-1,1));}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);}setFromSphericalCoords(radius,phi,theta){const sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;}setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);}setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;}setFromMatrixPosition(m){const e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;}setFromMatrixScale(m){const sx=this.setFromMatrixColumn(m,0).length();const sy=this.setFromMatrixColumn(m,1).length();const sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;}setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);}setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}}Vector3.prototype.isVector3=true;const _vector$c=/*@__PURE__*/new Vector3();const _quaternion$4=/*@__PURE__*/new Quaternion();class Box3{constructor(min=new Vector3(+Infinity,+Infinity,+Infinity),max=new Vector3(-Infinity,-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromArray(array){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=array.length;i<l;i+=3){const x=array[i];const y=array[i+1];const z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromBufferAttribute(attribute){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=attribute.count;i<l;i++){const x=attribute.getX(i);const y=attribute.getY(i);const z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$b.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}setFromObject(object){this.makeEmpty();return this.expandByObject(object);}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;}getCenter(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nobject.updateWorldMatrix(false,false);const geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box$3.copy(geometry.boundingBox);_box$3.applyMatrix4(object.matrixWorld);this.union(_box$3);}const children=object.children;for(let i=0,l=children.length;i<l;i++){this.expandByObject(children[i]);}return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));}intersectsBox(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;}intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,_vector$b);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn _vector$b.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;}intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nlet min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;}intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin\n_v0$2.subVectors(triangle.a,_center);_v1$7.subVectors(triangle.b,_center);_v2$3.subVectors(triangle.c,_center);// compute edge vectors for triangle\n_f0.subVectors(_v1$7,_v0$2);_f1.subVectors(_v2$3,_v1$7);_f2.subVectors(_v0$2,_v2$3);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nlet axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\n_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents);}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$b.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}getBoundingSphere(target){if(target===undefined){console.error('THREE.Box3: .getBoundingSphere() target is now required');//target = new Sphere(); // removed to avoid cyclic dependency\n}this.getCenter(target.center);target.radius=this.getSize(_vector$b).length()*0.5;return target;}intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\n_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\n_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\n_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\n_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\n_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\n_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\n_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(_points);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box3.prototype.isBox3=true;const _points=[/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3()];const _vector$b=/*@__PURE__*/new Vector3();const _box$3=/*@__PURE__*/new Box3();// triangle centered vertices\nconst _v0$2=/*@__PURE__*/new Vector3();const _v1$7=/*@__PURE__*/new Vector3();const _v2$3=/*@__PURE__*/new Vector3();// triangle edge vectors\nconst _f0=/*@__PURE__*/new Vector3();const _f1=/*@__PURE__*/new Vector3();const _f2=/*@__PURE__*/new Vector3();const _center=/*@__PURE__*/new Vector3();const _extents=/*@__PURE__*/new Vector3();const _triangleNormal=/*@__PURE__*/new Vector3();const _testAxis=/*@__PURE__*/new Vector3();function satForAxes(axes,v0,v1,v2,extents){for(let i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);// project the aabb onto the seperating axis\nconst r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nconst p0=v0.dot(_testAxis);const p1=v1.dot(_testAxis);const p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}const _box$2=/*@__PURE__*/new Box3();const _v1$6=/*@__PURE__*/new Vector3();const _toFarthestPoint=/*@__PURE__*/new Vector3();const _toPoint=/*@__PURE__*/new Vector3();class Sphere{constructor(center=new Vector3(),radius=-1){this.center=center;this.radius=radius;}set(center,radius){this.center.copy(center);this.radius=radius;return this;}setFromPoints(points,optionalCenter){const center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$2.setFromPoints(points).getCenter(center);}let maxRadiusSq=0;for(let i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;}copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;}isEmpty(){return this.radius<0;}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;}containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;}distanceToPoint(point){return point.distanceTo(this.center)-this.radius;}intersectsSphere(sphere){const radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;}intersectsBox(box){return box.intersectsSphere(this);}intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;}clampPoint(point,target){const deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;}getBoundingBox(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}if(this.isEmpty()){// Empty sphere produces empty bounding box\ntarget.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;}applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}translate(offset){this.center.add(offset);return this;}expandByPoint(point){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n_toPoint.subVectors(point,this.center);const lengthSq=_toPoint.lengthSq();if(lengthSq>this.radius*this.radius){const length=Math.sqrt(lengthSq);const missingRadiusHalf=(length-this.radius)*0.5;// Nudge this sphere towards the target point. Add half the missing distance to radius,\n// and the other half to position. This gives a tighter enclosure, instead of if\n// the whole missing distance were just added to radius.\nthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf/length));this.radius+=missingRadiusHalf;}return this;}union(sphere){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n// To enclose another sphere into this sphere, we only need to enclose two points:\n// 1) Enclose the farthest point on the other sphere into this sphere.\n// 2) Enclose the opposite point of the farthest point into this sphere.\n_toFarthestPoint.subVectors(sphere.center,this.center).normalize().multiplyScalar(sphere.radius);this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));return this;}equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}clone(){return new this.constructor().copy(this);}}const _vector$a=/*@__PURE__*/new Vector3();const _segCenter=/*@__PURE__*/new Vector3();const _segDir=/*@__PURE__*/new Vector3();const _diff=/*@__PURE__*/new Vector3();const _edge1=/*@__PURE__*/new Vector3();const _edge2=/*@__PURE__*/new Vector3();const _normal$1=/*@__PURE__*/new Vector3();class Ray{constructor(origin=new Vector3(),direction=new Vector3(0,0,-1)){this.origin=origin;this.direction=direction;}set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;}copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;}at(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);}lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;}recast(t){this.origin.copy(this.at(t,_vector$a));return this;}closestPointToPoint(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3();}target.subVectors(point,this.origin);const directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);}distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));}distanceSqToPoint(point){const directionDistance=_vector$a.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$a.distanceToSquared(point);}distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\n_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);const segExtent=v0.distanceTo(v1)*0.5;const a01=-this.direction.dot(_segDir);const b0=_diff.dot(this.direction);const b1=-_diff.dot(_segDir);const c=_diff.lengthSq();const det=Math.abs(1-a01*a01);let s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nconst invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;}intersectSphere(sphere,target){_vector$a.subVectors(sphere.center,this.origin);const tca=_vector$a.dot(this.direction);const d2=_vector$a.dot(_vector$a)-tca*tca;const radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;const thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nconst t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nconst t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);}intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;}distanceToPlane(plane){const denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}const t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;}intersectPlane(plane,target){const t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);}intersectsPlane(plane){// check if the ray lies on the plane first\nconst distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}const denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;}intersectBox(box,target){let tmin,tmax,tymin,tymax,tzmin,tzmax;const invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;const origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);}intersectsBox(box){return this.intersectBox(box,_vector$a)!==null;}intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.\n// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal$1.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nlet DdN=this.direction.dot(_normal$1);let sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);const DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}const DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nconst QdN=-sign*_diff.dot(_normal$1);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);}applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;}equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}clone(){return new this.constructor().copy(this);}}class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;}clone(){return new Matrix4().fromArray(this.elements);}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;}copyPosition(m){const te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;}setFromMatrix3(m){const me=m.elements;this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1);return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;}makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;}extractRotation(m){// this method does not support reflection matrices\nconst te=this.elements;const me=m.elements;const scaleX=1/_v1$5.setFromMatrixColumn(m,0).length();const scaleY=1/_v1$5.setFromMatrixColumn(m,1).length();const scaleZ=1/_v1$5.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}const te=this.elements;const x=euler.x,y=euler.y,z=euler.z;const a=Math.cos(x),b=Math.sin(x);const c=Math.cos(y),d=Math.sin(y);const e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);}lookAt(eye,target,up){const te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position\n_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;}multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];const a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];const a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];const a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];const b11=be[0],b12=be[4],b13=be[8],b14=be[12];const b21=be[1],b22=be[5],b23=be[9],b24=be[13];const b31=be[2],b32=be[6],b33=be[10],b34=be[14];const b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;}determinant(){const te=this.elements;const n11=te[0],n12=te[4],n13=te[8],n14=te[12];const n21=te[1],n22=te[5],n23=te[9],n24=te[13];const n31=te[2],n32=te[6],n33=te[10],n34=te[14];const n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);}transpose(){const te=this.elements;let tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;}setPosition(x,y,z){const te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;}invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nconst te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;const det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;}scale(v){const te=this.elements;const x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;}getMaxScaleOnAxis(){const te=this.elements;const scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];const scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];const scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));}makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;}makeRotationX(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;}makeRotationY(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;}makeRotationZ(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;}makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nconst c=Math.cos(angle);const s=Math.sin(angle);const t=1-c;const x=axis.x,y=axis.y,z=axis.z;const tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;}makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;}makeShear(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this;}compose(position,quaternion,scale){const te=this.elements;const x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;const x2=x+x,y2=y+y,z2=z+z;const xx=x*x2,xy=x*y2,xz=x*z2;const yy=y*y2,yz=y*z2,zz=z*z2;const wx=w*x2,wy=w*y2,wz=w*z2;const sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;}decompose(position,quaternion,scale){const te=this.elements;let sx=_v1$5.set(te[0],te[1],te[2]).length();const sy=_v1$5.set(te[4],te[5],te[6]).length();const sz=_v1$5.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nconst det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\n_m1$2.copy(this);const invSX=1/sx;const invSY=1/sy;const invSZ=1/sz;_m1$2.elements[0]*=invSX;_m1$2.elements[1]*=invSX;_m1$2.elements[2]*=invSX;_m1$2.elements[4]*=invSY;_m1$2.elements[5]*=invSY;_m1$2.elements[6]*=invSY;_m1$2.elements[8]*=invSZ;_m1$2.elements[9]*=invSZ;_m1$2.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1$2);scale.x=sx;scale.y=sy;scale.z=sz;return this;}makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}const te=this.elements;const x=2*near/(right-left);const y=2*near/(top-bottom);const a=(right+left)/(right-left);const b=(top+bottom)/(top-bottom);const c=-(far+near)/(far-near);const d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements;const w=1.0/(right-left);const h=1.0/(top-bottom);const p=1.0/(far-near);const x=(right+left)*w;const y=(top+bottom)*h;const z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}}Matrix4.prototype.isMatrix4=true;const _v1$5=/*@__PURE__*/new Vector3();const _m1$2=/*@__PURE__*/new Matrix4();const _zero=/*@__PURE__*/new Vector3(0,0,0);const _one=/*@__PURE__*/new Vector3(1,1,1);const _x=/*@__PURE__*/new Vector3();const _y=/*@__PURE__*/new Vector3();const _z=/*@__PURE__*/new Vector3();const _matrix$1=/*@__PURE__*/new Matrix4();const _quaternion$3=/*@__PURE__*/new Quaternion();class Euler{constructor(x=0,y=0,z=0,order=Euler.DefaultOrder){this._x=x;this._y=y;this._z=z;this._order=order;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get order(){return this._order;}set order(value){this._order=value;this._onChangeCallback();}set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._order);}copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;}setFromRotationMatrix(m,order,update){const clamp=MathUtils.clamp;// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements;const m11=te[0],m12=te[4],m13=te[8];const m21=te[1],m22=te[5],m23=te[9];const m31=te[2],m32=te[6],m33=te[10];order=order||this._order;switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update!==false)this._onChangeCallback();return this;}setFromQuaternion(q,order,update){_matrix$1.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix$1,order,update);}setFromVector3(v,order){return this.set(v.x,v.y,v.z,order||this._order);}reorder(newOrder){// WARNING: this discards revolution information -bhouston\n_quaternion$3.setFromEuler(this);return this.setFromQuaternion(_quaternion$3,newOrder);}equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;}fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;}toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Euler.prototype.isEuler=true;Euler.DefaultOrder='XYZ';Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];class Layers{constructor(){this.mask=1|0;}set(channel){this.mask=1<<channel|0;}enable(channel){this.mask|=1<<channel|0;}enableAll(){this.mask=0xffffffff|0;}toggle(channel){this.mask^=1<<channel|0;}disable(channel){this.mask&=~(1<<channel|0);}disableAll(){this.mask=0;}test(layers){return(this.mask&layers.mask)!==0;}}let _object3DId=0;const _v1$4=new Vector3();const _q1=new Quaternion();const _m1$1=new Matrix4();const _target=new Vector3();const _position$3=new Vector3();const _scale$2=new Vector3();const _quaternion$2=new Quaternion();const _xAxis=new Vector3(1,0,0);const _yAxis=new Vector3(0,1,0);const _zAxis=new Vector3(0,0,1);const _addedEvent={type:'added'};const _removedEvent={type:'removed'};function Object3D(){Object.defineProperty(this,'id',{value:_object3DId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();const position=new Vector3();const rotation=new Euler();const quaternion=new Quaternion();const scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={};}Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function(q){this.quaternion.premultiply(q);return this;},setRotationFromAxisAngle:function(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,true);},setRotationFromMatrix:function(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);},setRotationFromQuaternion:function(q){// assumes q is normalized\nthis.quaternion.copy(q);},rotateOnAxis:function(axis,angle){// rotate object on axis in object space\n// axis is assumed to be normalized\n_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;},rotateOnWorldAxis:function(axis,angle){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\n_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;},rotateX:function(angle){return this.rotateOnAxis(_xAxis,angle);},rotateY:function(angle){return this.rotateOnAxis(_yAxis,angle);},rotateZ:function(angle){return this.rotateOnAxis(_zAxis,angle);},translateOnAxis:function(axis,distance){// translate object by distance along axis in object space\n// axis is assumed to be normalized\n_v1$4.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$4.multiplyScalar(distance));return this;},translateX:function(distance){return this.translateOnAxis(_xAxis,distance);},translateY:function(distance){return this.translateOnAxis(_yAxis,distance);},translateZ:function(distance){return this.translateOnAxis(_zAxis,distance);},localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld);},worldToLocal:function(vector){return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());},lookAt:function(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)\nif(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}const parent=this.parent;this.updateWorldMatrix(true,false);_position$3.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position$3,_target,this.up);}else{_m1$1.lookAt(_target,_position$3,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.invert());}},add:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.',object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',object);}return this;},remove:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}const index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;},clear:function(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null;object.dispatchEvent(_removedEvent);}this.children.length=0;return this;},attach:function(object){// adds object as a child of this, while maintaining the object's world transform\nthis.updateWorldMatrix(true,false);_m1$1.copy(this.matrixWorld).invert();if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);this.add(object);object.updateWorldMatrix(false,true);return this;},getObjectById:function(id){return this.getObjectByProperty('id',id);},getObjectByName:function(name){return this.getObjectByProperty('name',name);},getObjectByProperty:function(name,value){if(this[name]===value)return this;for(let i=0,l=this.children.length;i<l;i++){const child=this.children[i];const object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;},getWorldPosition:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);return target.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,target,_scale$2);return target;},getWorldScale:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,_quaternion$2,target);return target;},getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();},raycast:function(){},traverse:function(callback){callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverse(callback);}},traverseVisible:function(callback){if(this.visible===false)return;callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}},traverseAncestors:function(callback){const parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nconst children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}},updateWorldMatrix:function(updateParents,updateChildren){const parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}},toJSON:function(meta){// meta is a string when called from JSON.stringify\nconst isRootObject=meta===undefined||typeof meta==='string';const output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nconst object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)object.instanceColor=this.instanceColor.toJSON();}//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);const parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){const shapes=parameters.shapes;if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.isSkinnedMesh){object.bindMode=this.bindMode;object.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){serialize(meta.skeletons,this.skeleton);object.skeleton=this.skeleton.uuid;}}if(this.material!==undefined){if(Array.isArray(this.material)){const uuids=[];for(let i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}//\nif(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const animation=this.animations[i];object.animations.push(serialize(meta.animations,animation));}}if(isRootObject){const geometries=extractFromCache(meta.geometries);const materials=extractFromCache(meta.materials);const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);const shapes=extractFromCache(meta.shapes);const skeletons=extractFromCache(meta.skeletons);const animations=extractFromCache(meta.animations);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;if(skeletons.length>0)output.skeletons=skeletons;if(animations.length>0)output.animations=animations;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}},clone:function(recursive){return new this.constructor().copy(this,recursive);},copy:function(source,recursive=true){this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(let i=0;i<source.children.length;i++){const child=source.children[i];this.add(child.clone());}}return this;}});const _vector1=/*@__PURE__*/new Vector3();const _vector2$1=/*@__PURE__*/new Vector3();const _normalMatrix=/*@__PURE__*/new Matrix3();class Plane{constructor(normal=new Vector3(1,0,0),constant=0){// normal is assumed to be normalized\nthis.normal=normal;this.constant=constant;}set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;}setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;}setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;}setFromCoplanarPoints(a,b,c){const normal=_vector1.subVectors(c,b).cross(_vector2$1.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;}copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;}normalize(){// Note: will lead to a divide by zero if the plane is invalid.\nconst inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;}negate(){this.constant*=-1;this.normal.negate();return this;}distanceToPoint(point){return this.normal.dot(point)+this.constant;}distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;}projectPoint(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);}intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3();}const direction=line.delta(_vector1);const denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn null;}const t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return null;}return target.copy(direction).multiplyScalar(t).add(line.start);}intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nconst startSign=this.distanceToPoint(line.start);const endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;}intersectsBox(box){return box.intersectsPlane(this);}intersectsSphere(sphere){return sphere.intersectsPlane(this);}coplanarPoint(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.constant);}applyMatrix4(matrix,optionalNormalMatrix){const normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);const referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);const normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;}translate(offset){this.constant-=offset.dot(this.normal);return this;}equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}clone(){return new this.constructor().copy(this);}}Plane.prototype.isPlane=true;const _v0$1=/*@__PURE__*/new Vector3();const _v1$3=/*@__PURE__*/new Vector3();const _v2$2=/*@__PURE__*/new Vector3();const _v3$1=/*@__PURE__*/new Vector3();const _vab=/*@__PURE__*/new Vector3();const _vac=/*@__PURE__*/new Vector3();const _vbc=/*@__PURE__*/new Vector3();const _vap=/*@__PURE__*/new Vector3();const _vbp=/*@__PURE__*/new Vector3();const _vcp=/*@__PURE__*/new Vector3();class Triangle{constructor(a=new Vector3(),b=new Vector3(),c=new Vector3()){this.a=a;this.b=b;this.c=c;}static getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3();}target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);const targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);}// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nstatic getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$2.subVectors(point,a);const dot00=_v0$1.dot(_v0$1);const dot01=_v0$1.dot(_v1$3);const dot02=_v0$1.dot(_v2$2);const dot11=_v1$3.dot(_v1$3);const dot12=_v1$3.dot(_v2$2);const denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3();}// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}const invDenom=1/denom;const u=(dot11*dot02-dot01*dot12)*invDenom;const v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);}static containsPoint(point,a,b,c){this.getBarycoord(point,a,b,c,_v3$1);return _v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1;}static getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3$1);target.set(0,0);target.addScaledVector(uv1,_v3$1.x);target.addScaledVector(uv2,_v3$1.y);target.addScaledVector(uv3,_v3$1.z);return target;}static isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing\nreturn _v0$1.cross(_v1$3).dot(direction)<0?true:false;}set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;}setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;}clone(){return new this.constructor().copy(this);}copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;}getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;}getMidpoint(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);}getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);}getPlane(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Plane();}return target.setFromCoplanarPoints(this.a,this.b,this.c);}getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);}getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);}containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);}isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);}intersectsBox(box){return box.intersectsTriangle(this);}closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3();}const a=this.a,b=this.b,c=this.c;let v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\n_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);const d1=_vab.dot(_vap);const d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}_vbp.subVectors(p,b);const d3=_vab.dot(_vbp);const d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}const vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);const d5=_vab.dot(_vcp);const d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}const vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(_vac,w);}const va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(_vbc,w);// edge region of BC\n}// face region\nconst denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);}equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}}let materialId=0;function Material(){Object.defineProperty(this,'id',{value:materialId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Material';this.fog=true;this.blending=NormalBlending;this.side=FrontSide;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=0xff;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=0xff;this.stencilFail=KeepStencilOp;this.stencilZFail=KeepStencilOp;this.stencilZPass=KeepStencilOp;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material\nthis.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.alphaToCoverage=false;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:true,onBeforeCompile:function/* shaderobject, renderer */(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString();},setValues:function(values){if(values===undefined)return;for(const key in values){const newValue=values[key];if(newValue===undefined){console.warn('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}const currentValue=this[key];if(currentValue===undefined){console.warn('THREE.'+this.type+': \\''+key+'\\' is not a property of this material.');continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}},toJSON:function(meta){const isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}const data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)data.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture){data.lightMap=this.lightMap.toJSON(meta).uuid;data.lightMapIntensity=this.lightMapIntensity;}if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;data.reflectivity=this.reflectivity;// Scale behind envMap\ndata.refractionRatio=this.refractionRatio;if(this.combine!==undefined)data.combine=this.combine;if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;}if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.size!==undefined)data.size=this.size;if(this.shadowSide!==null)data.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.colorWrite=this.colorWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)\nif(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)data.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.morphNormals===true)data.morphNormals=true;if(this.skinning===true)data.skinning=true;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(srcPlanes!==null){const n=srcPlanes.length;dstPlanes=new Array(n);for(let i=0;i!==n;++i){dstPlanes[i]=srcPlanes[i].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});Object.defineProperty(Material.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});const _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};const _hslA={h:0,s:0,l:0};const _hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}class Color{constructor(r,g,b){if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;}setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;}setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;}setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;}setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=MathUtils.euclideanModulo(h,1);s=MathUtils.clamp(s,0,1);l=MathUtils.clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{const p=l<=0.5?l*(1+s):l+s-l*s;const q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;}setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}let m;if(m=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)){// rgb / hsl\nlet color;const name=m[1];const components=m[2];switch(name){case'rgb':case'rgba':if(color=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[4]);return this;}if(color=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[4]);return this;}break;case'hsl':case'hsla':if(color=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nconst h=parseFloat(color[1])/360;const s=parseInt(color[2],10)/100;const l=parseInt(color[3],10)/100;handleAlpha(color[4]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f\\d]+)$/.exec(style)){// hex color\nconst hex=m[1];const size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;}setColorName(style){// color keywords\nconst hex=_colorKeywords[style];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}return this;}clone(){return new this.constructor(this.r,this.g,this.b);}copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;}copyGammaToLinear(color,gammaFactor=2.0){this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;}copyLinearToGamma(color,gammaFactor=2.0){const safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;}convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;}convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;}copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;}copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;}convertSRGBToLinear(){this.copySRGBToLinear(this);return this;}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;}getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);}getHSL(target){// h,s,l ranges are in 0.0 - 1.0\nif(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}const r=this.r,g=this.g,b=this.b;const max=Math.max(r,g,b);const min=Math.min(r,g,b);let hue,saturation;const lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{const delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;}getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';}offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;}add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;}addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;}addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;}sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;}multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;}multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;}lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;}lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this;}lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);const h=MathUtils.lerp(_hslA.h,_hslB.h,alpha);const s=MathUtils.lerp(_hslA.s,_hslB.s,alpha);const l=MathUtils.lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;}fromArray(array,offset=0){this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;}fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);if(attribute.normalized===true){// assuming Uint8Array\nthis.r/=255;this.g/=255;this.b/=255;}return this;}toJSON(){return this.getHex();}}Color.NAMES=_colorKeywords;Color.prototype.isColor=true;Color.prototype.r=1;Color.prototype.g=1;Color.prototype.b=1;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */class MeshBasicMaterial extends Material{constructor(parameters){super();this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this;}}MeshBasicMaterial.prototype.isMeshBasicMaterial=true;const _vector$9=new Vector3();const _vector2=new Vector2();function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(BufferAttribute.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:true,onUploadCallback:function(){},setUsage:function(value){this.usage=value;return this;},copy:function(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;},copyAt:function(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(let i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},copyArray:function(array){this.array.set(array);return this;},copyColorsArray:function(colors){const array=this.array;let offset=0;for(let i=0,l=colors.length;i<l;i++){let color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;},copyVector2sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;},copyVector3sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;},copyVector4sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;},applyMatrix3:function(m){if(this.itemSize===2){for(let i=0,l=this.count;i<l;i++){_vector2.fromBufferAttribute(this,i);_vector2.applyMatrix3(m);this.setXY(i,_vector2.x,_vector2.y);}}else if(this.itemSize===3){for(let i=0,l=this.count;i<l;i++){_vector$9.fromBufferAttribute(this,i);_vector$9.applyMatrix3(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}}return this;},applyMatrix4:function(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyMatrix4(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;},applyNormalMatrix:function(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyNormalMatrix(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;},transformDirection:function(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.transformDirection(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;},set:function(value,offset=0){this.array.set(value,offset);return this;},getX:function(index){return this.array[index*this.itemSize];},setX:function(index,x){this.array[index*this.itemSize]=x;return this;},getY:function(index){return this.array[index*this.itemSize+1];},setY:function(index,y){this.array[index*this.itemSize+1]=y;return this;},getZ:function(index){return this.array[index*this.itemSize+2];},setZ:function(index,z){this.array[index*this.itemSize+2]=z;return this;},getW:function(index){return this.array[index*this.itemSize+3];},setW:function(index,w){this.array[index*this.itemSize+3]=w;return this;},setXY:function(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;},onUpload:function(callback){this.onUploadCallback=callback;return this;},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this);},toJSON:function(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};if(this.name!=='')data.name=this.name;if(this.usage!==StaticDrawUsage)data.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)data.updateRange=this.updateRange;return data;}});//\nfunction Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized);}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized);}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized);}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),itemSize,normalized);}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized);}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized);}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Float16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float16BufferAttribute.prototype.constructor=Float16BufferAttribute;Float16BufferAttribute.prototype.isFloat16BufferAttribute=true;function Float32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),itemSize,normalized);}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized);}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;function arrayMax(array){if(array.length===0)return-Infinity;let max=array[0];for(let i=1,l=array.length;i<l;++i){if(array[i]>max)max=array[i];}return max;}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer);}let _id=0;const _m1=new Matrix4();const _obj=new Object3D();const _offset=new Vector3();const _box$1=new Box3();const _boxMorphTargets=new Box3();const _vector$8=new Vector3();function BufferGeometry(){Object.defineProperty(this,'id',{value:_id++});this.uuid=MathUtils.generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:true,getIndex:function(){return this.index;},setIndex:function(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}return this;},getAttribute:function(name){return this.attributes[name];},setAttribute:function(name,attribute){this.attributes[name]=attribute;return this;},deleteAttribute:function(name){delete this.attributes[name];return this;},hasAttribute:function(name){return this.attributes[name]!==undefined;},addGroup:function(start,count,materialIndex=0){this.groups.push({start:start,count:count,materialIndex:materialIndex});},clearGroups:function(){this.groups=[];},setDrawRange:function(start,count){this.drawRange.start=start;this.drawRange.count=count;},applyMatrix4:function(matrix){const position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}const normal=this.attributes.normal;if(normal!==undefined){const normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}const tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;},rotateX:function(angle){// rotate geometry around world x-axis\n_m1.makeRotationX(angle);this.applyMatrix4(_m1);return this;},rotateY:function(angle){// rotate geometry around world y-axis\n_m1.makeRotationY(angle);this.applyMatrix4(_m1);return this;},rotateZ:function(angle){// rotate geometry around world z-axis\n_m1.makeRotationZ(angle);this.applyMatrix4(_m1);return this;},translate:function(x,y,z){// translate geometry\n_m1.makeTranslation(x,y,z);this.applyMatrix4(_m1);return this;},scale:function(x,y,z){// scale geometry\n_m1.makeScale(x,y,z);this.applyMatrix4(_m1);return this;},lookAt:function(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;},setFromPoints:function(points){const position=[];for(let i=0,l=points.length;i<l;i++){const point=points[i];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new Box3();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(+Infinity,+Infinity,+Infinity));return;}if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_box$1.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(this.boundingBox.min,_box$1.min);this.boundingBox.expandByPoint(_vector$8);_vector$8.addVectors(this.boundingBox.max,_box$1.max);this.boundingBox.expandByPoint(_vector$8);}else{this.boundingBox.expandByPoint(_box$1.min);this.boundingBox.expandByPoint(_box$1.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingSphere.set(new Vector3(),Infinity);return;}if(position){// first, find the center of the bounding sphere\nconst center=this.boundingSphere.center;_box$1.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(_box$1.min,_boxMorphTargets.min);_box$1.expandByPoint(_vector$8);_vector$8.addVectors(_box$1.max,_boxMorphTargets.max);_box$1.expandByPoint(_vector$8);}else{_box$1.expandByPoint(_boxMorphTargets.min);_box$1.expandByPoint(_boxMorphTargets.max);}}}_box$1.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nlet maxRadiusSq=0;for(let i=0,il=position.count;i<il;i++){_vector$8.fromBufferAttribute(position,i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];const morphTargetsRelative=this.morphTargetsRelative;for(let j=0,jl=morphAttribute.count;j<jl;j++){_vector$8.fromBufferAttribute(morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$8.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}},computeFaceNormals:function(){// backwards compatibility\n},computeTangents:function(){const index=this.index;const attributes=this.attributes;// based on http://www.terathon.com/code/tangent.html\n// (per vertex tangents)\nif(index===null||attributes.position===undefined||attributes.normal===undefined||attributes.uv===undefined){console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');return;}const indices=index.array;const positions=attributes.position.array;const normals=attributes.normal.array;const uvs=attributes.uv.array;const nVertices=positions.length/3;if(attributes.tangent===undefined){this.setAttribute('tangent',new BufferAttribute(new Float32Array(4*nVertices),4));}const tangents=attributes.tangent.array;const tan1=[],tan2=[];for(let i=0;i<nVertices;i++){tan1[i]=new Vector3();tan2[i]=new Vector3();}const vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),sdir=new Vector3(),tdir=new Vector3();function handleTriangle(a,b,c){vA.fromArray(positions,a*3);vB.fromArray(positions,b*3);vC.fromArray(positions,c*3);uvA.fromArray(uvs,a*2);uvB.fromArray(uvs,b*2);uvC.fromArray(uvs,c*2);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);const r=1.0/(uvB.x*uvC.y-uvC.x*uvB.y);// silently ignore degenerate uv triangles having coincident or colinear vertices\nif(!isFinite(r))return;sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r);tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}let groups=this.groups;if(groups.length===0){groups=[{start:0,count:indices.length}];}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleTriangle(indices[j+0],indices[j+1],indices[j+2]);}}const tmp=new Vector3(),tmp2=new Vector3();const n=new Vector3(),n2=new Vector3();function handleVertex(v){n.fromArray(normals,v*3);n2.copy(n);const t=tan1[v];// Gram-Schmidt orthogonalize\ntmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();// Calculate handedness\ntmp2.crossVectors(n2,t);const test=tmp2.dot(tan2[v]);const w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleVertex(indices[j+0]);handleVertex(indices[j+1]);handleVertex(indices[j+2]);}}},computeVertexNormals:function(){const index=this.index;const positionAttribute=this.getAttribute('position');if(positionAttribute!==undefined){let normalAttribute=this.getAttribute('normal');if(normalAttribute===undefined){normalAttribute=new BufferAttribute(new Float32Array(positionAttribute.count*3),3);this.setAttribute('normal',normalAttribute);}else{// reset existing normals to zero\nfor(let i=0,il=normalAttribute.count;i<il;i++){normalAttribute.setXYZ(i,0,0,0);}}const pA=new Vector3(),pB=new Vector3(),pC=new Vector3();const nA=new Vector3(),nB=new Vector3(),nC=new Vector3();const cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){for(let i=0,il=index.count;i<il;i+=3){const vA=index.getX(i+0);const vB=index.getX(i+1);const vC=index.getX(i+2);pA.fromBufferAttribute(positionAttribute,vA);pB.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z);}}else{// non-indexed elements (unconnected triangle soup)\nfor(let i=0,il=positionAttribute.count;i<il;i+=3){pA.fromBufferAttribute(positionAttribute,i+0);pB.fromBufferAttribute(positionAttribute,i+1);pC.fromBufferAttribute(positionAttribute,i+2);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normalAttribute.setXYZ(i+0,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+1,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+2,cb.x,cb.y,cb.z);}}this.normalizeNormals();normalAttribute.needsUpdate=true;}},merge:function(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}const attributes=this.attributes;for(const key in attributes){if(geometry.attributes[key]===undefined)continue;const attribute1=attributes[key];const attributeArray1=attribute1.array;const attribute2=geometry.attributes[key];const attributeArray2=attribute2.array;const attributeOffset=attribute2.itemSize*offset;const length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(let i=0,j=attributeOffset;i<length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;},normalizeNormals:function(){const normals=this.attributes.normal;for(let i=0,il=normals.count;i<il;i++){_vector$8.fromBufferAttribute(normals,i);_vector$8.normalize();normals.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);}},toNonIndexed:function(){function convertBufferAttribute(attribute,indices){const array=attribute.array;const itemSize=attribute.itemSize;const normalized=attribute.normalized;const array2=new array.constructor(indices.length*itemSize);let index=0,index2=0;for(let i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(let j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');return this;}const geometry2=new BufferGeometry();const indices=this.index.array;const attributes=this.attributes;// attributes\nfor(const name in attributes){const attribute=attributes[name];const newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes\nconst morphAttributes=this.morphAttributes;for(const name in morphAttributes){const morphArray=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,il=morphAttribute.length;i<il;i++){const attribute=morphAttribute[i];const newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups\nconst groups=this.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;},toJSON:function(){const data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){const parameters=this.parameters;for(const key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}// for simplicity the code assumes attributes are not shared across geometries, see #15811\ndata.data={attributes:{}};const index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}const attributes=this.attributes;for(const key in attributes){const attribute=attributes[key];data.data.attributes[key]=attribute.toJSON(data.data);}const morphAttributes={};let hasMorphAttributes=false;for(const key in this.morphAttributes){const attributeArray=this.morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];array.push(attribute.toJSON(data.data));}if(array.length>0){morphAttributes[key]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}const groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}const boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;},clone:function(){/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */return new BufferGeometry().copy(this);},copy:function(source){// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// used for storing cloned, shared data\nconst data={};// name\nthis.name=source.name;// index\nconst index=source.index;if(index!==null){this.setIndex(index.clone(data));}// attributes\nconst attributes=source.attributes;for(const name in attributes){const attribute=attributes[name];this.setAttribute(name,attribute.clone(data));}// morph attributes\nconst morphAttributes=source.morphAttributes;for(const name in morphAttributes){const array=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone(data));}this.morphAttributes[name]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups\nconst groups=source.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nconst boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nconst boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});const _inverseMatrix$2=new Matrix4();const _ray$2=new Ray();const _sphere$3=new Sphere();const _vA$1=new Vector3();const _vB$1=new Vector3();const _vC$1=new Vector3();const _tempA=new Vector3();const _tempB=new Vector3();const _tempC=new Vector3();const _morphA=new Vector3();const _morphB=new Vector3();const _morphC=new Vector3();const _uvA$1=new Vector2();const _uvB$1=new Vector2();const _uvC$1=new Vector2();const _intersectionPoint=new Vector3();const _intersectionPointWorld=new Vector3();function Mesh(geometry=new BufferGeometry(),material=new MeshBasicMaterial()){Object3D.call(this);this.type='Mesh';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:true,copy:function(source){Object3D.prototype.copy.call(this,source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}this.material=source.material;this.geometry=source.geometry;return this;},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},raycast:function(raycaster,intersects){const geometry=this.geometry;const material=this.material;const matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//\n_inverseMatrix$2.copy(matrixWorld).invert();_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(_ray$2.intersectsBox(geometry.boundingBox)===false)return;}let intersection;if(geometry.isBufferGeometry){const index=geometry.index;const position=geometry.attributes.position;const morphPosition=geometry.morphAttributes.position;const morphTargetsRelative=geometry.morphTargetsRelative;const uv=geometry.attributes.uv;const uv2=geometry.attributes.uv2;const groups=geometry.groups;const drawRange=geometry.drawRange;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=index.getX(j);const b=index.getX(j+1);const c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=index.getX(i);const b=index.getX(i+1);const c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=j;const b=j+1;const c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(position.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=i;const b=i+1;const c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}});function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){let intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA$1.fromBufferAttribute(position,a);_vB$1.fromBufferAttribute(position,b);_vC$1.fromBufferAttribute(position,c);const morphInfluences=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(let i=0,il=morphPosition.length;i<il;i++){const influence=morphInfluences[i];const morphAttribute=morphPosition[i];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA$1),influence);_morphB.addScaledVector(_tempB.sub(_vB$1),influence);_morphC.addScaledVector(_tempC.sub(_vC$1),influence);}}_vA$1.add(_morphA);_vB$1.add(_morphB);_vC$1.add(_morphC);}if(object.isSkinnedMesh&&material.skinning){object.boneTransform(a,_vA$1);object.boneTransform(b,_vB$1);object.boneTransform(c,_vC$1);}const intersection=checkIntersection(object,material,raycaster,ray,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(intersection){if(uv){_uvA$1.fromBufferAttribute(uv,a);_uvB$1.fromBufferAttribute(uv,b);_uvC$1.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}if(uv2){_uvA$1.fromBufferAttribute(uv2,a);_uvB$1.fromBufferAttribute(uv2,b);_uvC$1.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}const face={a:a,b:b,c:c,normal:new Vector3(),materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,face.normal);intersection.face=face;}return intersection;}class BoxGeometry extends BufferGeometry{constructor(width=1,height=1,depth=1,widthSegments=1,heightSegments=1,depthSegments=1){super();this.type='BoxGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};const scope=this;// segments\nwidthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet numberOfVertices=0;let groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){const segmentWidth=width/gridX;const segmentHeight=height/gridY;const widthHalf=width/2;const heightHalf=height/2;const depthHalf=depth/2;const gridX1=gridX+1;const gridY1=gridY+1;let vertexCounter=0;let groupCount=0;const vector=new Vector3();// generate vertices, normals and uvs\nfor(let iy=0;iy<gridY1;iy++){const y=iy*segmentHeight-heightHalf;for(let ix=0;ix<gridX1;ix++){const x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=numberOfVertices+ix+gridX1*iy;const b=numberOfVertices+ix+gridX1*(iy+1);const c=numberOfVertices+(ix+1)+gridX1*(iy+1);const d=numberOfVertices+(ix+1)+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}}}/**\n * Uniform Utilities\n */function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy\nconst UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";var default_fragment=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function ShaderMaterial(parameters){Material.call(this);this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog\nthis.lights=false;// set to use scene lights\nthis.clipping=false;// set to use user-defined clipping planes\nthis.skinning=false;// set to use skinning attribute streams\nthis.morphTargets=false;// set to use morph targets\nthis.morphNormals=false;// set to use morph normals\nthis.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\nthis.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=true;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this;};ShaderMaterial.prototype.toJSON=function(meta){const data=Material.prototype.toJSON.call(this,meta);data.glslVersion=this.glslVersion;data.uniforms={};for(const name in this.uniforms){const uniform=this.uniforms[name];const value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;const extensions={};for(const key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;};function Camera(){Object3D.call(this);this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:true,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;},getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.copy(this.matrixWorld).invert();},updateWorldMatrix:function(updateParents,updateChildren){Object3D.prototype.updateWorldMatrix.call(this,updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert();},clone:function(){return new this.constructor().copy(this);}});function PerspectiveCamera(fov=50,aspect=1,near=0.1,far=2000){Camera.call(this);this.type='PerspectiveCamera';this.fov=fov;this.zoom=1;this.near=near;this.far=far;this.focus=10;this.aspect=aspect;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)\nthis.filmOffset=0;// horizontal film offset (same unit as gauge)\nthis.updateProjectionMatrix();}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:true,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;},/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */setFocalLength:function(focalLength){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */const vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=MathUtils.RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();},/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */getFocalLength:function(){const vExtentSlope=Math.tan(MathUtils.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;},getEffectiveFOV:function(){return MathUtils.RAD2DEG*2*Math.atan(Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom);},getFilmWidth:function(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);},/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */setViewOffset:function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function(){const near=this.near;let top=near*Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom;let height=2*top;let width=this.aspect*height;let left=-0.5*width;const view=this.view;if(this.view!==null&&this.view.enabled){const fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}const skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();},toJSON:function(meta){const data=Object3D.prototype.toJSON.call(this,meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}});const fov=90,aspect=1;class CubeCamera extends Object3D{constructor(near,far,renderTarget){super();this.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return;}this.renderTarget=renderTarget;const cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=this.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);const cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);const cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);const cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);const cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);const cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);}update(renderer,scene){if(this.parent===null)this.updateMatrixWorld();const renderTarget=this.renderTarget;const[cameraPX,cameraNX,cameraPY,cameraNY,cameraPZ,cameraNZ]=this.children;const currentXrEnabled=renderer.xr.enabled;const currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;}}class CubeTexture extends Texture{constructor(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;format=format!==undefined?format:RGBFormat;super(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);// Why CubeTexture._needsFlipEnvMap is necessary:\n//\n// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n// when using WebGLCubeRenderTarget.texture as a cube texture.\nthis._needsFlipEnvMap=true;this.flipY=false;}get images(){return this.image;}set images(value){this.image=value;}}CubeTexture.prototype.isCubeTexture=true;class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(size,options,dummy){if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}super(size,size,options);options=options||{};this.texture=new CubeTexture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.texture._needsFlipEnvMap=false;}fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type;this.texture.format=RGBAFormat;// see #18859\nthis.texture.encoding=texture.encoding;this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;const shader={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,fragmentShader:/* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`};const geometry=new BoxGeometry(5,5,5);const material=new ShaderMaterial({name:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;const mesh=new Mesh(geometry,material);const currentMinFilter=texture.minFilter;// Avoid blurred poles\nif(texture.minFilter===LinearMipmapLinearFilter)texture.minFilter=LinearFilter;const camera=new CubeCamera(1,10,this);camera.update(renderer,mesh);texture.minFilter=currentMinFilter;mesh.geometry.dispose();mesh.material.dispose();return this;}clear(renderer,color,depth,stencil){const currentRenderTarget=renderer.getRenderTarget();for(let i=0;i<6;i++){renderer.setRenderTarget(this,i);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);}}WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=true;class DataTexture extends Texture{constructor(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture.prototype.isDataTexture=true;const _sphere$2=/*@__PURE__*/new Sphere();const _vector$7=/*@__PURE__*/new Vector3();class Frustum{constructor(p0=new Plane(),p1=new Plane(),p2=new Plane(),p3=new Plane(),p4=new Plane(),p5=new Plane()){this.planes=[p0,p1,p2,p3,p4,p5];}set(p0,p1,p2,p3,p4,p5){const planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;}copy(frustum){const planes=this.planes;for(let i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;}setFromProjectionMatrix(m){const planes=this.planes;const me=m.elements;const me0=me[0],me1=me[1],me2=me[2],me3=me[3];const me4=me[4],me5=me[5],me6=me[6],me7=me[7];const me8=me[8],me9=me[9],me10=me[10],me11=me[11];const me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;}intersectsObject(object){const geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSprite(sprite){_sphere$2.center.set(0,0,0);_sphere$2.radius=0.7071067811865476;_sphere$2.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSphere(sphere){const planes=this.planes;const center=sphere.center;const negRadius=-sphere.radius;for(let i=0;i<6;i++){const distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;}intersectsBox(box){const planes=this.planes;for(let i=0;i<6;i++){const plane=planes[i];// corner at max distance\n_vector$7.x=plane.normal.x>0?box.max.x:box.min.x;_vector$7.y=plane.normal.y>0?box.max.y:box.min.y;_vector$7.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$7)<0){return false;}}return true;}containsPoint(point){const planes=this.planes;for(let i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}clone(){return new this.constructor().copy(this);}}function WebGLAnimation(){let context=null;let isAnimating=false;let animationLoop=null;let requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame);}return{start:function(){if(isAnimating===true)return;if(animationLoop===null)return;requestId=context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=false;},setAnimationLoop:function(callback){animationLoop=callback;},setContext:function(value){context=value;}};}function WebGLAttributes(gl,capabilities){const isWebGL2=capabilities.isWebGL2;const buffers=new WeakMap();function createBuffer(attribute,bufferType){const array=attribute.array;const usage=attribute.usage;const buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();let type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){if(attribute.isFloat16BufferAttribute){if(isWebGL2){type=5131;}else{console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');}}else{type=5123;}}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){const array=attribute.array;const updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isGLBufferAttribute){const cached=buffers.get(attribute);if(!cached||cached.version<attribute.version){buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});}return;}if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}class PlaneGeometry extends BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super();this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};const width_half=width/2;const height_half=height/2;const gridX=Math.floor(widthSegments);const gridY=Math.floor(heightSegments);const gridX1=gridX+1;const gridY1=gridY+1;const segment_width=width/gridX;const segment_height=height/gridY;//\nconst indices=[];const vertices=[];const normals=[];const uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++){const x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}for(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=ix+gridX1*iy;const b=ix+gridX1*(iy+1);const c=ix+1+gridX1*(iy+1);const d=ix+1+gridX1*iy;indices.push(a,b,d);indices.push(b,c,d);}}this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";var bsdfs=\"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";var common=\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_common_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";var envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";var lights_pars_begin=\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";var lights_toon_fragment=\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";var lights_toon_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";var map_particle_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";var normal_fragment_maps=\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";var clearcoat_normal_fragment_begin=\"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";var clearcoat_normal_fragment_maps=\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";var clearcoat_pars_fragment=\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";var transmissionmap_fragment=\"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";var transmissionmap_pars_fragment=\"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";var uv_pars_fragment=\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";var background_frag=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var background_vert=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var cube_frag=\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var cube_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";var depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";var distanceRGBA_frag=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var distanceRGBA_vert=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var equirect_frag=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var equirect_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshmatcap_frag=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshmatcap_vert=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var meshtoon_frag=\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshtoon_vert=\"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphysical_frag=\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphysical_vert=\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var normal_frag=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var normal_vert=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var shadow_frag=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var shadow_vert=\"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var sprite_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var sprite_vert=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmissionmap_fragment:transmissionmap_fragment,transmissionmap_pars_fragment:transmissionmap_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**\n * Uniforms library for shared webgl shaders\n */const UniformsLib={common:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}}};const ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary\n}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0x000000)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(renderer,cubemaps,state,objects,premultipliedAlpha){const clearColor=new Color(0x000000);let clearAlpha=0;let planeMesh;let boxMesh;let currentBackground=null;let currentBackgroundVersion=0;let currentTonemapping=null;function render(renderList,scene,camera,forceClear){let background=scene.isScene===true?scene.background:null;if(background&&background.isTexture){background=cubemaps.get(background);}// Ignore background in AR\n// TODO: Reconsider this.\nconst xr=renderer.xr;const session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'envMap',{get:function(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&background._needsFlipEnvMap?-1:1;if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function(){return clearColor;},setClearColor:function(color,alpha=1){clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha);},getClearAlpha:function(){return clearAlpha;},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}function WebGLBindingStates(gl,extensions,attributes,capabilities){const maxVertexAttributes=gl.getParameter(34921);const extension=capabilities.isWebGL2?null:extensions.get('OES_vertex_array_object');const vaoAvailable=capabilities.isWebGL2||extension!==null;const bindingStates={};const defaultState=createBindingState(null);let currentState=defaultState;function setup(object,material,program,geometry,index){let updateBuffers=false;if(vaoAvailable){const state=getBindingState(geometry,program,material);if(currentState!==state){currentState=state;bindVertexArrayObject(currentState.object);}updateBuffers=needsUpdate(geometry,index);if(updateBuffers)saveCache(geometry,index);}else{const wireframe=material.wireframe===true;if(currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==wireframe){currentState.geometry=geometry.id;currentState.program=program.id;currentState.wireframe=wireframe;updateBuffers=true;}}if(object.isInstancedMesh===true){updateBuffers=true;}if(index!==null){attributes.update(index,34963);}if(updateBuffers){setupVertexAttributes(object,material,program,geometry);if(index!==null){gl.bindBuffer(34963,attributes.get(index).buffer);}}}function createVertexArrayObject(){if(capabilities.isWebGL2)return gl.createVertexArray();return extension.createVertexArrayOES();}function bindVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.bindVertexArray(vao);return extension.bindVertexArrayOES(vao);}function deleteVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.deleteVertexArray(vao);return extension.deleteVertexArrayOES(vao);}function getBindingState(geometry,program,material){const wireframe=material.wireframe===true;let programMap=bindingStates[geometry.id];if(programMap===undefined){programMap={};bindingStates[geometry.id]=programMap;}let stateMap=programMap[program.id];if(stateMap===undefined){stateMap={};programMap[program.id]=stateMap;}let state=stateMap[wireframe];if(state===undefined){state=createBindingState(createVertexArrayObject());stateMap[wireframe]=state;}return state;}function createBindingState(vao){const newAttributes=[];const enabledAttributes=[];const attributeDivisors=[];for(let i=0;i<maxVertexAttributes;i++){newAttributes[i]=0;enabledAttributes[i]=0;attributeDivisors[i]=0;}return{// for backward compatibility on non-VAO support browser\ngeometry:null,program:null,wireframe:false,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null};}function needsUpdate(geometry,index){const cachedAttributes=currentState.attributes;const geometryAttributes=geometry.attributes;let attributesNum=0;for(const key in geometryAttributes){const cachedAttribute=cachedAttributes[key];const geometryAttribute=geometryAttributes[key];if(cachedAttribute===undefined)return true;if(cachedAttribute.attribute!==geometryAttribute)return true;if(cachedAttribute.data!==geometryAttribute.data)return true;attributesNum++;}if(currentState.attributesNum!==attributesNum)return true;if(currentState.index!==index)return true;return false;}function saveCache(geometry,index){const cache={};const attributes=geometry.attributes;let attributesNum=0;for(const key in attributes){const attribute=attributes[key];const data={};data.attribute=attribute;if(attribute.data){data.data=attribute.data;}cache[key]=data;attributesNum++;}currentState.attributes=cache;currentState.attributesNum=attributesNum;currentState.index=index;}function initAttributes(){const newAttributes=currentState.newAttributes;for(let i=0,il=newAttributes.length;i<il;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;const attributeDivisors=currentState.attributeDivisors;newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){const extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;for(let i=0,il=enabledAttributes.length;i<il;i++){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(capabilities.isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function setupVertexAttributes(object,material,program,geometry){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}initAttributes();const geometryAttributes=geometry.attributes;const programAttributes=program.getAttributes();const materialDefaultAttributeValues=material.defaultAttributeValues;for(const name in programAttributes){const programAttribute=programAttributes[name];if(programAttribute>=0){const geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){const normalized=geometryAttribute.normalized;const size=geometryAttribute.itemSize;const attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;const bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){const data=geometryAttribute.data;const stride=data.stride;const offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(name==='instanceMatrix'){const attribute=attributes.get(object.instanceMatrix);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute+0,1);enableAttributeAndDivisor(programAttribute+1,1);enableAttributeAndDivisor(programAttribute+2,1);enableAttributeAndDivisor(programAttribute+3,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute+0,4,type,false,64,0);gl.vertexAttribPointer(programAttribute+1,4,type,false,64,16);gl.vertexAttribPointer(programAttribute+2,4,type,false,64,32);gl.vertexAttribPointer(programAttribute+3,4,type,false,64,48);}else if(name==='instanceColor'){const attribute=attributes.get(object.instanceColor);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute,3,type,false,12,0);}else if(materialDefaultAttributeValues!==undefined){const value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:gl.vertexAttrib2fv(programAttribute,value);break;case 3:gl.vertexAttrib3fv(programAttribute,value);break;case 4:gl.vertexAttrib4fv(programAttribute,value);break;default:gl.vertexAttrib1fv(programAttribute,value);}}}}}disableUnusedAttributes();}function dispose(){reset();for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometryId];}}function releaseStatesOfGeometry(geometry){if(bindingStates[geometry.id]===undefined)return;const programMap=bindingStates[geometry.id];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometry.id];}function releaseStatesOfProgram(program){for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];if(programMap[program.id]===undefined)continue;const stateMap=programMap[program.id];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[program.id];}}function reset(){resetDefaultState();if(currentState===defaultState)return;currentState=defaultState;bindVertexArrayObject(currentState.object);}// for backward-compatilibity\nfunction resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=false;}return{setup:setup,reset:reset,resetDefaultState:resetDefaultState,dispose:dispose,releaseStatesOfGeometry:releaseStatesOfGeometry,releaseStatesOfProgram:releaseStatesOfProgram,initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes};}function WebGLBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}function WebGLCapabilities(gl,extensions,parameters){let maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */const isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */let precision=parameters.precision!==undefined?parameters.precision:'highp';const maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}const logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;const maxTextures=gl.getParameter(34930);const maxVertexTextures=gl.getParameter(35660);const maxTextureSize=gl.getParameter(3379);const maxCubemapSize=gl.getParameter(34076);const maxAttributes=gl.getParameter(34921);const maxVertexUniforms=gl.getParameter(36347);const maxVaryings=gl.getParameter(36348);const maxFragmentUniforms=gl.getParameter(36349);const vertexTextures=maxVertexTextures>0;const floatFragmentTextures=isWebGL2||extensions.has('OES_texture_float');const floatVertexTextures=vertexTextures&&floatFragmentTextures;const maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}function WebGLClipping(properties){const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false;const plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){const enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;const materialProperties=properties.get(material);if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{const nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4;let dstArray=materialProperties.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,useCache);for(let i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}materialProperties.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=planes!==null?planes.length:0;let dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){const flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}function WebGLCubeMaps(renderer){let cubemaps=new WeakMap();function mapTextureMapping(texture,mapping){if(mapping===EquirectangularReflectionMapping){texture.mapping=CubeReflectionMapping;}else if(mapping===EquirectangularRefractionMapping){texture.mapping=CubeRefractionMapping;}return texture;}function get(texture){if(texture&&texture.isTexture){const mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){const cubemap=cubemaps.get(texture).texture;return mapTextureMapping(cubemap,texture.mapping);}else{const image=texture.image;if(image&&image.height>0){const currentRenderTarget=renderer.getRenderTarget();const renderTarget=new WebGLCubeRenderTarget(image.height/2);renderTarget.fromEquirectangularTexture(renderer,texture);cubemaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);texture.addEventListener('dispose',onTextureDispose);return mapTextureMapping(renderTarget.texture,texture.mapping);}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);const cubemap=cubemaps.get(texture);if(cubemap!==undefined){cubemaps.delete(texture);cubemap.dispose();}}function dispose(){cubemaps=new WeakMap();}return{get:get,dispose:dispose};}function WebGLExtensions(gl){const extensions={};function getExtension(name){if(extensions[name]!==undefined){return extensions[name];}let extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}extensions[name]=extension;return extension;}return{has:function(name){return getExtension(name)!==null;},init:function(capabilities){if(capabilities.isWebGL2){getExtension('EXT_color_buffer_float');}else{getExtension('WEBGL_depth_texture');getExtension('OES_texture_float');getExtension('OES_texture_half_float');getExtension('OES_texture_half_float_linear');getExtension('OES_standard_derivatives');getExtension('OES_element_index_uint');getExtension('OES_vertex_array_object');getExtension('ANGLE_instanced_arrays');}getExtension('OES_texture_float_linear');getExtension('EXT_color_buffer_half_float');},get:function(name){const extension=getExtension(name);if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}return extension;}};}function WebGLGeometries(gl,attributes,info,bindingStates){const geometries={};const wireframeAttributes=new WeakMap();function onGeometryDispose(event){const geometry=event.target;if(geometry.index!==null){attributes.remove(geometry.index);}for(const name in geometry.attributes){attributes.remove(geometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];const attribute=wireframeAttributes.get(geometry);if(attribute){attributes.remove(attribute);wireframeAttributes.delete(geometry);}bindingStates.releaseStatesOfGeometry(geometry);if(geometry.isInstancedBufferGeometry===true){delete geometry._maxInstanceCount;}//\ninfo.memory.geometries--;}function get(object,geometry){if(geometries[geometry.id]===true)return geometry;geometry.addEventListener('dispose',onGeometryDispose);geometries[geometry.id]=true;info.memory.geometries++;return geometry;}function update(geometry){const geometryAttributes=geometry.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.\nfor(const name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nconst morphAttributes=geometry.morphAttributes;for(const name in morphAttributes){const array=morphAttributes[name];for(let i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function updateWireframeAttribute(geometry){const indices=[];const geometryIndex=geometry.index;const geometryPosition=geometry.attributes.position;let version=0;if(geometryIndex!==null){const array=geometryIndex.array;version=geometryIndex.version;for(let i=0,l=array.length;i<l;i+=3){const a=array[i+0];const b=array[i+1];const c=array[i+2];indices.push(a,b,b,c,c,a);}}else{const array=geometryPosition.array;version=geometryPosition.version;for(let i=0,l=array.length/3-1;i<l;i+=3){const a=i+0;const b=i+1;const c=i+2;indices.push(a,b,b,c,c,a);}}const attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;// Updating index buffer in VAO now. See WebGLBindingStates\n//\nconst previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//\nwireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one\nif(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}let type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}function WebGLInfo(gl){const memory={geometries:0,textures:0};const render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}function numericalSort(a,b){return a[0]-b[0];}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){const influencesList={};const morphInfluences=new Float32Array(8);const workInfluences=[];for(let i=0;i<8;i++){workInfluences[i]=[i,0];}function update(object,geometry,material,program){const objectInfluences=object.morphTargetInfluences;// When object doesn't have morph target influences defined, we treat it as a 0-length array\n// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\nconst length=objectInfluences===undefined?0:objectInfluences.length;let influences=influencesList[geometry.id];if(influences===undefined){// initialise list\ninfluences=[];for(let i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}// Collect influences\nfor(let i=0;i<length;i++){const influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);for(let i=0;i<8;i++){if(i<length&&influences[i][1]){workInfluences[i][0]=influences[i][0];workInfluences[i][1]=influences[i][1];}else{workInfluences[i][0]=Number.MAX_SAFE_INTEGER;workInfluences[i][1]=0;}}workInfluences.sort(numericalSort);const morphTargets=material.morphTargets&&geometry.morphAttributes.position;const morphNormals=material.morphNormals&&geometry.morphAttributes.normal;let morphInfluencesSum=0;for(let i=0;i<8;i++){const influence=workInfluences[i];const index=influence[0];const value=influence[1];if(index!==Number.MAX_SAFE_INTEGER&&value){if(morphTargets&&geometry.getAttribute('morphTarget'+i)!==morphTargets[index]){geometry.setAttribute('morphTarget'+i,morphTargets[index]);}if(morphNormals&&geometry.getAttribute('morphNormal'+i)!==morphNormals[index]){geometry.setAttribute('morphNormal'+i,morphNormals[index]);}morphInfluences[i]=value;morphInfluencesSum+=value;}else{if(morphTargets&&geometry.hasAttribute('morphTarget'+i)===true){geometry.deleteAttribute('morphTarget'+i);}if(morphNormals&&geometry.hasAttribute('morphNormal'+i)===true){geometry.deleteAttribute('morphNormal'+i);}morphInfluences[i]=0;}}// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n// This allows us to switch between absolute morphs and relative morphs without changing shader code\n// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\nconst morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}function WebGLObjects(gl,geometries,attributes,info){let updateMap=new WeakMap();function update(object){const frame=info.render.frame;const geometry=object.geometry;const buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateMap.get(buffergeometry)!==frame){geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){if(object.hasEventListener('dispose',onInstancedMeshDispose)===false){object.addEventListener('dispose',onInstancedMeshDispose);}attributes.update(object.instanceMatrix,34962);if(object.instanceColor!==null){attributes.update(object.instanceColor,34962);}}return buffergeometry;}function dispose(){updateMap=new WeakMap();}function onInstancedMeshDispose(event){const instancedMesh=event.target;instancedMesh.removeEventListener('dispose',onInstancedMeshDispose);attributes.remove(instancedMesh.instanceMatrix);if(instancedMesh.instanceColor!==null)attributes.remove(instancedMesh.instanceColor);}return{update:update,dispose:dispose};}class DataTexture2DArray extends Texture{constructor(data=null,width=1,height=1,depth=1){super(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}}DataTexture2DArray.prototype.isDataTexture2DArray=true;class DataTexture3D extends Texture{constructor(data=null,width=1,height=1,depth=1){// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\nsuper(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}}DataTexture3D.prototype.isDataTexture3D=true;/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */const emptyTexture=new Texture();const emptyTexture2dArray=new DataTexture2DArray();const emptyTexture3d=new DataTexture3D();const emptyCubeTexture=new CubeTexture();// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nconst arrayCacheF32=[];const arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nconst mat4array=new Float32Array(16);const mat3array=new Float32Array(9);const mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){const firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nconst n=nBlocks*blockSize;let r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(let i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(let i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(let i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation\nfunction allocTexUnits(textures,n){let r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(let i=0;i!==n;++i){r[i]=textures.allocateTextureUnit();}return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValueV1f(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValueV2f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or THREE.MatrixN)\nfunction setValueM2(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single integer / boolean\nfunction setValueV1i(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}// Single integer / boolean vector (from flat array)\nfunction setValueV2i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// Single unsigned integer\nfunction setValueV1ui(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Single unsigned integer vector (from flat array)\nfunction setValueV2ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2uiv(this.addr,v);copyArray(cache,v);}function setValueV3ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3uiv(this.addr,v);copyArray(cache,v);}function setValueV4ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4uiv(this.addr,v);copyArray(cache,v);}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT3D1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}function setValueT2DArray1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT\ncase 0x8b50:return setValueV2f;// _VEC2\ncase 0x8b51:return setValueV3f;// _VEC3\ncase 0x8b52:return setValueV4f;// _VEC4\ncase 0x8b5a:return setValueM2;// _MAT2\ncase 0x8b5b:return setValueM3;// _MAT3\ncase 0x8b5c:return setValueM4;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2i;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3i;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4i;// _VEC4\ncase 0x1405:return setValueV1ui;// UINT\ncase 0x8dc6:return setValueV2ui;// _VEC2\ncase 0x8dc7:return setValueV3ui;// _VEC3\ncase 0x8dc8:return setValueV4ui;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1;case 0x8b5f:// SAMPLER_3D\ncase 0x8dcb:// INT_SAMPLER_3D\ncase 0x8dd3:// UNSIGNED_INT_SAMPLER_3D\nreturn setValueT3D1;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY\ncase 0x8dcf:// INT_SAMPLER_2D_ARRAY\ncase 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY\ncase 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW\nreturn setValueT2DArray1;}}// Array of scalars\nfunction setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Array of vectors (from flat array or array of THREE.VectorN)\nfunction setValueV2fArray(gl,v){const data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){const data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){const data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (from flat array or array of THREE.MatrixN)\nfunction setValueM2Array(gl,v){const data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){const data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){const data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of integer / boolean\nfunction setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}// Array of integer / boolean vectors (from flat array)\nfunction setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of unsigned integer\nfunction setValueV1uiArray(gl,v){gl.uniform1uiv(this.addr,v);}// Array of unsigned integer vectors (from flat array)\nfunction setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v);}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v);}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v);}// Array of textures (2D / Cube)\nfunction setValueT1Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT\ncase 0x8b50:return setValueV2fArray;// _VEC2\ncase 0x8b51:return setValueV3fArray;// _VEC3\ncase 0x8b52:return setValueV4fArray;// _VEC4\ncase 0x8b5a:return setValueM2Array;// _MAT2\ncase 0x8b5b:return setValueM3Array;// _MAT3\ncase 0x8b5c:return setValueM4Array;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4\ncase 0x1405:return setValueV1uiArray;// UINT\ncase 0x8dc6:return setValueV2uiArray;// _VEC2\ncase 0x8dc7:return setValueV3uiArray;// _VEC3\ncase 0x8dc8:return setValueV4uiArray;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1Array;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6Array;}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){const cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){const seq=this.seq;for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nconst RePathPart=/(\\w+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){const path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){const match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;let id=match[1];const idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nconst map=container.map;let next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program){this.seq=[];this.map={};const n=gl.getProgramParameter(program,35718);for(let i=0;i<n;++i){const info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){const u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){const v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,textures){for(let i=0,n=seq.length;i!==n;++i){const u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){const r=[];for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];if(u.id in values)r.push(u);}return r;};function WebGLShader(gl,type,string){const shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}let programIdCount=0;function addLineNumbers(string){const lines=string.split('\\n');for(let i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:console.warn('THREE.WebGLProgram: Unsupported encoding:',encoding);return['Linear','( value )'];}}function getShaderErrors(gl,shader,type){const status=gl.getShaderParameter(shader,35713);const log=gl.getShaderInfoLog(shader).trim();if(status&&log==='')return'';// --enable-privileged-webgl-extension\n// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nconst source=gl.getShaderSource(shader);return'THREE.WebGLShader: gl.getShaderInfoLog() '+type+'\\n'+log+addLineNumbers(source);}function getTexelDecodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){let toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;case CustomToneMapping:toneMappingName='Custom';break;default:console.warn('THREE.WebGLProgram: Unsupported toneMapping:',toneMapping);toneMappingName='Linear';}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){const chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){const chunks=[];for(const name in defines){const value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){const attributes={};const n=gl.getProgramParameter(program,35721);for(let i=0;i<n;i++){const info=gl.getActiveAttrib(program,i);const name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes\nconst includePattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){const string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops\nconst deprecatedUnrollLoopPattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;const unrollLoopPattern=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){let string='';for(let i=parseInt(start);i<parseInt(end);i++){string+=snippet.replace(/\\[\\s*i\\s*\\]/g,'[ '+i+' ]').replace(/UNROLLED_LOOP_INDEX/g,i);}return string;}//\nfunction generatePrecision(parameters){let precisionstring='precision '+parameters.precision+' float;\\nprecision '+parameters.precision+' int;';if(parameters.precision==='highp'){precisionstring+='\\n#define HIGH_PRECISION';}else if(parameters.precision==='mediump'){precisionstring+='\\n#define MEDIUM_PRECISION';}else if(parameters.precision==='lowp'){precisionstring+='\\n#define LOW_PRECISION';}return precisionstring;}function generateShadowMapTypeDefine(parameters){let shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){let envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){let envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){let envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){const gl=renderer.getContext();const defines=parameters.defines;let vertexShader=parameters.vertexShader;let fragmentShader=parameters.fragmentShader;const shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);const envMapTypeDefine=generateEnvMapTypeDefine(parameters);const envMapModeDefine=generateEnvMapModeDefine(parameters);const envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);const gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;const customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);const customDefines=generateDefines(defines);const program=gl.createProgram();let prefixVertex,prefixFragment;let versionString=parameters.glslVersion?'#version '+parameters.glslVersion+'\\n':'';if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.instancingColor?'#define USE_INSTANCING_COLOR':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#if defined( USE_COLOR_ALPHA )','\tattribute vec4 color;','#elif defined( USE_COLOR )','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer\n'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.sheen?'#define USE_SHEEN':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors||parameters.instancingColor?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',ShaderChunk['encodings_pars_fragment'],// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.map?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcap?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMap?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMap?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.lightMap?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding),parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&parameters.isRawShaderMaterial!==true){// GLSL 3.0 conversion for built-in materials and ShaderMaterial\nversionString='#version 300 es\\n';prefixVertex=['#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#define varying in',parameters.glslVersion===GLSL3?'':'out highp vec4 pc_fragColor;',parameters.glslVersion===GLSL3?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}const vertexGlsl=versionString+prefixVertex+vertexShader;const fragmentGlsl=versionString+prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nconst glVertexShader=WebGLShader(gl,35633,vertexGlsl);const glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors\nif(renderer.debug.checkShaderErrors){const programLog=gl.getProgramInfoLog(program).trim();const vertexLog=gl.getShaderInfoLog(glVertexShader).trim();const fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();let runnable=true;let haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;const vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');const fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexErrors,fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up\n// Crashes in iOS9 and iOS10. #18402\n// gl.detachShader( program, glVertexShader );\n// gl.detachShader( program, glFragmentShader );\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nlet cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations\nlet cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);this.program=undefined;};//\nthis.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}function WebGLPrograms(renderer,cubemaps,extensions,capabilities,bindingStates,clipping){const programs=[];const isWebGL2=capabilities.isWebGL2;const logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;const floatVertexTextures=capabilities.floatVertexTextures;const maxVertexUniforms=capabilities.maxVertexUniforms;const vertexTextures=capabilities.vertexTextures;let precision=capabilities.precision;const shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};const parameterNames=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','vertexAlphas','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','sheen','transmissionMap'];function getMaxBones(object){const skeleton=object.skeleton;const bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nconst nVertexUniforms=maxVertexUniforms;const nVertexMatrices=Math.floor((nVertexUniforms-20)/4);const maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){let encoding;if(map&&map.isTexture){encoding=map.encoding;}else if(map&&map.isWebGLRenderTarget){console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');encoding=map.texture.encoding;}else{encoding=LinearEncoding;}return encoding;}function getParameters(material,lights,shadows,scene,object){const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const envMap=cubemaps.get(material.envMap||environment);const shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nconst maxBones=object.isSkinnedMesh?getMaxBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}let vertexShader,fragmentShader;if(shaderID){const shader=ShaderLib[shaderID];vertexShader=shader.vertexShader;fragmentShader=shader.fragmentShader;}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;}const currentRenderTarget=renderer.getRenderTarget();const parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:material.type,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial===true,glslVersion:material.glslVersion,precision:precision,instancing:object.isInstancedMesh===true,instancingColor:object.isInstancedMesh===true&&object.instanceColor!==null,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,transmissionMap:!!material.transmissionMap,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexAlphas:material.vertexColors===true&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap||!!material.transmissionMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap||!!material.transmissionMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:!!material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:material.skinning&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.has('EXT_frag_depth'),rendererExtensionDrawBuffers:isWebGL2||extensions.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:isWebGL2||extensions.has('EXT_shader_texture_lod'),customProgramCacheKey:material.customProgramCacheKey()};return parameters;}function getProgramCacheKey(parameters){const array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(const name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===false){for(let i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.customProgramCacheKey);return array.join();}function getUniforms(material){const shaderID=shaderIDs[material.type];let uniforms;if(shaderID){const shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms);}else{uniforms=material.uniforms;}return uniforms;}function acquireProgram(parameters,cacheKey){let program;// Check if code has been already compiled\nfor(let p=0,pl=programs.length;p<pl;p++){const preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates);programs.push(program);}return program;}function releaseProgram(program){if(--program.usedTimes===0){// Remove from unordered set\nconst i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}}return{getParameters:getParameters,getProgramCacheKey:getProgramCacheKey,getUniforms:getUniforms,acquireProgram:acquireProgram,releaseProgram:releaseProgram,// Exposed for resource monitoring & error feedback via renderer.info:\nprograms:programs};}function WebGLProperties(){let properties=new WeakMap();function get(object){let map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(properties){const renderItems=[];let renderItemsIndex=0;const opaque=[];const transparent=[];const defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){let renderItem=renderItems[renderItemsIndex];const materialProperties=properties.get(material);if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:materialProperties.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=materialProperties.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).push(renderItem);}function unshift(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).unshift(renderItem);}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list\nfor(let i=renderItemsIndex,il=renderItems.length;i<il;i++){const renderItem=renderItems[i];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(properties){let lists=new WeakMap();function get(scene,renderCallDepth){let list;if(lists.has(scene)===false){list=new WebGLRenderList(properties);lists.set(scene,[list]);}else{if(renderCallDepth>=lists.get(scene).length){list=new WebGLRenderList(properties);lists.get(scene).push(list);}else{list=lists.get(scene)[renderCallDepth];}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}function UniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms\n}lights[light.id]=uniforms;return uniforms;}};}let nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(extensions,capabilities){const cache=new UniformsCache();const shadowCache=ShadowUniformsCache();const state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)state.probe.push(new Vector3());const vector3=new Vector3();const matrix4=new Matrix4();const matrix42=new Matrix4();function setup(lights){let r=0,g=0,b=0;for(let i=0;i<9;i++)state.probe[i].set(0,0,0);let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;let numDirectionalShadows=0;let numPointShadows=0;let numSpotShadows=0;lights.sort(shadowCastingLightsFirst);for(let i=0,l=lights.length;i<l;i++){const light=lights[i];const color=light.color;const intensity=light.intensity;const distance=light.distance;const shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isLightProbe){for(let j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){const uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.spotShadow[spotLength]=shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){const uniforms=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\nuniforms.color.copy(color).multiplyScalar(intensity);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);state.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;shadowUniforms.shadowCameraNear=shadow.camera.near;shadowUniforms.shadowCameraFar=shadow.camera.far;state.pointShadow[pointLength]=shadowUniforms;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){const uniforms=cache.get(light);uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}if(rectAreaLength>0){if(capabilities.isWebGL2){// WebGL 2\nstate.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else{// WebGL 1\nif(extensions.has('OES_texture_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else if(extensions.has('OES_texture_half_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_HALF_1;state.rectAreaLTC2=UniformsLib.LTC_HALF_2;}else{console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');}}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;const hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}function setupView(lights,camera){let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;const viewMatrix=camera.matrixWorldInverse;for(let i=0,l=lights.length;i<l;i++){const light=lights[i];if(light.isDirectionalLight){const uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);directionalLength++;}else if(light.isSpotLight){const uniforms=state.spot[spotLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);spotLength++;}else if(light.isRectAreaLight){const uniforms=state.rectArea[rectAreaLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);rectAreaLength++;}else if(light.isPointLight){const uniforms=state.point[pointLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);pointLength++;}else if(light.isHemisphereLight){const uniforms=state.hemi[hemiLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();hemiLength++;}}}return{setup:setup,setupView:setupView,state:state};}function WebGLRenderState(extensions,capabilities){const lights=new WebGLLights(extensions,capabilities);const lightsArray=[];const shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(){lights.setup(lightsArray);}function setupLightsView(camera){lights.setupView(lightsArray,camera);}const state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,setupLightsView:setupLightsView,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(extensions,capabilities){let renderStates=new WeakMap();function get(scene,renderCallDepth=0){let renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState(extensions,capabilities);renderStates.set(scene,[renderState]);}else{if(renderCallDepth>=renderStates.get(scene).length){renderState=new WebGLRenderState(extensions,capabilities);renderStates.get(scene).push(renderState);}else{renderState=renderStates.get(scene)[renderCallDepth];}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */class MeshDepthMaterial extends Material{constructor(parameters){super();this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;}}MeshDepthMaterial.prototype.isMeshDepthMaterial=true;/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */class MeshDistanceMaterial extends Material{constructor(parameters){super();this.type='MeshDistanceMaterial';this.referencePosition=new Vector3();this.nearDistance=1;this.farDistance=1000;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;}}MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;var vsm_frag=\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";var vsm_vert=\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";function WebGLShadowMap(_renderer,_objects,_capabilities){let _frustum=new Frustum();const _shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterials=[],_distanceMaterials=[],_materialCache={},_maxTextureSize=_capabilities.maxTextureSize;const shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};const shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:2.0/8.0,HALF_SAMPLE_RATE:1.0/8.0},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0}},vertexShader:vsm_vert,fragmentShader:vsm_frag});const shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;const fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute('position',new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));const fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);const scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;const currentRenderTarget=_renderer.getRenderTarget();const activeCubeFace=_renderer.getActiveCubeFace();const activeMipmapLevel=_renderer.getActiveMipmapLevel();const _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nfor(let i=0,il=lights.length;i<il;i++){const light=lights[i];const shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}if(shadow.autoUpdate===false&&shadow.needsUpdate===false)continue;_shadowMapSize.copy(shadow.mapSize);const shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize){if(_shadowMapSize.x>_maxTextureSize){_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>_maxTextureSize){_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){const pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){const pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();const viewportCount=shadow.getViewportCount();for(let vp=0;vp<viewportCount;vp++){const viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM\nif(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}shadow.needsUpdate=false;}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){const geometry=_objects.update(fullScreenMesh);// vertical pass\nshadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizontal pass\nshadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizontal.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null);}function getDepthMaterialVariant(useMorphing,useSkinning,useInstancing){const index=useMorphing<<0|useSkinning<<1|useInstancing<<2;let material=_depthMaterials[index];if(material===undefined){material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing,skinning:useSkinning});_depthMaterials[index]=material;}return material;}function getDistanceMaterialVariant(useMorphing,useSkinning,useInstancing){const index=useMorphing<<0|useSkinning<<1|useInstancing<<2;let material=_distanceMaterials[index];if(material===undefined){material=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning});_distanceMaterials[index]=material;}return material;}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){let result=null;let getMaterialVariant=getDepthMaterialVariant;let customMaterial=object.customDepthMaterial;if(light.isPointLight===true){getMaterialVariant=getDistanceMaterialVariant;customMaterial=object.customDistanceMaterial;}if(customMaterial===undefined){let useMorphing=false;if(material.morphTargets===true){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}let useSkinning=false;if(object.isSkinnedMesh===true){if(material.skinning===true){useSkinning=true;}else{console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',object);}}const useInstancing=object.isInstancedMesh===true;result=getMaterialVariant(useMorphing,useSkinning,useInstancing);}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the\n// appropriate state\nconst keyA=result.uuid,keyB=material.uuid;let materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}let cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);const geometry=_objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let k=0,kl=groups.length;k<kl;k++){const group=groups[k];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){const depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){const depthMaterial=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,light,type);}}}function WebGLState(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function ColorBuffer(){let locked=false;const color=new Vector4();let currentColorMask=null;const currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function(lock){locked=lock;},setClear:function(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){let locked=false;let currentDepthMask=null;let currentDepthFunc=null;let currentDepthClear=null;return{setTest:function(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function(lock){locked=lock;},setClear:function(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){let locked=false;let currentStencilMask=null;let currentStencilFunc=null;let currentStencilRef=null;let currentStencilFuncMask=null;let currentStencilFail=null;let currentStencilZFail=null;let currentStencilZPass=null;let currentStencilClear=null;return{setTest:function(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function(lock){locked=lock;},setClear:function(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nconst colorBuffer=new ColorBuffer();const depthBuffer=new DepthBuffer();const stencilBuffer=new StencilBuffer();let enabledCapabilities={};let xrFramebuffer=null;let currentBoundFramebuffers={};let currentProgram=null;let currentBlendingEnabled=false;let currentBlending=null;let currentBlendEquation=null;let currentBlendSrc=null;let currentBlendDst=null;let currentBlendEquationAlpha=null;let currentBlendSrcAlpha=null;let currentBlendDstAlpha=null;let currentPremultipledAlpha=false;let currentFlipSided=null;let currentCullFace=null;let currentLineWidth=null;let currentPolygonOffsetFactor=null;let currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(35661);let lineWidthAvailable=false;let version=0;const glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}let currentTextureSlot=null;let currentBoundTextures={};const currentScissor=new Vector4(0,0,gl.canvas.width,gl.canvas.height);const currentViewport=new Vector4(0,0,gl.canvas.width,gl.canvas.height);function createTexture(type,target,count){const data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nconst texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(let i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}const emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function bindXRFramebuffer(framebuffer){if(framebuffer!==xrFramebuffer){gl.bindFramebuffer(36160,framebuffer);xrFramebuffer=framebuffer;}}function bindFramebuffer(target,framebuffer){if(framebuffer===null&&xrFramebuffer!==null)framebuffer=xrFramebuffer;// use active XR framebuffer if available\nif(currentBoundFramebuffers[target]!==framebuffer){gl.bindFramebuffer(target,framebuffer);currentBoundFramebuffers[target]=framebuffer;}}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}const equationToGL={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{const extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}const factorToGL={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled===true){disable(3042);currentBlendingEnabled=false;}return;}if(currentBlendingEnabled===false){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);let flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);const stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);material.alphaToCoverage===true?enable(32926):disable(32926);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}let boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){const boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){// reset state\ngl.disable(3042);gl.disable(2884);gl.disable(2929);gl.disable(32823);gl.disable(3089);gl.disable(2960);gl.disable(32926);gl.blendEquation(32774);gl.blendFunc(1,0);gl.blendFuncSeparate(1,0,1,0);gl.colorMask(true,true,true,true);gl.clearColor(0,0,0,0);gl.depthMask(true);gl.depthFunc(513);gl.clearDepth(1);gl.stencilMask(0xffffffff);gl.stencilFunc(519,0,0xffffffff);gl.stencilOp(7680,7680,7680);gl.clearStencil(0);gl.cullFace(1029);gl.frontFace(2305);gl.polygonOffset(0,0);gl.activeTexture(33984);gl.bindFramebuffer(36160,null);if(isWebGL2===true){gl.bindFramebuffer(36009,null);gl.bindFramebuffer(36008,null);}gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);// reset internals\nenabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};xrFramebuffer=null;currentBoundFramebuffers={};currentProgram=null;currentBlendingEnabled=false;currentBlending=null;currentBlendEquation=null;currentBlendSrc=null;currentBlendDst=null;currentBlendEquationAlpha=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentPremultipledAlpha=false;currentFlipSided=null;currentCullFace=null;currentLineWidth=null;currentPolygonOffsetFactor=null;currentPolygonOffsetUnits=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);currentViewport.set(0,0,gl.canvas.width,gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,bindFramebuffer:bindFramebuffer,bindXRFramebuffer:bindXRFramebuffer,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){const isWebGL2=capabilities.isWebGL2;const maxTextures=capabilities.maxTextures;const maxCubemapSize=capabilities.maxCubemapSize;const maxTextureSize=capabilities.maxTextureSize;const maxSamples=capabilities.maxSamples;const _videoTextures=new WeakMap();let _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\nlet useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext('2d')!==null;}catch(err){// Ignore any errors\n}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers\nreturn useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS('http://www.w3.org/1999/xhtml','canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){let scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){const floor=needsPowerOfTwo?MathUtils.floorPowerOfTwo:Math.floor;const width=floor(scale*image.width);const height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas\nconst canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;const context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo(image){return MathUtils.isPowerOfTwo(image.width)&&MathUtils.isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);const textureProperties=properties.get(texture);textureProperties.__maxMipLevel=Math.log2(Math.max(width,height));}function getInternalFormat(internalFormatName,glFormat,glType){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\''+internalFormatName+'\\'');}let internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures.delete(texture);}info.memory.textures--;}function onRenderTargetDispose(event){const renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);info.memory.textures--;}//\nfunction deallocateTexture(texture){const textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(let i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}properties.remove(texture);properties.remove(renderTarget);}//\nlet textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){const textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//\nfunction setTexture2D(texture,slot){const textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){const image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadCubeTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}const wrappingToGL={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648};const filterToGL={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');if(texture.type===FloatType&&extensions.has('OES_texture_float_linear')===false)return;// verify extension for WebGL 1 and WebGL 2\nif(isWebGL2===false&&texture.type===HalfFloatType&&extensions.has('OES_texture_half_float_linear')===false)return;// verify extension for WebGL 1 only\nif(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){let textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo(texture.image)===false;const image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);const supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format);let glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,texture,supportsMips);let mipmap;const mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D\n}}else{if(texture.type===FloatType){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1\nif(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nglInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//\nstate.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}function uploadCubeTexture(textureProperties,texture,slot){if(texture.image.length!==6)return;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);const isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;const cubeImage=[];for(let i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}const image=cubeImage[0],supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);let mipmaps;if(isCompressed){for(let i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(let i=0;i<6;i++){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];const mipmapImage=mipmap.image[i].image;state.texImage2D(34069+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];state.texImage2D(34069+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){const texture=renderTarget.texture;const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(textureTarget===32879||textureTarget===35866){state.texImage3D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,renderTarget.depth,0,glFormat,glType,null);}else{state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);}state.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(texture).__webglTexture,0);state.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){let glInternalFormat=33189;if(isMultisample){const depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{const texture=renderTarget.texture;const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){const isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');state.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);const webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){const renderTargetProperties=properties.get(renderTarget);const isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(let i=0;i<6;i++){state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,false);}}else{state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}state.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();textureProperties.__version=texture.version;info.memory.textures++;const isCube=renderTarget.isWebGLCubeRenderTarget===true;const isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;const isRenderTarget3D=texture.isDataTexture3D||texture.isDataTexture2DArray;const supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858\nif(isWebGL2&&texture.format===RGBFormat&&(texture.type===FloatType||texture.type===HalfFloatType)){texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(let i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);state.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}state.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,texture,supportsMips);for(let i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,36064,34069+i);}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(34067,texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else{let glTextureType=3553;if(isRenderTarget3D){// Render targets containing layers, i.e: Texture 3D and 2d arrays\nif(isWebGL2){const isTexture3D=texture.isDataTexture3D;glTextureType=isTexture3D?32879:35866;}else{console.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');}}state.bindTexture(glTextureType,textureProperties.__webglTexture);setTextureParameters(glTextureType,texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,glTextureType);if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(3553,texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){const texture=renderTarget.texture;const supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;if(textureNeedsGenerateMipmaps(texture,supportsMips)){const target=renderTarget.isWebGLCubeRenderTarget?34067:3553;const webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){const renderTargetProperties=properties.get(renderTarget);state.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);state.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);const width=renderTarget.width;const height=renderTarget.height;let mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);state.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);// see #18905\n}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){const frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility\nlet warnedTexture2D=false;let warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');warnedTextureCube=true;}texture=texture.texture;}setTextureCube(texture,slot);}//\nthis.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}function WebGLUtils(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function convert(p){let extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.\nif(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}class ArrayCamera extends PerspectiveCamera{constructor(array=[]){super();this.cameras=array;}}ArrayCamera.prototype.isArrayCamera=true;class Group extends Object3D{constructor(){super();this.type='Group';}}Group.prototype.isGroup=true;function WebXRController(){this._targetRay=null;this._grip=null;this._hand=null;}Object.assign(WebXRController.prototype,{constructor:WebXRController,getHandSpace:function(){if(this._hand===null){this._hand=new Group();this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false};}return this._hand;},getTargetRaySpace:function(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;}return this._targetRay;},getGripSpace:function(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;}return this._grip;},dispatchEvent:function(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}if(this._hand!==null){this._hand.dispatchEvent(event);}return this;},disconnect:function(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}if(this._hand!==null){this._hand.visible=false;}return this;},update:function(inputSource,frame,referenceSpace){let inputPose=null;let gripPose=null;let handPose=null;const targetRay=this._targetRay;const grip=this._grip;const hand=this._hand;if(inputSource&&frame.session.visibilityState!=='visible-blurred'){if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);}}if(hand&&inputSource.hand){handPose=true;for(const inputjoint of inputSource.hand.values()){// Update the joints groups with the XRJoint poses\nconst jointPose=frame.getJointPose(inputjoint,referenceSpace);if(hand.joints[inputjoint.jointName]===undefined){// The transform of this joint will be updated with the joint pose on each frame\nconst joint=new Group();joint.matrixAutoUpdate=false;joint.visible=false;hand.joints[inputjoint.jointName]=joint;// ??\nhand.add(joint);}const joint=hand.joints[inputjoint.jointName];if(jointPose!==null){joint.matrix.fromArray(jointPose.transform.matrix);joint.matrix.decompose(joint.position,joint.rotation,joint.scale);joint.jointRadius=jointPose.radius;}joint.visible=jointPose!==null;}// Custom events\n// Check pinchz\nconst indexTip=hand.joints['index-finger-tip'];const thumbTip=hand.joints['thumb-tip'];const distance=indexTip.position.distanceTo(thumbTip.position);const distanceToPinch=0.02;const threshold=0.005;if(hand.inputState.pinching&&distance>distanceToPinch+threshold){hand.inputState.pinching=false;this.dispatchEvent({type:'pinchend',handedness:inputSource.handedness,target:this});}else if(!hand.inputState.pinching&&distance<=distanceToPinch-threshold){hand.inputState.pinching=true;this.dispatchEvent({type:'pinchstart',handedness:inputSource.handedness,target:this});}}else{if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);}}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}if(hand!==null){hand.visible=handPose!==null;}return this;}});function WebXRManager(renderer,gl){const scope=this;const state=renderer.state;let session=null;let framebufferScaleFactor=1.0;let referenceSpace=null;let referenceSpaceType='local-floor';let pose=null;const controllers=[];const inputSourcesMap=new Map();//\nconst cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();const cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();const cameras=[cameraL,cameraR];const cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);let _currentDepthNear=null;let _currentDepthFar=null;//\nthis.enabled=false;this.isPresenting=false;this.getController=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};this.getControllerGrip=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};this.getHand=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getHandSpace();};//\nfunction onSessionEvent(event){const controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type,data:event.inputSource});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();_currentDepthNear=null;_currentDepthFar=null;// restore framebuffer/rendering state\nstate.bindXRFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());//\nanimation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};this.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};this.getReferenceSpace=function(){return referenceSpace;};this.getSession=function(){return session;};this.setSession=async function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.addEventListener('inputsourceschange',onInputSourcesChange);const attributes=gl.getContextAttributes();if(attributes.xrCompatible!==true){await gl.makeXRCompatible();}const layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};// eslint-disable-next-line no-undef\nconst baseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:baseLayer});referenceSpace=await session.requestReferenceSpace(referenceSpaceType);animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});}};function onInputSourcesChange(event){const inputSources=session.inputSources;// Assign inputSources to available controllers\nfor(let i=0;i<controllers.length;i++){inputSourcesMap.set(inputSources[i],controllers[i]);}// Notify disconnected\nfor(let i=0;i<event.removed.length;i++){const inputSource=event.removed[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap.delete(inputSource);}}// Notify connected\nfor(let i=0;i<event.added.length;i++){const inputSource=event.added[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'connected',data:inputSource});}}}//\nconst cameraLPos=new Vector3();const cameraRPos=new Vector3();/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);const ipd=cameraLPos.distanceTo(cameraRPos);const projL=cameraL.projectionMatrix.elements;const projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nconst near=projL[14]/(projL[10]-1);const far=projL[14]/(projL[10]+1);const topFov=(projL[9]+1)/projL[5];const bottomFov=(projL[9]-1)/projL[5];const leftFov=(projL[8]-1)/projL[0];const rightFov=(projR[8]+1)/projR[0];const left=near*leftFov;const right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nconst zOffset=ipd/(-leftFov+rightFov);const xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.copy(camera.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nconst near2=near+zOffset;const far2=far+zOffset;const left2=left-xOffset;const right2=right+(ipd-xOffset);const top2=topFov*far/far2*near2;const bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.copy(camera.matrixWorld).invert();}this.getCamera=function(camera){cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320\nsession.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}const parent=camera.parent;const cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(let i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children\ncamera.matrixWorld.copy(cameraVR.matrixWorld);camera.matrix.copy(cameraVR.matrix);camera.matrix.decompose(camera.position,camera.quaternion,camera.scale);const children=camera.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling\nif(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)\ncameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}return cameraVR;};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);if(pose!==null){const views=pose.views;const baseLayer=session.renderState.baseLayer;state.bindXRFramebuffer(baseLayer.framebuffer);let cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list\nif(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(let i=0;i<views.length;i++){const view=views[i];const viewport=baseLayer.getViewport(view);const camera=cameras[i];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}}//\nconst inputSources=session.inputSources;for(let i=0;i<controllers.length;i++){const controller=controllers[i];const inputSource=inputSources[i];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};}Object.assign(WebXRManager.prototype,EventDispatcher.prototype);function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,pixelRatio,height){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material);}else{refreshUniformsStandard(uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581\n}}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}const envMap=properties.get(material).envMap;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture&&envMap._needsFlipEnvMap?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;const maxMipLevel=properties.get(envMap).__maxMipLevel;if(maxMipLevel!==undefined){uniforms.maxMipLevel.value=maxMipLevel;}}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. displacementMap map\n// 4. normal map\n// 5. bump map\n// 6. roughnessMap map\n// 7. metalnessMap map\n// 8. alphaMap map\n// 9. emissiveMap map\n// 10. clearcoat map\n// 11. clearcoat normal map\n// 12. clearcoat roughnessMap map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}else if(material.clearcoatMap){uvScaleMap=material.clearcoatMap;}else if(material.clearcoatNormalMap){uvScaleMap=material.clearcoatNormalMap;}else if(material.clearcoatRoughnessMap){uvScaleMap=material.clearcoatRoughnessMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2\n// 1. ao map\n// 2. light map\nlet uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility\nif(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}const envMap=properties.get(material).envMap;if(envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material){refreshUniformsStandard(uniforms,material);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common\nuniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.sheen)uniforms.sheen.value.copy(material.sheen);if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}uniforms.transmission.value=material.transmission;if(material.transmissionMap){uniforms.transmissionMap.value=material.transmissionMap;}}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}function createCanvasElement(){const canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');canvas.style.display='block';return canvas;}function WebGLRenderer(parameters){parameters=parameters||{};const _canvas=parameters.canvas!==undefined?parameters.canvas:createCanvasElement(),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;let currentRenderList=null;let currentRenderState=null;// render() can be called from within a callback triggered by another render.\n// We track this so that the nested render call gets its list and state isolated from the parent render call.\nconst renderListStack=[];const renderStateStack=[];// public properties\nthis.domElement=_canvas;// Debug configuration container\nthis.debug={/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */checkShaderErrors:true};// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.outputEncoding=LinearEncoding;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;// internal properties\nconst _this=this;let _isContextLost=false;// internal state cache\nlet _currentActiveCubeFace=0;let _currentActiveMipmapLevel=0;let _currentRenderTarget=null;let _currentMaterialId=-1;let _currentCamera=null;const _currentViewport=new Vector4();const _currentScissor=new Vector4();let _currentScissorTest=null;//\nlet _width=_canvas.width;let _height=_canvas.height;let _pixelRatio=1;let _opaqueSort=null;let _transparentSort=null;const _viewport=new Vector4(0,0,_width,_height);const _scissor=new Vector4(0,0,_width,_height);let _scissorTest=false;// frustum\nconst _frustum=new Frustum();// clipping\nlet _clippingEnabled=false;let _localClippingEnabled=false;// camera matrices cache\nconst _projScreenMatrix=new Matrix4();const _vector3=new Vector3();const _emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nlet _gl=_context;function getContext(contextNames,contextAttributes){for(let i=0;i<contextNames.length;i++){const contextName=contextNames[i];const context=_canvas.getContext(contextName,contextAttributes);if(context!==null)return context;}return null;}try{const contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);if(_gl===null){const contextNames=['webgl2','webgl','experimental-webgl'];if(_this.isWebGL1Renderer===true){contextNames.shift();}_gl=getContext(contextNames,contextAttributes);if(_gl===null){if(getContext(contextNames)){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}let extensions,capabilities,state,info;let properties,textures,cubemaps,attributes,geometries,objects;let programCache,materials,renderLists,renderStates,clipping,shadowMap;let background,morphtargets,bufferRenderer,indexedBufferRenderer;let utils,bindingStates;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);extensions.init(capabilities);utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,extensions,capabilities,bindingStates,clipping);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists(properties);renderStates=new WebGLRenderStates(extensions,capabilities);background=new WebGLBackground(_this,cubemaps,state,objects,_premultipliedAlpha);shadowMap=new WebGLShadowMap(_this,objects,capabilities);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.shadowMap=shadowMap;_this.state=state;_this.info=info;}initGLContext();// xr\nconst xr=new WebXRManager(_this,_gl);this.xr=xr;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){if(target===undefined){console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');target=new Vector4();}return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing\nthis.getClearColor=function(target){if(target===undefined){console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');target=new Color();}return target.copy(background.getClearColor());};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){let bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();objects.dispose();bindingStates.dispose();xr.dispose();xr.removeEventListener('sessionstart',onXRSessionStart);xr.removeEventListener('sessionend',onXRSessionEnd);animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore(/* event */){console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;const infoAutoReset=info.autoReset;const shadowMapEnabled=shadowMap.enabled;const shadowMapAutoUpdate=shadowMap.autoUpdate;const shadowMapNeedsUpdate=shadowMap.needsUpdate;const shadowMapType=shadowMap.type;initGLContext();info.autoReset=infoAutoReset;shadowMap.enabled=shadowMapEnabled;shadowMap.autoUpdate=shadowMapAutoUpdate;shadowMap.needsUpdate=shadowMapNeedsUpdate;shadowMap.type=shadowMapType;}function onMaterialDispose(event){const material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReferences(material);properties.remove(material);}function releaseMaterialProgramReferences(material){const programs=properties.get(material).programs;if(programs!==undefined){programs.forEach(function(program){programCache.releaseProgram(program);});}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();const buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();const programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);bindingStates.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);bindingStates.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);bindingStates.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);bindingStates.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=_emptyScene;// renderBufferDirect second parameter used to be fog (could be null)\nconst frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;const program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);//\nlet index=geometry.index;const position=geometry.attributes.position;//\nif(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//\nlet rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}if(material.morphTargets||material.morphNormals){morphtargets.update(object,geometry,material,program);}bindingStates.setup(object,material,program,geometry,index);let attribute;let renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}//\nconst dataCount=index!==null?index.count:position.count;const rangeStart=geometry.drawRange.start*rangeFactor;const rangeCount=geometry.drawRange.count*rangeFactor;const groupStart=group!==null?group.start*rangeFactor:0;const groupCount=group!==null?group.count*rangeFactor:Infinity;const drawStart=Math.max(rangeStart,groupStart);const drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;const drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){let lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){const instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene);currentRenderState.init();scene.traverseVisible(function(object){if(object.isLight&&object.layers.test(camera.layers)){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights();scene.traverse(function(object){const material=object.material;if(material){if(Array.isArray(material)){for(let i=0;i<material.length;i++){const material2=material[i];getProgram(material2,scene,object);}}else{getProgram(material,scene,object);}}});};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time){if(onAnimationFrameCallback)onAnimationFrameCallback(time);}function onXRSessionStart(){animation.stop();}function onXRSessionEnd(){animation.start();}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);callback===null?animation.stop():animation.start();};xr.addEventListener('sessionstart',onXRSessionStart);xr.addEventListener('sessionend',onXRSessionEnd);// Rendering\nthis.render=function(scene,camera){let renderTarget,forceClear;if(arguments[2]!==undefined){console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');renderTarget=arguments[2];}if(arguments[3]!==undefined){console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');forceClear=arguments[3];}if(camera!==undefined&&camera.isCamera!==true){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost===true)return;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled===true&&xr.isPresenting===true){camera=xr.getCamera(camera);}//\nif(scene.isScene===true)scene.onBeforeRender(_this,scene,camera,renderTarget||_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init();renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,renderListStack.length);currentRenderList.init();renderListStack.push(currentRenderList);projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//\nif(_clippingEnabled===true)clipping.beginShadows();const shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights();currentRenderState.setupLightsView(camera);if(_clippingEnabled===true)clipping.endShadows();//\nif(this.info.autoReset===true)this.info.reset();if(renderTarget!==undefined){this.setRenderTarget(renderTarget);}//\nbackground.render(currentRenderList,scene,camera,forceClear);// render scene\nconst opaqueObjects=currentRenderList.opaque;const transparentObjects=currentRenderList.transparent;if(opaqueObjects.length>0)renderObjects(opaqueObjects,scene,camera);if(transparentObjects.length>0)renderObjects(transparentObjects,scene,camera);//\nif(_currentRenderTarget!==null){// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(_currentRenderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(_currentRenderTarget);}//\nif(scene.isScene===true)scene.onAfterRender(_this,scene,camera);// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();\nbindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;renderStateStack.pop();if(renderStateStack.length>0){currentRenderState=renderStateStack[renderStateStack.length-1];}else{currentRenderState=null;}renderListStack.pop();if(renderListStack.length>0){currentRenderList=renderListStack[renderListStack.length-1];}else{currentRenderList=null;}};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame\nif(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderObjects(renderList,scene,camera){const overrideMaterial=scene.isScene===true?scene.overrideMaterial:null;for(let i=0,l=renderList.length;i<l;i++){const renderItem=renderList[i];const object=renderItem.object;const geometry=renderItem.geometry;const material=overrideMaterial===null?renderItem.material:overrideMaterial;const group=renderItem.group;if(camera.isArrayCamera){const cameras=camera.cameras;for(let j=0,jl=cameras.length;j<jl;j++){const camera2=cameras[j];if(object.layers.test(camera2.layers)){state.viewport(_currentViewport.copy(camera2.viewport));currentRenderState.setupLightsView(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){const program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);}function getProgram(material,scene,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\nconst materialProperties=properties.get(material);const lights=currentRenderState.state.lights;const shadowsArray=currentRenderState.state.shadowsArray;const lightsStateVersion=lights.state.version;const parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object);const programCacheKey=programCache.getProgramCacheKey(parameters);let programs=materialProperties.programs;// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\nmaterialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=cubemaps.get(material.envMap||materialProperties.environment);if(programs===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);programs=new Map();materialProperties.programs=programs;}let program=programs.get(programCacheKey);if(program!==undefined){// early out if program and light state is identical\nif(materialProperties.currentProgram===program&&materialProperties.lightsStateVersion===lightsStateVersion){updateCommonMaterialProperties(material,parameters);return program;}}else{parameters.uniforms=programCache.getUniforms(material);material.onBeforeCompile(parameters,_this);program=programCache.acquireProgram(parameters,programCacheKey);programs.set(programCacheKey,program);materialProperties.uniforms=parameters.uniforms;}const uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){uniforms.clippingPlanes=clipping.uniform;}updateCommonMaterialProperties(material,parameters);// store the light setup it was created for\nmaterialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.ltc_1.value=lights.state.rectAreaLTC1;uniforms.ltc_2.value=lights.state.rectAreaLTC2;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}const progUniforms=program.getUniforms();const uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.currentProgram=program;materialProperties.uniformsList=uniformsList;return program;}function updateCommonMaterialProperties(material,parameters){const materialProperties=properties.get(material);materialProperties.outputEncoding=parameters.outputEncoding;materialProperties.instancing=parameters.instancing;materialProperties.numClippingPlanes=parameters.numClippingPlanes;materialProperties.numIntersection=parameters.numClipIntersection;materialProperties.vertexAlphas=parameters.vertexAlphas;}function setProgram(camera,scene,material,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\ntextures.resetTextureUnits();const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;const envMap=cubemaps.get(material.envMap||environment);const vertexAlphas=material.vertexColors===true&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4;const materialProperties=properties.get(material);const lights=currentRenderState.state.lights;if(_clippingEnabled===true){if(_localClippingEnabled===true||camera!==_currentCamera){const useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\nclipping.setState(material,camera,useCache);}}//\nlet needsProgramChange=false;if(material.version===materialProperties.__version){if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){needsProgramChange=true;}else if(materialProperties.outputEncoding!==encoding){needsProgramChange=true;}else if(object.isInstancedMesh&&materialProperties.instancing===false){needsProgramChange=true;}else if(!object.isInstancedMesh&&materialProperties.instancing===true){needsProgramChange=true;}else if(materialProperties.envMap!==envMap){needsProgramChange=true;}else if(material.fog&&materialProperties.fog!==fog){needsProgramChange=true;}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==clipping.numPlanes||materialProperties.numIntersection!==clipping.numIntersection)){needsProgramChange=true;}else if(materialProperties.vertexAlphas!==vertexAlphas){needsProgramChange=true;}}else{needsProgramChange=true;materialProperties.__version=material.version;}//\nlet program=materialProperties.currentProgram;if(needsProgramChange===true){program=getProgram(material,scene,object);}let refreshProgram=false;let refreshMaterial=false;let refreshLights=false;const p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){const uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||material.skinning){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// otherwise textures used for skinning can take over texture units reserved for other material textures\nif(material.skinning){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');const skeleton=object.skeleton;if(skeleton){const bones=skeleton.bones;if(capabilities.floatVertexTextures){if(skeleton.boneTexture===null){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nlet size=Math.sqrt(bones.length*4);// 4 pixels needed for 1 matrix\nsize=MathUtils.ceilPowerOfTwo(size);size=Math.max(size,4);const boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(skeleton.boneMatrices);// copy current values\nconst boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);skeleton.boneMatrices=boneMatrices;skeleton.boneTexture=boneTexture;skeleton.boneTextureSize=size;}p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);if(materialProperties.needsLights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height);WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget,activeCubeFace=0,activeMipmapLevel=0){_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}let framebuffer=null;let isCube=false;let isRenderTarget3D=false;if(renderTarget){const texture=renderTarget.texture;if(texture.isDataTexture3D||texture.isDataTexture2DArray){isRenderTarget3D=true;}const __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}state.bindFramebuffer(36160,framebuffer);state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){const textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel);}else if(isRenderTarget3D){const textureProperties=properties.get(renderTarget.texture);const layer=activeCubeFace||0;_gl.framebufferTextureLayer(36160,36064,textureProperties.__webglTexture,activeMipmapLevel||0,layer);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}let framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){state.bindFramebuffer(36160,framebuffer);try{const texture=renderTarget.texture;const textureFormat=texture.format;const textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}const halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has('EXT_color_buffer_half_float')||capabilities.isWebGL2&&extensions.has('EXT_color_buffer_float'));if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.has('OES_texture_float')||extensions.has('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!halfFloatSupportedByExt){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{// restore framebuffer of current render target if necessary\nconst framebuffer=_currentRenderTarget!==null?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(36160,framebuffer);}}};this.copyFramebufferToTexture=function(position,texture,level=0){const levelScale=Math.pow(2,-level);const width=Math.floor(texture.image.width*levelScale);const height=Math.floor(texture.image.height*levelScale);const glFormat=utils.convert(texture.format);textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level=0){const width=srcTexture.image.width;const height=srcTexture.image.height;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);// As another texture upload may have changed pixelStorei\n// parameters, make sure they are correct for the dstTexture\n_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.copyTextureToTexture3D=function(sourceBox,position,srcTexture,dstTexture,level=0){if(_this.isWebGL1Renderer){console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');return;}const{width,height,data}=srcTexture.image;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);let glTarget;if(dstTexture.isDataTexture3D){textures.setTexture3D(dstTexture,0);glTarget=32879;}else if(dstTexture.isDataTexture2DArray){textures.setTexture2DArray(dstTexture,0);glTarget=35866;}else{console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');return;}_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);const unpackRowLen=_gl.getParameter(3314);const unpackImageHeight=_gl.getParameter(32878);const unpackSkipPixels=_gl.getParameter(3316);const unpackSkipRows=_gl.getParameter(3315);const unpackSkipImages=_gl.getParameter(32877);_gl.pixelStorei(3314,width);_gl.pixelStorei(32878,height);_gl.pixelStorei(3316,sourceBox.min.x);_gl.pixelStorei(3315,sourceBox.min.y);_gl.pixelStorei(32877,sourceBox.min.z);_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,sourceBox.max.x-sourceBox.min.x+1,sourceBox.max.y-sourceBox.min.y+1,sourceBox.max.z-sourceBox.min.z+1,glFormat,glType,data);_gl.pixelStorei(3314,unpackRowLen);_gl.pixelStorei(32878,unpackImageHeight);_gl.pixelStorei(3316,unpackSkipPixels);_gl.pixelStorei(3315,unpackSkipRows);_gl.pixelStorei(32877,unpackSkipImages);// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(glTarget);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};this.resetState=function(){_currentActiveCubeFace=0;_currentActiveMipmapLevel=0;_currentRenderTarget=null;state.reset();bindingStates.reset();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=true;class FogExp2{constructor(color,density=0.00025){this.name='';this.color=new Color(color);this.density=density;}clone(){return new FogExp2(this.color,this.density);}toJSON(/* meta */){return{type:'FogExp2',color:this.color.getHex(),density:this.density};}}FogExp2.prototype.isFogExp2=true;class Fog{constructor(color,near=1,far=1000){this.name='';this.color=new Color(color);this.near=near;this.far=far;}clone(){return new Fog(this.color,this.near,this.far);}toJSON(/* meta */){return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}}Fog.prototype.isFog=true;class Scene extends Object3D{constructor(){super();this.type='Scene';this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer\nif(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}copy(source,recursive){super.copy(source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;}toJSON(meta){const data=super.toJSON(meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.environment!==null)data.object.environment=this.environment.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;}}Scene.prototype.isScene=true;function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=MathUtils.generateUUID();}Object.defineProperty(InterleavedBuffer.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:true,onUploadCallback:function(){},setUsage:function(value){this.usage=value;return this;},copy:function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;},copyAt:function(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(let i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},set:function(value,offset=0){this.array.set(value,offset);return this;},clone:function(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=MathUtils.generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer;}const array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);const ib=new InterleavedBuffer(array,this.stride);ib.setUsage(this.usage);return ib;},onUpload:function(callback){this.onUploadCallback=callback;return this;},toJSON:function(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}// generate UUID for array buffer if necessary\nif(this.array.buffer._uuid===undefined){this.array.buffer._uuid=MathUtils.generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer));}//\nreturn{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride};}});const _vector$6=new Vector3();function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset,normalized){this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count;}},array:{get:function(){return this.data.array;}},needsUpdate:{set:function(value){this.data.needsUpdate=value;}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:true,applyMatrix4:function(m){for(let i=0,l=this.data.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyMatrix4(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;},applyNormalMatrix:function(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyNormalMatrix(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;},transformDirection:function(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.transformDirection(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;},setX:function(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;},setY:function(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;},setZ:function(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;},setW:function(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;},getX:function(index){return this.data.array[index*this.data.stride+this.offset];},getY:function(index){return this.data.array[index*this.data.stride+this.offset+1];},getZ:function(index){return this.data.array[index*this.data.stride+this.offset+2];},getW:function(index){return this.data.array[index*this.data.stride+this.offset+3];},setXY:function(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;},clone:function(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);}else{if(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.clone(data);}return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);}},toJSON:function(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now\nreturn{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}else{// save as true interlaved attribtue\nif(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data);}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};}}});/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */class SpriteMaterial extends Material{constructor(parameters){super();this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;}}SpriteMaterial.prototype.isSpriteMaterial=true;let _geometry;const _intersectPoint=/*@__PURE__*/new Vector3();const _worldScale=/*@__PURE__*/new Vector3();const _mvPosition=/*@__PURE__*/new Vector3();const _alignedPosition=/*@__PURE__*/new Vector2();const _rotatedPosition=/*@__PURE__*/new Vector2();const _viewWorldMatrix=/*@__PURE__*/new Matrix4();const _vA=/*@__PURE__*/new Vector3();const _vB=/*@__PURE__*/new Vector3();const _vC=/*@__PURE__*/new Vector3();const _uvA=/*@__PURE__*/new Vector2();const _uvB=/*@__PURE__*/new Vector2();const _uvC=/*@__PURE__*/new Vector2();class Sprite extends Object3D{constructor(material){super();this.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();const float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);const interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=_geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}raycast(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}const rotation=this.material.rotation;let sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}const center=this.center;transformVertex(_vA.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA.set(0,0);_uvB.set(1,0);_uvC.set(1,1);// check first triangle\nlet intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,false,_intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(_vB.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,false,_intersectPoint);if(intersect===null){return;}}const distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2()),face:null,object:this});}copy(source){super.copy(source);if(source.center!==undefined)this.center.copy(source.center);this.material=source.material;return this;}}Sprite.prototype.isSprite=true;function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\n_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(_viewWorldMatrix);}const _v1$2=/*@__PURE__*/new Vector3();const _v2$1=/*@__PURE__*/new Vector3();class LOD extends Object3D{constructor(){super();this._currentLevel=0;this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]},isLOD:{value:true}});this.autoUpdate=true;}copy(source){super.copy(source,false);const levels=source.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;}addLevel(object,distance=0){distance=Math.abs(distance);const levels=this.levels;let l;for(l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;}getCurrentLevel(){return this._currentLevel;}getObjectForDistance(distance){const levels=this.levels;if(levels.length>0){let i,l;for(i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;}return null;}raycast(raycaster,intersects){const levels=this.levels;if(levels.length>0){_v1$2.setFromMatrixPosition(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects);}}update(camera){const levels=this.levels;if(levels.length>1){_v1$2.setFromMatrixPosition(camera.matrixWorld);_v2$1.setFromMatrixPosition(this.matrixWorld);const distance=_v1$2.distanceTo(_v2$1)/camera.zoom;levels[0].object.visible=true;let i,l;for(i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}this._currentLevel=i-1;for(;i<l;i++){levels[i].object.visible=false;}}}toJSON(meta){const data=super.toJSON(meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];const levels=this.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}}const _basePosition=new Vector3();const _skinIndex=new Vector4();const _skinWeight=new Vector4();const _vector$5=new Vector3();const _matrix=new Matrix4();function SkinnedMesh(geometry,material){Mesh.call(this,geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:true,copy:function(source){Mesh.prototype.copy.call(this,source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this;},bind:function(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert();},pose:function(){this.skeleton.pose();},normalizeSkinWeights:function(){const vector=new Vector4();const skinWeight=this.geometry.attributes.skinWeight;for(let i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);const scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}},updateMatrixWorld:function(force){Mesh.prototype.updateMatrixWorld.call(this,force);if(this.bindMode==='attached'){this.bindMatrixInverse.copy(this.matrixWorld).invert();}else if(this.bindMode==='detached'){this.bindMatrixInverse.copy(this.bindMatrix).invert();}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}},boneTransform:function(index,target){const skeleton=this.skeleton;const geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(let i=0;i<4;i++){const weight=_skinWeight.getComponent(i);if(weight!==0){const boneIndex=_skinIndex.getComponent(i);_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),weight);}}return target.applyMatrix4(this.bindMatrixInverse);}});function Bone(){Object3D.call(this);this.type='Bone';}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:true});const _offsetMatrix=/*@__PURE__*/new Matrix4();const _identityMatrix=/*@__PURE__*/new Matrix4();class Skeleton{constructor(bones=[],boneInverses=[]){this.uuid=MathUtils.generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init();}init(){const bones=this.bones;const boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(bones.length*16);// calculate inverse bone matrices if necessary\nif(boneInverses.length===0){this.calculateInverses();}else{// handle special case\nif(bones.length!==boneInverses.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');this.boneInverses=[];for(let i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}}calculateInverses(){this.boneInverses.length=0;for(let i=0,il=this.bones.length;i<il;i++){const inverse=new Matrix4();if(this.bones[i]){inverse.copy(this.bones[i].matrixWorld).invert();}this.boneInverses.push(inverse);}}pose(){// recover the bind-time world matrices\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){bone.matrixWorld.copy(this.boneInverses[i]).invert();}}// compute the local matrices, positions, rotations and scales\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.copy(bone.parent.matrixWorld).invert();bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}}update(){const bones=this.bones;const boneInverses=this.boneInverses;const boneMatrices=this.boneMatrices;const boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(let i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform\nconst matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);_offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==null){boneTexture.needsUpdate=true;}}clone(){return new Skeleton(this.bones,this.boneInverses);}getBoneByName(name){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;}dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null;}}fromJSON(json,bones){this.uuid=json.uuid;for(let i=0,l=json.bones.length;i<l;i++){const uuid=json.bones[i];let bone=bones[uuid];if(bone===undefined){console.warn('THREE.Skeleton: No bone found with UUID:',uuid);bone=new Bone();}this.bones.push(bone);this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));}this.init();return this;}toJSON(){const data={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[]};data.uuid=this.uuid;const bones=this.bones;const boneInverses=this.boneInverses;for(let i=0,l=bones.length;i<l;i++){const bone=bones[i];data.bones.push(bone.uuid);const boneInverse=boneInverses[i];data.boneInverses.push(boneInverse.toArray());}return data;}}const _instanceLocalMatrix=new Matrix4();const _instanceWorldMatrix=new Matrix4();const _instanceIntersects=[];const _mesh=new Mesh();function InstancedMesh(geometry,material,count){Mesh.call(this,geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(count*16),16);this.instanceColor=null;this.count=count;this.frustumCulled=false;}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:true,copy:function(source){Mesh.prototype.copy.call(this,source);this.instanceMatrix.copy(source.instanceMatrix);if(source.instanceColor!==null)this.instanceColor=source.instanceColor.clone();this.count=source.count;return this;},getColorAt:function(index,color){color.fromArray(this.instanceColor.array,index*3);},getMatrixAt:function(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);},raycast:function(raycaster,intersects){const matrixWorld=this.matrixWorld;const raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(let instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance\nthis.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance\n_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast\nfor(let i=0,l=_instanceIntersects.length;i<l;i++){const intersect=_instanceIntersects[i];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}},setColorAt:function(index,color){if(this.instanceColor===null){this.instanceColor=new BufferAttribute(new Float32Array(this.count*3),3);}color.toArray(this.instanceColor.array,index*3);},setMatrixAt:function(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */class LineBasicMaterial extends Material{constructor(parameters){super();this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this;}}LineBasicMaterial.prototype.isLineBasicMaterial=true;const _start$1=new Vector3();const _end$1=new Vector3();const _inverseMatrix$1=new Matrix4();const _ray$1=new Ray();const _sphere$1=new Sphere();function Line(geometry=new BufferGeometry(),material=new LineBasicMaterial()){Object3D.call(this);this.type='Line';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this;},computeLineDistances:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[0];for(let i=1,l=positionAttribute.count;i<l;i++){_start$1.fromBufferAttribute(positionAttribute,i-1);_end$1.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;},raycast:function(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Line.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere);_sphere$1.applyMatrix4(matrixWorld);_sphere$1.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$1)===false)return;//\n_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;const vStart=new Vector3();const vEnd=new Vector3();const interSegment=new Vector3();const interRay=new Vector3();const step=this.isLineSegments?2:1;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){const a=index.getX(i);const b=index.getX(i+1);vStart.fromBufferAttribute(positionAttribute,a);vEnd.fromBufferAttribute(positionAttribute,b);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){vStart.fromBufferAttribute(positionAttribute,i);vEnd.fromBufferAttribute(positionAttribute,i+1);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}});const _start=new Vector3();const _end=new Vector3();function LineSegments(geometry,material){Line.call(this,geometry,material);this.type='LineSegments';}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:true,computeLineDistances:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[];for(let i=0,l=positionAttribute.count;i<l;i+=2){_start.fromBufferAttribute(positionAttribute,i);_end.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}});class LineLoop extends Line{constructor(geometry,material){super(geometry,material);this.type='LineLoop';}}LineLoop.prototype.isLineLoop=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */class PointsMaterial extends Material{constructor(parameters){super();this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;}}PointsMaterial.prototype.isPointsMaterial=true;const _inverseMatrix=new Matrix4();const _ray=new Ray();const _sphere=new Sphere();const _position$2=new Vector3();function Points(geometry=new BufferGeometry(),material=new PointsMaterial()){Object3D.call(this);this.type='Points';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this;},raycast:function(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Points.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);_sphere.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere)===false)return;//\n_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i++){const a=index.getX(i);_position$2.fromBufferAttribute(positionAttribute,a);testPoint(_position$2,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end;i<l;i++){_position$2.fromBufferAttribute(positionAttribute,i);testPoint(_position$2,i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}});function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){const rayPointDistanceSq=_ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){const intersectPoint=new Vector3();_ray.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);const distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}class VideoTexture extends Texture{constructor(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;const scope=this;function updateVideo(){scope.needsUpdate=true;video.requestVideoFrameCallback(updateVideo);}if('requestVideoFrameCallback'in video){video.requestVideoFrameCallback(updateVideo);}}clone(){return new this.constructor(this.image).copy(this);}update(){const video=this.image;const hasVideoFrameCallback=('requestVideoFrameCallback'in video);if(hasVideoFrameCallback===false&&video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}}VideoTexture.prototype.isVideoTexture=true;class CompressedTexture extends Texture{constructor(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\nthis.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\nthis.generateMipmaps=false;}}CompressedTexture.prototype.isCompressedTexture=true;class CanvasTexture extends Texture{constructor(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}}CanvasTexture.prototype.isCanvasTexture=true;class DepthTexture extends Texture{constructor(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}}DepthTexture.prototype.isDepthTexture=true;class CircleGeometry extends BufferGeometry{constructor(radius=1,segments=8,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(let s=0,i=3;s<=segments;s++,i+=3){const segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(let i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class CylinderGeometry extends BufferGeometry{constructor(radiusTop=1,radiusBottom=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};const scope=this;radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet index=0;const indexArray=[];const halfHeight=height/2;let groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){const normal=new Vector3();const vertex=new Vector3();let groupCount=0;// this will be used to calculate the normal\nconst slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(let y=0;y<=heightSegments;y++){const indexRow=[];const v=y/heightSegments;// calculate the radius of the current row\nconst radius=v*(radiusBottom-radiusTop)+radiusTop;for(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const sinTheta=Math.sin(theta);const cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(let x=0;x<radialSegments;x++){for(let y=0;y<heightSegments;y++){// we use the index array to access the correct indices\nconst a=indexArray[y][x];const b=indexArray[y+1][x];const c=indexArray[y+1][x+1];const d=indexArray[y][x+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){// save the index of the first center vertex\nconst centerIndexStart=index;const uv=new Vector2();const vertex=new Vector3();let groupCount=0;const radius=top===true?radiusTop:radiusBottom;const sign=top===true?1:-1;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(let x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\nconst centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const cosTheta=Math.cos(theta);const sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(let x=0;x<radialSegments;x++){const c=centerIndexStart+x;const i=centerIndexEnd+x;if(top===true){// face top\nindices.push(i,i+1,c);}else{// face bottom\nindices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}}}class ConeGeometry extends CylinderGeometry{constructor(radius=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super(0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}}class PolyhedronGeometry extends BufferGeometry{constructor(vertices,indices,radius=1,detail=0){super();this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};// default buffer data\nconst vertexBuffer=[];const uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\napplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals\n}else{this.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){const a=new Vector3();const b=new Vector3();const c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(let i=0;i<indices.length;i+=3){// get the vertices of the face\ngetVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){const cols=detail+1;// we use this multidimensional array as a data structure for creating the subdivision\nconst v=[];// construct all of the vertices for this subdivision\nfor(let i=0;i<=cols;i++){v[i]=[];const aj=a.clone().lerp(c,i/cols);const bj=b.clone().lerp(c,i/cols);const rows=cols-i;for(let j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(let i=0;i<cols;i++){for(let j=0;j<2*(cols-i)-1;j++){const k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function applyRadius(radius){const vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){const vertex=new Vector3();for(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];const u=azimuth(vertex)/2/Math.PI+0.5;const v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(let i=0;i<uvBuffer.length;i+=6){// uv data of a single face\nconst x0=uvBuffer[i+0];const x1=uvBuffer[i+2];const x2=uvBuffer[i+4];const max=Math.max(x0,x1,x2);const min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){const stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){const a=new Vector3();const b=new Vector3();const c=new Vector3();const centroid=new Vector3();const uvA=new Vector2();const uvB=new Vector2();const uvC=new Vector2();for(let i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);const azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const r=1/t;const vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];const indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(vertices,indices,radius,detail);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};}}const _v0=new Vector3();const _v1$1=new Vector3();const _normal=new Vector3();const _triangle=new Triangle();class EdgesGeometry extends BufferGeometry{constructor(geometry,thresholdAngle){super();this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;if(geometry.isGeometry===true){console.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}const precisionPoints=4;const precision=Math.pow(10,precisionPoints);const thresholdDot=Math.cos(MathUtils.DEG2RAD*thresholdAngle);const indexAttr=geometry.getIndex();const positionAttr=geometry.getAttribute('position');const indexCount=indexAttr?indexAttr.count:positionAttr.count;const indexArr=[0,0,0];const vertKeys=['a','b','c'];const hashes=new Array(3);const edgeData={};const vertices=[];for(let i=0;i<indexCount;i+=3){if(indexAttr){indexArr[0]=indexAttr.getX(i);indexArr[1]=indexAttr.getX(i+1);indexArr[2]=indexAttr.getX(i+2);}else{indexArr[0]=i;indexArr[1]=i+1;indexArr[2]=i+2;}const{a,b,c}=_triangle;a.fromBufferAttribute(positionAttr,indexArr[0]);b.fromBufferAttribute(positionAttr,indexArr[1]);c.fromBufferAttribute(positionAttr,indexArr[2]);_triangle.getNormal(_normal);// create hashes for the edge from the vertices\nhashes[0]=`${Math.round(a.x*precision)},${Math.round(a.y*precision)},${Math.round(a.z*precision)}`;hashes[1]=`${Math.round(b.x*precision)},${Math.round(b.y*precision)},${Math.round(b.z*precision)}`;hashes[2]=`${Math.round(c.x*precision)},${Math.round(c.y*precision)},${Math.round(c.z*precision)}`;// skip degenerate triangles\nif(hashes[0]===hashes[1]||hashes[1]===hashes[2]||hashes[2]===hashes[0]){continue;}// iterate over every edge\nfor(let j=0;j<3;j++){// get the first and next vertex making up the edge\nconst jNext=(j+1)%3;const vecHash0=hashes[j];const vecHash1=hashes[jNext];const v0=_triangle[vertKeys[j]];const v1=_triangle[vertKeys[jNext]];const hash=`${vecHash0}_${vecHash1}`;const reverseHash=`${vecHash1}_${vecHash0}`;if(reverseHash in edgeData&&edgeData[reverseHash]){// if we found a sibling edge add it into the vertex array if\n// it meets the angle threshold and delete the edge from the map.\nif(_normal.dot(edgeData[reverseHash].normal)<=thresholdDot){vertices.push(v0.x,v0.y,v0.z);vertices.push(v1.x,v1.y,v1.z);}edgeData[reverseHash]=null;}else if(!(hash in edgeData)){// if we've already got an edge here then skip adding a new one\nedgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal.clone()};}}}// iterate over all remaining, unmatched edges and add them to the vertex array\nfor(const key in edgeData){if(edgeData[key]){const{index0,index1}=edgeData[key];_v0.fromBufferAttribute(positionAttr,index0);_v1$1.fromBufferAttribute(positionAttr,index1);vertices.push(_v0.x,_v0.y,_v0.z);vertices.push(_v1$1.x,_v1$1.y,_v1$1.z);}}this.setAttribute('position',new Float32BufferAttribute(vertices,3));}}/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */const Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;const hasHoles=holeIndices&&holeIndices.length;const outerLen=hasHoles?holeIndices[0]*dim:data.length;let outerNode=linkedList(data,0,outerLen,dim,true);const triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;let minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(let i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){let i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);}else{for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;let p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);let stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nlet p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nconst minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nconst minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);let p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions\nwhile(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order\nwhile(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order\nwhile(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){let p=start;do{const a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nlet a=start;do{let b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nlet c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){const queue=[];let i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){const b=splitPolygon(outerNode,hole);// filter collinear points around the cuts\nfilterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){let p=outerNode;const hx=hole.x;const hy=hole.y;let qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){const x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nconst stop=m,mx=m.x,my=m.y;let tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){let p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){let i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){let p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges\nlocallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible\narea(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors\nequals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case\n}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){const o1=sign(area(p1,q1,p2));const o2=sign(area(p1,q1,q2));const o3=sign(area(p2,q2,p1));const o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case\nif(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1\nif(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1\nif(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2\nif(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2\nreturn false;}// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){let p=a,inside=false;const px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){const a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){const p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertex index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertex nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){let sum=0;for(let i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}const ShapeUtils={// calculate area of the contour polygon\narea:function(contour){const n=contour.length;let a=0.0;for(let p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;},isClockWise:function(pts){return ShapeUtils.area(pts)<0;},triangulateShape:function(contour,holes){const vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nconst holeIndices=[];// array of hole indices\nconst faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nlet holeIndex=contour.length;holes.forEach(removeDupEndPts);for(let i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//\nconst triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(let i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}};function removeDupEndPts(points){const l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(let i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */class ExtrudeGeometry extends BufferGeometry{constructor(shapes,options){super();this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];const scope=this;const verticesArray=[];const uvArray=[];for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];addShape(shape);}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(verticesArray,3));this.setAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions\nfunction addShape(shape){const placeholder=[];// options\nconst curveSegments=options.curveSegments!==undefined?options.curveSegments:12;const steps=options.steps!==undefined?options.steps:1;let depth=options.depth!==undefined?options.depth:100;let bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;let bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;let bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;let bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;let bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;const extrudePath=options.extrudePath;const uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nlet extrudePts,extrudeByPath=false;let splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization\nconst shapePoints=shape.extractPoints(curveSegments);let vertices=shapePoints.shape;const holes=shapePoints.holes;const reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}const faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */const contour=vertices;// vertices has all points but contour has only points of circumference\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error('THREE.ExtrudeGeometry: vec does not exist');return vec.clone().multiplyScalar(size).add(pt);}const vlen=vertices.length,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nlet v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nconst v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;const v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;const v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nconst collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nconst v_prev_len=Math.sqrt(v_prev_lensq);const v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nconst ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;const ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;const ptNextShift_x=inNext.x-v_next_y/v_next_len;const ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nconst sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nconst v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nlet direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}const contourMovements=[];for(let i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}const holesMovements=[];let oneHoleMovements,verticesMovements=contourMovements.concat();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=[];for(let i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\noneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(let b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nconst t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}const bs=bevelSize+bevelOffset;// Back facing vertices\nfor(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nfor(let s=1;s<=steps;s++){for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(let b=bevelSegments-1;b>=0;b--){const t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){const start=verticesArray.length/3;if(bevelEnabled){let layer=0;// steps + 1\nlet offset=vlen*layer;// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2],face[1],face[0]);}// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){const start=verticesArray.length/3;let layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];sidewalls(ahole,layeroffset);//, true\nlayeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){let i=contour.length;while(--i>=0){const j=i;let k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nfor(let s=0,sl=steps+bevelSegments*2;s<sl;s++){const slen1=vlen*s;const slen2=vlen*(s+1);const a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);const shapes=this.parameters.shapes;const options=this.parameters.options;return toJSON$1(shapes,options,data);}}const WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const a_z=vertices[indexA*3+2];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const b_z=vertices[indexB*3+2];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];const c_z=vertices[indexC*3+2];const d_x=vertices[indexD*3];const d_y=vertices[indexD*3+1];const d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<0.01){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON$1(shapes,options,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}class IcosahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];const indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(vertices,indices,radius,detail);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};}}class LatheGeometry extends BufferGeometry{constructor(points,segments=12,phiStart=0,phiLength=Math.PI*2){super();this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=MathUtils.clamp(phiLength,0,Math.PI*2);// buffers\nconst indices=[];const vertices=[];const uvs=[];// helper variables\nconst inverseSegments=1.0/segments;const vertex=new Vector3();const uv=new Vector2();// generate vertices and uvs\nfor(let i=0;i<=segments;i++){const phi=phiStart+i*inverseSegments*phiLength;const sin=Math.sin(phi);const cos=Math.cos(phi);for(let j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(let i=0;i<segments;i++){for(let j=0;j<points.length-1;j++){const base=j+i*points.length;const a=base;const b=base+points.length;const c=base+points.length+1;const d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\nthis.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){const normals=this.attributes.normal.array;const n1=new Vector3();const n2=new Vector3();const n=new Vector3();// this is the buffer offset for the last line of vertices\nconst base=segments*points.length*3;for(let i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line\nn1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line\nn2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}}class OctahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(vertices,indices,radius,detail);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */function ParametricGeometry(func,slices,stacks){BufferGeometry.call(this);this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];const EPS=0.00001;const normal=new Vector3();const p0=new Vector3(),p1=new Vector3();const pu=new Vector3(),pv=new Vector3();if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs\nconst sliceCount=slices+1;for(let i=0;i<=stacks;i++){const v=i/stacks;for(let j=0;j<=slices;j++){const u=j/slices;// vertex\nfunc(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal\n// approximate tangent vectors via finite differences\nif(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal\nnormal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,v);}}// generate indices\nfor(let i=0;i<stacks;i++){for(let j=0;j<slices;j++){const a=i*sliceCount+j;const b=i*sliceCount+j+1;const c=(i+1)*sliceCount+j+1;const d=(i+1)*sliceCount+j;// faces one and two\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}ParametricGeometry.prototype=Object.create(BufferGeometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;class RingGeometry extends BufferGeometry{constructor(innerRadius=0.5,outerRadius=1,thetaSegments=8,phiSegments=1,thetaStart=0,thetaLength=Math.PI*2){super();this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// some helper variables\nlet radius=innerRadius;const radiusStep=(outerRadius-innerRadius)/phiSegments;const vertex=new Vector3();const uv=new Vector2();// generate vertices, normals and uvs\nfor(let j=0;j<=phiSegments;j++){for(let i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside\nconst segment=thetaStart+i/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(let j=0;j<phiSegments;j++){const thetaSegmentLevel=j*(thetaSegments+1);for(let i=0;i<thetaSegments;i++){const segment=i+thetaSegmentLevel;const a=segment;const b=segment+thetaSegments+1;const c=segment+thetaSegments+2;const d=segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class ShapeGeometry extends BufferGeometry{constructor(shapes,curveSegments=12){super();this.type='ShapeGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet groupStart=0;let groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(let i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){const indexOffset=vertices.length/3;const points=shape.extractPoints(curveSegments);let shapeVertices=points.shape;const shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}const faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs\nfor(let i=0,l=shapeVertices.length;i<l;i++){const vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs\n}// incides\nfor(let i=0,l=faces.length;i<l;i++){const face=faces[i];const a=face[0]+indexOffset;const b=face[1]+indexOffset;const c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);const shapes=this.parameters.shapes;return toJSON(shapes,data);}}function toJSON(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}class SphereGeometry extends BufferGeometry{constructor(radius=1,widthSegments=8,heightSegments=6,phiStart=0,phiLength=Math.PI*2,thetaStart=0,thetaLength=Math.PI){super();this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));const thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);let index=0;const grid=[];const vertex=new Vector3();const normal=new Vector3();// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// generate vertices, normals and uvs\nfor(let iy=0;iy<=heightSegments;iy++){const verticesRow=[];const v=iy/heightSegments;// special case for the poles\nlet uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(let ix=0;ix<=widthSegments;ix++){const u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(let iy=0;iy<heightSegments;iy++){for(let ix=0;ix<widthSegments;ix++){const a=grid[iy][ix+1];const b=grid[iy][ix];const c=grid[iy+1][ix];const d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const indices=[2,1,0,0,3,2,1,3,0,2,3,1];super(vertices,indices,radius,detail);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */class TextGeometry extends ExtrudeGeometry{constructor(text,parameters={}){const font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new BufferGeometry();}const shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API\nparameters.depth=parameters.height!==undefined?parameters.height:50;// defaults\nif(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;super(shapes,parameters);this.type='TextGeometry';}}class TorusGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,radialSegments=8,tubularSegments=6,arc=Math.PI*2){super();this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst center=new Vector3();const vertex=new Vector3();const normal=new Vector3();// generate vertices, normals and uvs\nfor(let j=0;j<=radialSegments;j++){for(let i=0;i<=tubularSegments;i++){const u=i/tubularSegments*arc;const v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=radialSegments;j++){for(let i=1;i<=tubularSegments;i++){// indices\nconst a=(tubularSegments+1)*j+i-1;const b=(tubularSegments+1)*(j-1)+i-1;const c=(tubularSegments+1)*(j-1)+i;const d=(tubularSegments+1)*j+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TorusKnotGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,tubularSegments=64,radialSegments=8,p=2,q=3){super();this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const P1=new Vector3();const P2=new Vector3();const B=new Vector3();const T=new Vector3();const N=new Vector3();// generate vertices, normals and uvs\nfor(let i=0;i<=tubularSegments;++i){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nconst u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(let j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nconst v=j/radialSegments*Math.PI*2;const cx=-tube*Math.cos(v);const cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){// indices\nconst a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){const cu=Math.cos(u);const su=Math.sin(u);const quOverP=q/p*u;const cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}}class TubeGeometry extends BufferGeometry{constructor(path,tubularSegments=64,radius=1,radialSegments=8,closed=false){super();this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};const frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\nthis.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const uv=new Vector2();let P=new Vector3();// buffer\nconst vertices=[];const normals=[];const uvs=[];const indices=[];// create buffer data\ngenerateBufferData();// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(let i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nconst N=frames.normals[i];const B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(let j=0;j<=radialSegments;j++){const v=j/radialSegments*Math.PI*2;const sin=Math.sin(v);const cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(let i=0;i<=tubularSegments;i++){for(let j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data;}}class WireframeGeometry extends BufferGeometry{constructor(geometry){super();this.type='WireframeGeometry';if(geometry.isGeometry===true){console.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}// buffer\nconst vertices=[];// helper variables\nconst edge=[0,0],edges={};const vertex=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nconst position=geometry.attributes.position;const indices=geometry.index;let groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(let o=0,ol=groups.length;o<ol;++o){const group=groups[o];const start=group.start;const count=group.count;for(let i=start,l=start+count;i<l;i+=3){for(let j=0;j<3;j++){const edge1=indices.getX(i+j);const edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);const key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices\nfor(const key in edges){const e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry\nconst position=geometry.attributes.position;for(let i=0,l=position.count/3;i<l;i++){for(let j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nconst index1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);const index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertices,3));}}var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */class ShadowMaterial extends Material{constructor(parameters){super();this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);return this;}}ShadowMaterial.prototype.isShadowMaterial=true;class RawShaderMaterial extends ShaderMaterial{constructor(parameters){super(parameters);this.type='RawShaderMaterial';}}RawShaderMaterial.prototype.isRawShaderMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */function MeshStandardMaterial(parameters){Material.call(this);this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse\nthis.roughness=1.0;this.metalness=0.0;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.vertexTangents=false;this.setValues(parameters);}MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=true;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;this.vertexTangents=source.vertexTangents;return this;};/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={'STANDARD':'','PHYSICAL':''};this.type='MeshPhysicalMaterial';this.clearcoat=0.0;this.clearcoatMap=null;this.clearcoatRoughness=0.0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=0.5;// maps to F0 = 0.04\nObject.defineProperty(this,'ior',{get:function(){return(1+0.4*this.reflectivity)/(1-0.4*this.reflectivity);},set:function(ior){this.reflectivity=MathUtils.clamp(2.5*(ior-1)/(ior+1),0,1);}});this.sheen=null;// null will disable sheen bsdf\nthis.transmission=0.0;this.transmissionMap=null;this.setValues(parameters);}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;if(source.sheen){this.sheen=(this.sheen||new Color()).copy(source.sheen);}else{this.sheen=null;}this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;return this;};/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshPhongMaterial extends Material{constructor(parameters){super();this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse\nthis.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshPhongMaterial.prototype.isMeshPhongMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshToonMaterial extends Material{constructor(parameters){super();this.defines={'TOON':''};this.type='MeshToonMaterial';this.color=new Color(0xffffff);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshToonMaterial.prototype.isMeshToonMaterial=true;/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshNormalMaterial extends Material{constructor(parameters){super();this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshNormalMaterial.prototype.isMeshNormalMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshLambertMaterial extends Material{constructor(parameters){super();this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshLambertMaterial.prototype.isMeshLambertMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */class MeshMatcapMaterial extends Material{constructor(parameters){super();this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse\nthis.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */class LineDashedMaterial extends LineBasicMaterial{constructor(parameters){super();this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}copy(source){super.copy(source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;}}LineDashedMaterial.prototype.isLineDashedMaterial=true;var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function(times){function compareTime(i,j){return times[i]-times[j];}const n=times.length;const result=new Array(n);for(let i=0;i!==n;++i)result[i]=i;result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function(values,stride,order){const nValues=values.length;const result=new values.constructor(nValues);for(let i=0,dstOffset=0;dstOffset!==nValues;++i){const srcOffset=order[i]*stride;for(let j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function(jsonKeys,times,values,valuePropertyName){let i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nlet value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function(sourceClip,name,startFrame,endFrame,fps=30){const clip=sourceClip.clone();clip.name=name;const tracks=[];for(let i=0;i<clip.tracks.length;++i){const track=clip.tracks[i];const valueSize=track.getValueSize();const times=[];const values=[];for(let j=0;j<track.times.length;++j){const frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(let k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip\nlet minStartTime=Infinity;for(let i=0;i<clip.tracks.length;++i){if(minStartTime>clip.tracks[i].times[0]){minStartTime=clip.tracks[i].times[0];}}// shift all tracks such that clip begins at t=0\nfor(let i=0;i<clip.tracks.length;++i){clip.tracks[i].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function(targetClip,referenceFrame=0,referenceClip=targetClip,fps=30){if(fps<=0)fps=30;const numTracks=referenceClip.tracks.length;const referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame\nfor(let i=0;i<numTracks;++i){const referenceTrack=referenceClip.tracks[i];const referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric\nif(referenceTrackType==='bool'||referenceTrackType==='string')continue;// Find the track in the target clip whose name and type matches the reference track\nconst targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)continue;let referenceOffset=0;const referenceValueSize=referenceTrack.getValueSize();if(referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){referenceOffset=referenceValueSize/3;}let targetOffset=0;const targetValueSize=targetTrack.getValueSize();if(targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){targetOffset=targetValueSize/3;}const lastIndex=referenceTrack.times.length-1;let referenceValue;// Find the value to subtract out of the track\nif(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe\nconst startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe\nconst startIndex=lastIndex*referenceValueSize+referenceOffset;const endIndex=startIndex+referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else{// Interpolate to the reference value\nconst interpolant=referenceTrack.createInterpolant();const startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime);referenceValue=AnimationUtils.arraySlice(interpolant.resultBuffer,startIndex,endIndex);}// Conjugate the quaternion\nif(referenceTrackType==='quaternion'){const referenceQuat=new Quaternion().fromArray(referenceValue).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values\nconst numTimes=targetTrack.times.length;for(let j=0;j<numTimes;++j){const valueStart=j*targetValueSize+targetOffset;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types\nQuaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{const valueEnd=targetValueSize-targetOffset*2;// Subtract each value for all other numeric track types\nfor(let k=0;k<valueEnd;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;}Object.assign(Interpolant.prototype,{evaluate:function(t){const pp=this.parameterPositions;let i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{let right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(let giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nconst t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(let giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){const mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);},settings:null,// optional, subclass-specific settings structure\n// Note: The indirection allows central control of many interpolants.\n// --- Protected interface\nDefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_;},copySampleValue_:function(index){// copies a sample value to the result buffer\nconst result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(let i=0;i!==stride;++i){result[i]=values[offset+i];}return result;},// Template methods for derived classes:\ninterpolate_:function/* i1, t0, t, t1 */(){throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n},intervalChanged_:function/* i1, t0, t1 */(){// empty\n}});// DECLARE ALIAS AFTER assign prototype\nObject.assign(Interpolant.prototype,{//( 0, t, t0 ), returns this.resultBuffer\nbeforeStart_:Interpolant.prototype.copySampleValue_,//( N-1, tN-1, t ), returns this.resultBuffer\nafterEnd_:Interpolant.prototype.copySampleValue_});/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(i1,t0,t1){const pp=this.parameterPositions;let iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}const halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;},interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nconst sP=-wP*ppp+2*wP*pp-wP*p;const s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;const s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;const sN=wN*ppp-wN*pp;// combine data linearly\nfor(let i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}});function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(let i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}});/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}});class KeyframeTrack{constructor(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\nstatic toJSON(track){const trackType=track.constructor;let json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==this.toJSON){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};const interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);}setInterpolation(interpolation){let factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){const message='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}}getValueSize(){return this.values.length/this.times.length;}// move all keyframes either forwards or backwards in time\nshift(timeOffset){if(timeOffset!==0.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;}// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\nscale(timeScale){if(timeScale!==1.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;}// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\ntrim(startTime,endTime){const times=this.times,nKeys=times.length;let from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to){to=Math.max(to,1);from=to-1;}const stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;}// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\nvalidate(){let valid=true;const valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}const times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}let prevTime=null;for(let i=0;i!==nKeys;i++){const currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(let i=0,n=values.length;i!==n;++i){const value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;}// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\noptimize(){// times or values may be shared with other tracks, so overwriting is unsafe\nconst times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;let writeIndex=1;for(let i=1;i<lastIndex;++i){let keep=false;const time=times[i];const timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(i!==1||time!==times[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nconst offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(let j=0;j!==stride;++j){const value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(i!==writeIndex){times[writeIndex]=times[i];const readOffset=i*stride,writeOffset=writeIndex*stride;for(let j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(let readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;}clone(){const times=AnimationUtils.arraySlice(this.times,0);const values=AnimationUtils.arraySlice(this.values,0);const TypedKeyframeTrack=this.constructor;const track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}}KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=Float32Array;KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;/**\n * A Track of Boolean keyframe values.\n */class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName='bool';BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of keyframe values that represent color.\n */class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName='color';/**\n * A Track of numeric keyframe values.\n */class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName='number';/**\n * Spherical linear unit quaternion interpolant.\n */function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);let offset=i1*stride;for(let end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}});/**\n * A Track of quaternion keyframe values.\n */class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);}}QuaternionKeyframeTrack.prototype.ValueTypeName='quaternion';// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track that interpolates Strings\n */class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName='string';StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of vectored keyframe values.\n */class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName='vector';class AnimationClip{constructor(name,duration=-1,tracks,blendMode=NormalAnimationBlendMode){this.name=name;this.tracks=tracks;this.duration=duration;this.blendMode=blendMode;this.uuid=MathUtils.generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}static parse(json){const tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(let i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}const clip=new this(json.name,json.duration,tracks,json.blendMode);clip.uuid=json.uuid;return clip;}static toJSON(clip){const tracks=[],clipTracks=clip.tracks;const json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(let i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;}static CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){const numMorphTargets=morphTargetSequence.length;const tracks=[];for(let i=0;i<numMorphTargets;i++){let times=[];let values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);const order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new this(name,-1,tracks);}static findByName(objectOrClipArray,name){let clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){const o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(let i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;}static CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){const animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nconst pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(let i=0,il=morphTargets.length;i<il;i++){const morphTarget=morphTargets[i];const parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){const name=parts[1];let animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}const clips=[];for(const name in animationToMorphTargets){clips.push(this.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;}// parse the animation.hierarchy format\nstatic parseAnimation(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}const addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){const times=[];const values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};const tracks=[];const clipName=animation.name||'default';const fps=animation.fps||30;const blendMode=animation.blendMode;// automatic length determination in AnimationClip.\nlet duration=animation.length||-1;const hierarchyTracks=animation.hierarchy||[];for(let h=0;h<hierarchyTracks.length;h++){const animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nconst morphTargetNames={};let k;for(k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(let m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(const morphTargetName in morphTargetNames){const times=[];const values=[];for(let m=0;m!==animationKeys[k].morphTargets.length;++m){const animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nconst boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}const clip=new this(clipName,duration,tracks,blendMode);return clip;}resetDuration(){const tracks=this.tracks;let duration=0;for(let i=0,n=tracks.length;i!==n;++i){const track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;}trim(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;}validate(){let valid=true;for(let i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;}optimize(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;}clone(){const tracks=[];for(let i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new this.constructor(this.name,this.duration,tracks,this.blendMode);}toJSON(){return this.constructor.toJSON(this);}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}const trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){const times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}const Cache={enabled:false,files:{},add:function(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function(key){delete this.files[key];},clear:function(){this.files={};}};function LoadingManager(onLoad,onProgress,onError){const scope=this;let isLoading=false;let itemsLoaded=0;let itemsTotal=0;let urlModifier=undefined;const handlers=[];// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){const index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(let i=0,l=handlers.length;i<l;i+=2){const regex=handlers[i];const loader=handlers[i+1];if(regex.global)regex.lastIndex=0;// see #17920\nif(regex.test(file)){return loader;}}return null;};}const DefaultLoadingManager=new LoadingManager();function Loader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.withCredentials=false;this.path='';this.resourcePath='';this.requestHeader={};}Object.assign(Loader.prototype,{load:function/* url, onLoad, onProgress, onError */(){},loadAsync:function(url,onProgress){const scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});},parse:function/* data */(){},setCrossOrigin:function(crossOrigin){this.crossOrigin=crossOrigin;return this;},setWithCredentials:function(value){this.withCredentials=value;return this;},setPath:function(path){this.path=path;return this;},setResourcePath:function(resourcePath){this.resourcePath=resourcePath;return this;},setRequestHeader:function(requestHeader){this.requestHeader=requestHeader;return this;}});const loading={};function FileLoader(manager){Loader.call(this,manager);}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nconst dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;const dataUriRegexResult=url.match(dataUriRegex);let request;// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){const mimeType=dataUriRegexResult[1];const isBase64=!!dataUriRegexResult[2];let data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{let response;const responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':const view=new Uint8Array(data.length);for(let i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':const parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){const response=this.response;const callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache\n// error response bodies as proper responses to requests.\nCache.add(url,response);for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){const callbacks=loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(const header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;},setResponseType:function(value){this.responseType=value;return this;},setMimeType:function(value){this.mimeType=value;return this;}});class AnimationLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const animations=[];for(let i=0;i<json.length;i++){const clip=AnimationClip.parse(json[i]);animations.push(clip);}return animations;}}/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */function CompressedTextureLoader(manager){Loader.call(this,manager);}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const images=[];const texture=new CompressedTexture();const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);let loaded=0;function loadTexture(i){loader.load(url[i],function(buffer){const texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.image=images;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){for(let i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){const texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){const faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(let f=0;f<faces;f++){images[f]={mipmaps:[]};for(let i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}texture.image=images;}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}});class ImageLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}}class CubeTextureLoader extends Loader{constructor(manager){super(manager);}load(urls,onLoad,onProgress,onError){const texture=new CubeTexture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);let loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(let i=0;i<urls.length;++i){loadTexture(i);}return texture;}}/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */function DataTextureLoader(manager){Loader.call(this,manager);}DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const texture=new DataTexture();const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){const texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.encoding!==undefined){texture.encoding=texData.encoding;}if(texData.flipY!==undefined){texture.flipY=texData.flipY;}if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...\n}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}if(texData.generateMipmaps!==undefined){texture.generateMipmaps=texData.generateMipmaps;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}});function TextureLoader(manager){Loader.call(this,manager);}TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(url,onLoad,onProgress,onError){const texture=new Texture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\nconst isJPEG=url.search(/\\.jpe?g($|\\?)/i)>0||url.search(/^data\\:image\\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}});/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/function Curve(){this.type='Curve';this.arcLengthDivisions=200;}Object.assign(Curve.prototype,{// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\ngetPoint:function/* t, optionalTarget */(){console.warn('THREE.Curve: .getPoint() not implemented.');return null;},// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\ngetPointAt:function(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);},// Get sequence of points using getPoint( t )\ngetPoints:function(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;},// Get sequence of points using getPointAt( u )\ngetSpacedPoints:function(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;},// Get total curve arc length\ngetLength:function(){const lengths=this.getLengths();return lengths[lengths.length-1];},// Get list of cumulative segment lengths\ngetLengths:function(divisions){if(divisions===undefined)divisions=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;const cache=[];let current,last=this.getPoint(0);let sum=0;cache.push(0);for(let p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n},updateArcLengths:function(){this.needsUpdate=true;this.getLengths();},// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\ngetUtoTmapping:function(u,distance){const arcLengths=this.getLengths();let i=0;const il=arcLengths.length;let targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nlet low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nconst lengthBefore=arcLengths[i];const lengthAfter=arcLengths[i+1];const segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nconst segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nconst t=(i+segmentFraction)/(il-1);return t;},// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\ngetTangent:function(t,optionalTarget){const delta=0.0001;let t1=t-delta;let t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;const pt1=this.getPoint(t1);const pt2=this.getPoint(t2);const tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3());tangent.copy(pt2).sub(pt1).normalize();return tangent;},getTangentAt:function(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);},computeFrenetFrames:function(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nconst normal=new Vector3();const tangents=[];const normals=[];const binormals=[];const vec=new Vector3();const mat=new Matrix4();// compute the tangent vectors for each segment on the curve\nfor(let i=0;i<=segments;i++){const u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3());tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();let min=Number.MAX_VALUE;const tx=Math.abs(tangents[0].x);const ty=Math.abs(tangents[0].y);const tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(let i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();const theta=Math.acos(MathUtils.clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors\nnormals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){let theta=Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(let i=1;i<=segments;i++){// twist a little...\nnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;},toJSON:function(){const data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;},fromJSON:function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}});class EllipseCurve extends Curve{constructor(aX=0,aY=0,xRadius=1,yRadius=1,aStartAngle=0,aEndAngle=Math.PI*2,aClockwise=false,aRotation=0){super();this.type='EllipseCurve';this.aX=aX;this.aY=aY;this.xRadius=xRadius;this.yRadius=yRadius;this.aStartAngle=aStartAngle;this.aEndAngle=aEndAngle;this.aClockwise=aClockwise;this.aRotation=aRotation;}getPoint(t,optionalTarget){const point=optionalTarget||new Vector2();const twoPi=Math.PI*2;let deltaAngle=this.aEndAngle-this.aStartAngle;const samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0)deltaAngle+=twoPi;while(deltaAngle>twoPi)deltaAngle-=twoPi;if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}const angle=this.aStartAngle+t*deltaAngle;let x=this.aX+this.xRadius*Math.cos(angle);let y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){const cos=Math.cos(this.aRotation);const sin=Math.sin(this.aRotation);const tx=x-this.aX;const ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);}copy(source){super.copy(source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;}toJSON(){const data=super.toJSON();data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;}fromJSON(json){super.fromJSON(json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;}}EllipseCurve.prototype.isEllipseCurve=true;class ArcCurve extends EllipseCurve{constructor(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){super(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}}ArcCurve.prototype.isArcCurve=true;/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */ /*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/function CubicPoly(){let c0=0,c1=0,c2=0,c3=0;/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nlet t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;let t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function(t){const t2=t*t;const t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nconst tmp=new Vector3();const px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();class CatmullRomCurve3 extends Curve{constructor(points=[],closed=false,curveType='centripetal',tension=0.5){super();this.type='CatmullRomCurve3';this.points=points;this.closed=closed;this.curveType=curveType;this.tension=tension;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const points=this.points;const l=points.length;const p=(l-(this.closed?0:1))*t;let intPoint=Math.floor(p);let weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}let p0,p3;// 4 points (p1 & p2 defined below)\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}const p1=points[intPoint%l];const p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nconst pow=this.curveType==='chordal'?0.5:0.25;let dt0=Math.pow(p0.distanceToSquared(p1),pow);let dt1=Math.pow(p1.distanceToSquared(p2),pow);let dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;}}CatmullRomCurve3.prototype.isCatmullRomCurve3=true;/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */function CatmullRom(t,p0,p1,p2,p3){const v0=(p2-p0)*0.5;const v1=(p3-p1)*0.5;const t2=t*t;const t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){const k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){const k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){const k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}class CubicBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2(),v3=new Vector2()){super();this.type='CubicBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve.prototype.isCubicBezierCurve=true;class CubicBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3(),v3=new Vector3()){super();this.type='CubicBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve3.prototype.isCubicBezierCurve3=true;class LineCurve extends Curve{constructor(v1=new Vector2(),v2=new Vector2()){super();this.type='LineCurve';this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}getTangent(t,optionalTarget){const tangent=optionalTarget||new Vector2();tangent.copy(this.v2).sub(this.v1).normalize();return tangent;}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}LineCurve.prototype.isLineCurve=true;class LineCurve3 extends Curve{constructor(v1=new Vector3(),v2=new Vector3()){super();this.type='LineCurve3';this.isLineCurve3=true;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}class QuadraticBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2()){super();this.type='QuadraticBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;class QuadraticBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3()){super();this.type='QuadraticBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;class SplineCurve extends Curve{constructor(points=[]){super();this.type='SplineCurve';this.points=points;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const points=this.points;const p=(points.length-1)*t;const intPoint=Math.floor(p);const weight=p-intPoint;const p0=points[intPoint===0?intPoint:intPoint-1];const p1=points[intPoint];const p2=points[intPoint>points.length-2?points.length-1:intPoint+1];const p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;}}SplineCurve.prototype.isSplineCurve=true;var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/class CurvePath extends Curve{constructor(){super();this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path\n}add(curve){this.curves.push(curve);}closePath(){// Add a line curve if start and end of lines are not connected\nconst startPoint=this.curves[0].getPoint(0);const endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}}// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\ngetPoint(t){const d=t*this.getLength();const curveLengths=this.getCurveLengths();let i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){const diff=curveLengths[i]-d;const curve=this.curves[i];const segmentLength=curve.getLength();const u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n}// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\ngetLength(){const lens=this.getCurveLengths();return lens[lens.length-1];}// cacheLengths must be recalculated.\nupdateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();}// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\ngetCurveLengths(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nconst lengths=[];let sums=0;for(let i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;}getSpacedPoints(divisions=40){const points=[];for(let i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;}getPoints(divisions=12){const points=[];let last;for(let i=0,curves=this.curves;i<curves.length;i++){const curve=curves[i];const resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;const pts=curve.getPoints(resolution);for(let j=0;j<pts.length;j++){const point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;}copy(source){super.copy(source);this.curves=[];for(let i=0,l=source.curves.length;i<l;i++){const curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose;data.curves=[];for(let i=0,l=this.curves.length;i<l;i++){const curve=this.curves[i];data.curves.push(curve.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.autoClose=json.autoClose;this.curves=[];for(let i=0,l=json.curves.length;i<l;i++){const curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}}class Path extends CurvePath{constructor(points){super();this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(let i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}return this;}moveTo(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\nreturn this;}lineTo(x,y){const curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){const curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){const curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}splineThru(pts/*Array of Vector*/){const npts=[this.currentPoint.clone()].concat(pts);const curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;}arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;}absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nconst firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);const lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;}copy(source){super.copy(source);this.currentPoint.copy(source.currentPoint);return this;}toJSON(){const data=super.toJSON();data.currentPoint=this.currentPoint.toArray();return data;}fromJSON(json){super.fromJSON(json);this.currentPoint.fromArray(json.currentPoint);return this;}}class Shape extends Path{constructor(points){super(points);this.uuid=MathUtils.generateUUID();this.type='Shape';this.holes=[];}getPointsHoles(divisions){const holesPts=[];for(let i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;}// get points of shape and holes (keypoints based on segments parameter)\nextractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};}copy(source){super.copy(source);this.holes=[];for(let i=0,l=source.holes.length;i<l;i++){const hole=source.holes[i];this.holes.push(hole.clone());}return this;}toJSON(){const data=super.toJSON();data.uuid=this.uuid;data.holes=[];for(let i=0,l=this.holes.length;i<l;i++){const hole=this.holes[i];data.holes.push(hole.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.uuid=json.uuid;this.holes=[];for(let i=0,l=json.holes.length;i<l;i++){const hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}}class Light extends Object3D{constructor(color,intensity=1){super();this.type='Light';this.color=new Color(color);this.intensity=intensity;}copy(source){super.copy(source);this.color.copy(source.color);this.intensity=source.intensity;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}}Light.prototype.isLight=true;class HemisphereLight extends Light{constructor(skyColor,groundColor,intensity){super(skyColor,intensity);this.type='HemisphereLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}copy(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}}HemisphereLight.prototype.isHemisphereLight=true;const _projScreenMatrix$1=/*@__PURE__*/new Matrix4();const _lightPositionWorld$1=/*@__PURE__*/new Vector3();const _lookTarget$1=/*@__PURE__*/new Vector3();class LightShadow{constructor(camera){this.camera=camera;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}getViewportCount(){return this._viewportCount;}getFrustum(){return this._frustum;}updateMatrices(light){const shadowCamera=this.camera;const shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld$1);_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_lookTarget$1);shadowCamera.updateMatrixWorld();_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);}getViewport(viewportIndex){return this._viewports[viewportIndex];}getFrameExtents(){return this._frameExtents;}copy(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;}clone(){return new this.constructor().copy(this);}toJSON(){const object={};if(this.bias!==0)object.bias=this.bias;if(this.normalBias!==0)object.normalBias=this.normalBias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,0.5,500));this.focus=1;}updateMatrices(light){const camera=this.camera;const fov=MathUtils.RAD2DEG*2*light.angle*this.focus;const aspect=this.mapSize.width/this.mapSize.height;const far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}super.updateMatrices(light);}copy(source){super.copy(source);this.focus=source.focus;return this;}}SpotLightShadow.prototype.isSpotLightShadow=true;class SpotLight extends Light{constructor(color,intensity,distance=0,angle=Math.PI/3,penumbra=0,decay=1){super(color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.distance=distance;this.angle=angle;this.penumbra=penumbra;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new SpotLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/Math.PI;}copy(source){super.copy(source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}SpotLight.prototype.isSpotLight=true;const _projScreenMatrix=/*@__PURE__*/new Matrix4();const _lightPositionWorld=/*@__PURE__*/new Vector3();const _lookTarget=/*@__PURE__*/new Vector3();class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,0.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\nnew Vector4(2,1,1,1),// negative X\nnew Vector4(0,1,1,1),// positive Z\nnew Vector4(3,1,1,1),// negative Z\nnew Vector4(1,1,1,1),// positive Y\nnew Vector4(3,0,1,1),// negative Y\nnew Vector4(1,0,1,1)];this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];}updateMatrices(light,viewportIndex=0){const camera=this.camera;const shadowMatrix=this.matrix;const far=light.distance||camera.far;if(far!==camera.far){camera.far=far;camera.updateProjectionMatrix();}_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(_lightPositionWorld);_lookTarget.copy(camera.position);_lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(_lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix);}}PointLightShadow.prototype.isPointLightShadow=true;class PointLight extends Light{constructor(color,intensity,distance=0,decay=1){super(color,intensity);this.type='PointLight';this.distance=distance;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new PointLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*4*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/(4*Math.PI);}copy(source){super.copy(source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}}PointLight.prototype.isPointLight=true;class OrthographicCamera extends Camera{constructor(left=-1,right=1,top=1,bottom=-1,near=0.1,far=2000){super();this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near;this.far=far;this.updateProjectionMatrix();}copy(source,recursive){super.copy(source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;}setViewOffset(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}updateProjectionMatrix(){const dx=(this.right-this.left)/(2*this.zoom);const dy=(this.top-this.bottom)/(2*this.zoom);const cx=(this.right+this.left)/2;const cy=(this.top+this.bottom)/2;let left=cx-dx;let right=cx+dx;let top=cy+dy;let bottom=cy-dy;if(this.view!==null&&this.view.enabled){const scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;const scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}toJSON(meta){const data=Object3D.prototype.toJSON.call(this,meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}}OrthographicCamera.prototype.isOrthographicCamera=true;class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,0.5,500));}}DirectionalLightShadow.prototype.isDirectionalLightShadow=true;class DirectionalLight extends Light{constructor(color,intensity){super(color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}copy(source){super.copy(source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}DirectionalLight.prototype.isDirectionalLight=true;class AmbientLight extends Light{constructor(color,intensity){super(color,intensity);this.type='AmbientLight';}}AmbientLight.prototype.isAmbientLight=true;class RectAreaLight extends Light{constructor(color,intensity,width=10,height=10){super(color,intensity);this.type='RectAreaLight';this.width=width;this.height=height;}copy(source){super.copy(source);this.width=source.width;this.height=source.height;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.width=this.width;data.object.height=this.height;return data;}}RectAreaLight.prototype.isRectAreaLight=true;/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */ // 3-band SH defined by 9 coefficients\nclass SphericalHarmonics3{constructor(){this.coefficients=[];for(let i=0;i<9;i++){this.coefficients.push(new Vector3());}}set(coefficients){for(let i=0;i<9;i++){this.coefficients[i].copy(coefficients[i]);}return this;}zero(){for(let i=0;i<9;i++){this.coefficients[i].set(0,0,0);}return this;}// get the radiance in the direction of the normal\n// target is a Vector3\ngetAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.282095);// band 1\ntarget.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2\ntarget.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;}// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n// target is a Vector3\n// https://graphics.stanford.edu/papers/envmap/envmap.pdf\ngetIrradianceAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095\n// band 1\ntarget.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603\ntarget.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2\ntarget.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548\ntarget.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3\ntarget.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274\nreturn target;}add(sh){for(let i=0;i<9;i++){this.coefficients[i].add(sh.coefficients[i]);}return this;}addScaledSH(sh,s){for(let i=0;i<9;i++){this.coefficients[i].addScaledVector(sh.coefficients[i],s);}return this;}scale(s){for(let i=0;i<9;i++){this.coefficients[i].multiplyScalar(s);}return this;}lerp(sh,alpha){for(let i=0;i<9;i++){this.coefficients[i].lerp(sh.coefficients[i],alpha);}return this;}equals(sh){for(let i=0;i<9;i++){if(!this.coefficients[i].equals(sh.coefficients[i])){return false;}}return true;}copy(sh){return this.set(sh.coefficients);}clone(){return new this.constructor().copy(this);}fromArray(array,offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].fromArray(array,offset+i*3);}return this;}toArray(array=[],offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].toArray(array,offset+i*3);}return array;}// evaluate the basis functions\n// shBasis is an Array[ 9 ]\nstatic getBasisAt(normal,shBasis){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;// band 0\nshBasis[0]=0.282095;// band 1\nshBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2\nshBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}}SphericalHarmonics3.prototype.isSphericalHarmonics3=true;class LightProbe extends Light{constructor(sh=new SphericalHarmonics3(),intensity=1){super(undefined,intensity);this.sh=sh;}copy(source){super.copy(source);this.sh.copy(source.sh);return this;}fromJSON(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();\nthis.sh.fromArray(json.sh);return this;}toJSON(meta){const data=super.toJSON(meta);data.object.sh=this.sh.toArray();return data;}}LightProbe.prototype.isLightProbe=true;class MaterialLoader extends Loader{constructor(manager){super(manager);this.textures={};}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}const material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined&&material.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=new Color().setHex(json.sheen);if(json.emissive!==undefined&&material.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined&&material.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.shadowSide!==undefined)material.shadowSide=json.shadowSide;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.skinning!==undefined)material.skinning=json.skinning;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.morphNormals!==undefined)material.morphNormals=json.morphNormals;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.alphaToCoverage!==undefined)material.alphaToCoverage=json.alphaToCoverage;if(json.premultipliedAlpha!==undefined)material.premultipliedAlpha=json.premultipliedAlpha;if(json.vertexTangents!==undefined)material.vertexTangents=json.vertexTangents;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material\nif(json.uniforms!==undefined){for(const name in json.uniforms){const uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);break;case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(const key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){let normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);if(json.transmission!==undefined)material.transmission=json.transmission;if(json.transmissionMap!==undefined)material.transmissionMap=getTexture(json.transmissionMap);return material;}setTextures(value){this.textures=value;return this;}}const LoaderUtils={decodeText:function(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nlet s='';for(let i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[i]);}try{// merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));}catch(e){// see #16358\nreturn s;}},extractUrlBase:function(url){const index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}};function InstancedBufferGeometry(){BufferGeometry.call(this);this.type='InstancedBufferGeometry';this.instanceCount=Infinity;}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:true,copy:function(source){BufferGeometry.prototype.copy.call(this,source);this.instanceCount=source.instanceCount;return this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){const data=BufferGeometry.prototype.toJSON.call(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}});function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:true,copy:function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;},toJSON:function(){const data=BufferAttribute.prototype.toJSON.call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}});class BufferGeometryLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const interleavedBufferMap={};const arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(interleavedBufferMap[uuid]!==undefined)return interleavedBufferMap[uuid];const interleavedBuffers=json.interleavedBuffers;const interleavedBuffer=interleavedBuffers[uuid];const buffer=getArrayBuffer(json,interleavedBuffer.buffer);const array=getTypedArray(interleavedBuffer.type,buffer);const ib=new InterleavedBuffer(array,interleavedBuffer.stride);ib.uuid=interleavedBuffer.uuid;interleavedBufferMap[uuid]=ib;return ib;}function getArrayBuffer(json,uuid){if(arrayBufferMap[uuid]!==undefined)return arrayBufferMap[uuid];const arrayBuffers=json.arrayBuffers;const arrayBuffer=arrayBuffers[uuid];const ab=new Uint32Array(arrayBuffer).buffer;arrayBufferMap[uuid]=ab;return ab;}const geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();const index=json.data.index;if(index!==undefined){const typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}const attributes=json.data.attributes;for(const key in attributes){const attribute=attributes[key];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);const bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;bufferAttribute=new bufferAttributeConstr(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;if(attribute.usage!==undefined)bufferAttribute.setUsage(attribute.usage);if(attribute.updateRange!==undefined){bufferAttribute.updateRange.offset=attribute.updateRange.offset;bufferAttribute.updateRange.count=attribute.updateRange.count;}geometry.setAttribute(key,bufferAttribute);}const morphAttributes=json.data.morphAttributes;if(morphAttributes){for(const key in morphAttributes){const attributeArray=morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;array.push(bufferAttribute);}geometry.morphAttributes[key]=array;}}const morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}const groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(let i=0,n=groups.length;i!==n;++i){const group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}const boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){const center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}}class ObjectLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){let json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}const metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);}parse(json,onLoad){const animations=this.parseAnimations(json.animations);const shapes=this.parseShapes(json.shapes);const geometries=this.parseGeometries(json.geometries,shapes);const images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});const textures=this.parseTextures(json.textures,images);const materials=this.parseMaterials(json.materials,textures);const object=this.parseObject(json.object,geometries,materials,animations);const skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);//\nif(onLoad!==undefined){let hasImages=false;for(const uuid in images){if(images[uuid]instanceof HTMLImageElement){hasImages=true;break;}}if(hasImages===false)onLoad(object);}return object;}parseShapes(json){const shapes={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;}parseSkeletons(json,object){const skeletons={};const bones={};// generate bone lookup table\nobject.traverse(function(child){if(child.isBone)bones[child.uuid]=child;});// create skeletons\nif(json!==undefined){for(let i=0,l=json.length;i<l;i++){const skeleton=new Skeleton().fromJSON(json[i],bones);skeletons[skeleton.uuid]=skeleton;}}return skeletons;}parseGeometries(json,shapes){const geometries={};let geometryShapes;if(json!==undefined){const bufferGeometryLoader=new BufferGeometryLoader();for(let i=0,l=json.length;i<l;i++){let geometry;const data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'TubeGeometry':case'TubeBufferGeometry':// This only works for built-in curves (e.g. CatmullRomCurve3).\n// User defined curves or instances of CurvePath will not be deserialized.\ngeometry=new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}const extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+data.type+'\"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;}parseMaterials(json,textures){const cache={};// MultiMaterial\nconst materials={};if(json!==undefined){const loader=new MaterialLoader();loader.setTextures(textures);for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.type==='MultiMaterial'){// Deprecated\nconst array=[];for(let j=0;j<data.materials.length;j++){const material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;}parseAnimations(json){const animations={};if(json!==undefined){for(let i=0;i<json.length;i++){const data=json[i];const clip=AnimationClip.parse(data);animations[clip.uuid]=clip;}}return animations;}parseImages(json,onLoad){const scope=this;const images={};let loader;function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}function deserializeImage(image){if(typeof image==='string'){const url=image;const path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)?url:scope.resourcePath+url;return loadImage(path);}else{if(image.data){return{data:getTypedArray(image.type,image.data),width:image.width,height:image.height};}else{return null;}}}if(json!==undefined&&json.length>0){const manager=new LoadingManager(onLoad);loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i];const url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(let j=0,jl=url.length;j<jl;j++){const currentUrl=url[j];const deserializedImage=deserializeImage(currentUrl);if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}}}else{// load single image\nconst deserializedImage=deserializeImage(image.url);if(deserializedImage!==null){images[image.uuid]=deserializedImage;}}}}return images;}parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}const textures={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}let texture;const image=images[data.image];if(Array.isArray(image)){texture=new CubeTexture(image);if(image.length===6)texture.needsUpdate=true;}else{if(image&&image.data){texture=new DataTexture(image.data,image.width,image.height);}else{texture=new Texture(image);}if(image)texture.needsUpdate=true;// textures can have undefined image data\n}texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;}parseObject(data,geometries,materials,animations){let object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){const array=[];for(let i=0,l=name.length;i<l;i++){const uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}let geometry,material;switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new SkinnedMesh(geometry,material);if(data.bindMode!==undefined)object.bindMode=data.bindMode;if(data.bindMatrix!==undefined)object.bindMatrix.fromArray(data.bindMatrix);if(data.skeleton!==undefined)object.skeleton=data.skeleton;break;case'Mesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);const count=data.count;const instanceMatrix=data.instanceMatrix;const instanceColor=data.instanceColor;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);if(instanceColor!==undefined)object.instanceColor=new BufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;case'Bone':object=new Bone();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.normalBias!==undefined)object.shadow.normalBias=data.shadow.normalBias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){const children=data.children;for(let i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials,animations));}}if(data.animations!==undefined){const objectAnimations=data.animations;for(let i=0;i<objectAnimations.length;i++){const uuid=objectAnimations[i];object.animations.push(animations[uuid]);}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;const levels=data.levels;for(let l=0;l<levels.length;l++){const level=levels[l];const child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}bindSkeletons(object,skeletons){if(Object.keys(skeletons).length===0)return;object.traverse(function(child){if(child.isSkinnedMesh===true&&child.skeleton!==undefined){const skeleton=skeletons[child.skeleton];if(skeleton===undefined){console.warn('THREE.ObjectLoader: No skeleton found with UUID:',child.skeleton);}else{child.bind(skeleton,child.bindMatrix);}}});}/* DEPRECATED */setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};const TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};const TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};function ImageBitmapLoader(manager){if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}Loader.call(this,manager);this.options={premultiplyAlpha:'none'};}ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,isImageBitmapLoader:true,setOptions:function setOptions(options){this.options=options;return this;},load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const fetchOptions={};fetchOptions.credentials=this.crossOrigin==='anonymous'?'same-origin':'include';fetchOptions.headers=this.requestHeader;fetch(url,fetchOptions).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:'none'}));}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}});class ShapePath{constructor(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}moveTo(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;}lineTo(x,y){this.currentPath.lineTo(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;}splineThru(pts){this.currentPath.splineThru(pts);return this;}toShapes(isCCW,noHoles){function toShapesNoHoles(inSubpaths){const shapes=[];for(let i=0,l=inSubpaths.length;i<l;i++){const tmpPath=inSubpaths[i];const tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){const polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nlet inside=false;for(let p=polyLen-1,q=0;q<polyLen;p=q++){let edgeLowPt=inPolygon[p];let edgeHighPt=inPolygon[q];let edgeDx=edgeHighPt.x-edgeLowPt.x;let edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{const perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}const isClockWise=ShapeUtils.isClockWise;const subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);let solid,tmpPath,tmpShape;const shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}let holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nconst betterShapeHoles=[];const newShapes=[];let newShapeHoles=[];let mainIdx=0;let tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(let i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){let ambiguous=false;const toChange=[];for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){const sho=newShapeHoles[sIdx];for(let hIdx=0;hIdx<sho.length;hIdx++){const ho=sho[hIdx];let hole_unassigned=true;for(let s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}let tmpHoles;for(let i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(let j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}}class Font{constructor(data){this.type='Font';this.data=data;}generateShapes(text,size=100){const shapes=[];const paths=createPaths(text,size,this.data);for(let p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}}function createPaths(text,size,data){const chars=Array.from(text);const scale=size/data.resolution;const line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;const paths=[];let offsetX=0,offsetY=0;for(let i=0;i<chars.length;i++){const char=chars[i];if(char==='\\n'){offsetX=0;offsetY-=line_height;}else{const ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){const glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph){console.error('THREE.Font: character \"'+char+'\" does not exists in font family '+data.familyName+'.');return;}const path=new ShapePath();let x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){const outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(let i=0,l=outline.length;i<l;){const action=outline[i++];switch(action){case'm':// moveTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}Font.prototype.isFont=true;class FontLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){let json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}const font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);}parse(json){return new Font(json);}}let _context;const AudioContext={getContext:function(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function(value){_context=value;}};class AudioLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nconst bufferCopy=buffer.slice(0);const context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}}class HemisphereLightProbe extends LightProbe{constructor(skyColor,groundColor,intensity=1){super(undefined,intensity);const color1=new Color().set(skyColor);const color2=new Color().set(groundColor);const sky=new Vector3(color1.r,color1.g,color1.b);const ground=new Vector3(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\nconst c0=Math.sqrt(Math.PI);const c1=c0*Math.sqrt(0.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);}}HemisphereLightProbe.prototype.isHemisphereLightProbe=true;class AmbientLightProbe extends LightProbe{constructor(color,intensity=1){super(undefined,intensity);const color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\nthis.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));}}AmbientLightProbe.prototype.isAmbientLightProbe=true;const _eyeRight=new Matrix4();const _eyeLeft=new Matrix4();class StereoCamera{constructor(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}update(camera){const cache=this._cache;const needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nconst projectionMatrix=camera.projectionMatrix.clone();const eyeSepHalf=cache.eyeSep/2;const eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;const ymax=cache.near*Math.tan(MathUtils.DEG2RAD*cache.fov*0.5)/cache.zoom;let xmin,xmax;// translate xOffset\n_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye\nxmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}}class Clock{constructor(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}start(){this.startTime=now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;}stop(){this.getElapsedTime();this.running=false;this.autoStart=false;}getElapsedTime(){this.getDelta();return this.elapsedTime;}getDelta(){let diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){const newTime=now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}}function now(){return(typeof performance==='undefined'?Date:performance).now();// see #10732\n}const _position$1=/*@__PURE__*/new Vector3();const _quaternion$1=/*@__PURE__*/new Quaternion();const _scale$1=/*@__PURE__*/new Vector3();const _orientation$1=/*@__PURE__*/new Vector3();class AudioListener extends Object3D{constructor(){super();this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;// private\nthis._clock=new Clock();}getInput(){return this.gain;}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;}getFilter(){return this.filter;}setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;}getMasterVolume(){return this.gain.gain.value;}setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);const listener=this.context.listener;const up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1);_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1);if(listener.positionX){// code path for Chrome (see #14393)\nconst endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$1.x,endTime);listener.positionY.linearRampToValueAtTime(_position$1.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$1.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation$1.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation$1.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation$1.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$1.x,_position$1.y,_position$1.z);listener.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,up.x,up.y,up.z);}}}class Audio extends Object3D{constructor(listener){super();this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType='empty';this._startedAt=0;this._progress=0;this._connected=false;this.filters=[];}getOutput(){return this.gain;}setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;}setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;}setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;}setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;}play(delay=0){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;const source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();}pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress\nthis._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios\nthis._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;}stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}this._connected=true;return this;}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}this._connected=false;return this;}getFilters(){return this.filters;}setFilters(value){if(!value)value=[];if(this._connected===true){this.disconnect();this.filters=value.slice();this.connect();}else{this.filters=value.slice();}return this;}setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;}getDetune(){return this.detune;}getFilter(){return this.getFilters()[0];}setFilter(filter){return this.setFilters(filter?[filter]:[]);}setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;}getPlaybackRate(){return this.playbackRate;}onEnded(){this.isPlaying=false;}getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;}setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;}setLoopStart(value){this.loopStart=value;return this;}setLoopEnd(value){this.loopEnd=value;return this;}getVolume(){return this.gain.gain.value;}setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}}const _position=/*@__PURE__*/new Vector3();const _quaternion=/*@__PURE__*/new Quaternion();const _scale=/*@__PURE__*/new Vector3();const _orientation=/*@__PURE__*/new Vector3();class PositionalAudio extends Audio{constructor(listener){super(listener);this.panner=this.context.createPanner();this.panner.panningModel='HRTF';this.panner.connect(this.gain);}getOutput(){return this.panner;}getRefDistance(){return this.panner.refDistance;}setRefDistance(value){this.panner.refDistance=value;return this;}getRolloffFactor(){return this.panner.rolloffFactor;}setRolloffFactor(value){this.panner.rolloffFactor=value;return this;}getDistanceModel(){return this.panner.distanceModel;}setDistanceModel(value){this.panner.distanceModel=value;return this;}getMaxDistance(){return this.panner.maxDistance;}setMaxDistance(value){this.panner.maxDistance=value;return this;}setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position,_quaternion,_scale);_orientation.set(0,0,1).applyQuaternion(_quaternion);const panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nconst endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position.x,endTime);panner.positionY.linearRampToValueAtTime(_position.y,endTime);panner.positionZ.linearRampToValueAtTime(_position.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation.z,endTime);}else{panner.setPosition(_position.x,_position.y,_position.z);panner.setOrientation(_orientation.x,_orientation.y,_orientation.z);}}}class AudioAnalyser{constructor(audio,fftSize=2048){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;}getAverageFrequency(){let value=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++){value+=data[i];}return value/data.length;}}class PropertyMixer{constructor(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;let mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\n//\n// 'add' is used for additive cumulative results\n//\n// 'work' is optional and is only present for quaternion types. It is used\n// to store intermediate quaternion multiplication results\nswitch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,\n// additive is not relevant for non-numeric types\nmixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}// accumulate data in the 'incoming' region into 'accu<i>'\naccumulate(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nconst buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;let currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(let i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;const mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;}// accumulate data in the 'incoming' region into 'add'\naccumulateAdditive(weight){const buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity\nthis._setIdentity();}// add := add + incoming * weight\nthis._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;}// apply the state of 'accu<i>' to the binding when accus differ\napply(accuIndex){const stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nconst originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN\nthis._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(let i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}}// remember the state of the bound property and copy it to both accus\nsaveOriginalState(){const binding=this.binding;const buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(let i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}// Add to identity for additive\nthis._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;}// apply the state previously taken via 'saveOriginalState' to the binding\nrestoreOriginalState(){const originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);}_setAdditiveIdentityNumeric(){const startIndex=this._addIndex*this.valueSize;const endIndex=startIndex+this.valueSize;for(let i=startIndex;i<endIndex;i++){this.buffer[i]=0;}}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1;}_setAdditiveIdentityOther(){const startIndex=this._origIndex*this.valueSize;const targetIndex=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++){this.buffer[targetIndex+i]=this.buffer[startIndex+i];}}// mix functions\n_select(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(let i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}}_slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);}_slerpAdditive(buffer,dstOffset,srcOffset,t,stride){const workOffset=this._workIndex*stride;// Store result in intermediate buffer offset\nQuaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result\nQuaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);}_lerp(buffer,dstOffset,srcOffset,t,stride){const s=1-t;for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}}_lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t;}}}// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';const _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar='[^'+_RESERVED_CHARS_RE+']';const _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',_wordChar);const _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');const _supportedObjectNames=['material','materials','bones'];function Composite(targetGroup,path,optionalParsedPath){const parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}Object.assign(Composite.prototype,{getValue:function(array,offset){this.bind();// bind all binding\nconst firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);},setValue:function(array,offset){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}},bind:function(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}},unbind:function(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}});function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;}Object.assign(PropertyBinding,{Composite:Composite,create:function(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}},/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */sanitizeNodeName:function(name){return name.replace(/\\s/g,'_').replace(_reservedRe,'');},parseTrackName:function(trackName){const matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}const results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};const lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){const objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against an allowlist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;},findNode:function(root,nodeName){if(!nodeName||nodeName===''||nodeName==='.'||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){const bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){const searchNodeSubtree=function(children){for(let i=0;i<children.length;i++){const childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}const result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};const subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}});Object.assign(PropertyBinding.prototype,{// prototype, continued\n// these are used to \"bind\" a nonexistent property\n_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];},function getValue_array(buffer,offset){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}},function getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];},function getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}],SetterByBindingTypeAndVersioning:[[// Direct\nfunction setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];},function setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// EntireArray\nfunction setValue_array(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}},function setValue_array_setNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;},function setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}],[// ArrayElement\nfunction setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];},function setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// HasToFromArray\nfunction setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);},function setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;},function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}]],getValue:function getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\n},setValue:function getValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);},// create getter / setter pair for a property in the scene graph\nbind:function(){let targetObject=this.node;const parsedPath=this.parsedPath;const objectName=parsedPath.objectName;const propertyName=parsedPath.propertyName;let propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){let objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(let i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nconst nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){const nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nlet versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nlet bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName==='morphTargetInfluences'){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];},unbind:function(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}});// DECLARE ALIAS AFTER assign prototype\nObject.assign(PropertyBinding.prototype,{// initial state of these methods that calls 'bind'\n_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */class AnimationObjectGroup{constructor(){this.uuid=MathUtils.generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nconst indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(let i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nconst scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}add(){const objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;let knownObject=undefined,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid;let index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex];let binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}remove(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nconst lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// remove & forget\nuncache(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nconst lastIndex=--nObjects,lastObject=objects[lastIndex];if(lastIndex>0){indicesByUUID[lastObject.uuid]=index;}objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// Internal interface used by befriended PropertyBinding.Composite:\nsubscribe_(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nconst indicesByPath=this._bindingsIndicesByPath;let index=indicesByPath[path];const bindings=this._bindings;if(index!==undefined)return bindings[index];const paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(let i=nCachedObjects,n=objects.length;i!==n;++i){const object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;}unsubscribe_(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nconst indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){const paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}}AnimationObjectGroup.prototype.isAnimationObjectGroup=true;class AnimationAction{constructor(mixer,clip,localRoot=null,blendMode=clip.blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot;this.blendMode=blendMode;const tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);const interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let i=0;i!==nTracks;++i){const interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}// State & Scheduling\nplay(){this._mixer._activateAction(this);return this;}stop(){this._mixer._deactivateAction(this);return this.reset();}reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);}// return true when play has been called\nisScheduled(){return this._mixer._isActiveAction(this);}startAt(time){this._startTime=time;return this;}setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;}// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\nsetEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();}// return the weight considering fading and .enabled\ngetEffectiveWeight(){return this._effectiveWeight;}fadeIn(duration){return this._scheduleFading(duration,0,1);}fadeOut(duration){return this._scheduleFading(duration,1,0);}crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){const fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;}crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);}stopFading(){const weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;}// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\nsetEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();}// return the time scale considering warping and .paused\ngetEffectiveTimeScale(){return this._effectiveTimeScale;}setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();}syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();}halt(duration){return this.warp(this._effectiveTimeScale,0,duration);}warp(startTimeScale,endTimeScale,duration){const mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;let interpolant=this._timeScaleInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;}stopWarping(){const timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;}// Object Accessors\ngetMixer(){return this._mixer;}getClip(){return this._clip;}getRoot(){return this._localRoot||this._mixer._root;}// Interna\n_update(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}const startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nconst timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);const clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nconst weight=this._updateWeight(time);if(weight>0){const interpolants=this._interpolants;const propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}}}_updateWeight(time){let weight=0;if(this.enabled){weight=this.weight;const interpolant=this._weightInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;}_updateTimeScale(time){let timeScale=0;if(!this.paused){timeScale=this.timeScale;const interpolant=this._timeScaleInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;}_updateTime(deltaTime){const duration=this._clip.duration;const loop=this.loop;let time=this.time+deltaTime;let loopCount=this._loopCount;const pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nconst loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);const pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nconst atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nreturn duration-time;}}return time;}_setEndings(atStart,atEnd,pingPong){const settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}}_scheduleFading(duration,weightNow,weightThen){const mixer=this._mixer,now=mixer.time;let interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}}class AnimationMixer extends EventDispatcher{constructor(root){super();this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}_bindAction(action,prototypeAction){const root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;let bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(let i=0;i!==nTracks;++i){const track=tracks[i],trackName=track.name;let binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}const path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}}_activateAction(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nconst rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}const bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}}_deactivateAction(action){if(this._isActiveAction(action)){const bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}}// Memory manager\n_initMemoryManager(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;const scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};}// Memory management for AnimationAction objects\n_isActiveAction(action){const index=action._cacheIndex;return index!==null&&index<this._nActiveActions;}_addInactiveAction(action,clipUuid,rootUuid){const actions=this._actions,actionsByClip=this._actionsByClip;let actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{const knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;}_removeInactiveAction(action){const actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;const clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;const actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);}_removeInactiveBindingsForAction(action){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}}_lendAction(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nconst actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;}_takeBackAction(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nconst actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;}// Memory management for PropertyMixer objects\n_addInactiveBinding(binding,rootUuid,trackName){const bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;let bindingByName=bindingsByRoot[rootUuid];if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);}_removeInactiveBinding(binding){const bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}}_lendBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;}_takeBackBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;}// Memory management of Interpolants for weight and time scale\n_lendControlInterpolant(){const interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;let interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;}_takeBackControlInterpolant(interpolant){const interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;}// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\nclipAction(clip,optionalRoot,blendMode){const root=optionalRoot||this._root,rootUuid=root.uuid;let clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip;const clipUuid=clipObject!==null?clipObject.uuid:clip;const actionsForClip=this._actionsByClip[clipUuid];let prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){const existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nconst newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;}// get an existing action\nexistingAction(clip,optionalRoot){const root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;}// deactivates all previously scheduled actions\nstopAllAction(){const actions=this._actions,nActions=this._nActiveActions;for(let i=nActions-1;i>=0;--i){actions[i].stop();}return this;}// advance the time and update apply the animation\nupdate(deltaTime){deltaTime*=this.timeScale;const actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(let i=0;i!==nActions;++i){const action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nconst bindings=this._bindings,nBindings=this._nActiveBindings;for(let i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;}// Allows you to seek to a specific time in an animation.\nsetTime(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;\nfor(let i=0;i<this._actions.length;i++){this._actions[i].time=0;// Zero out time attribute for all associated AnimationAction objects.\n}return this.update(timeInSeconds);// Update used to set exact time. Returns \"this\" AnimationMixer object.\n}// return this mixer's root target object\ngetRoot(){return this._root;}// free all resources specific to a particular clip\nuncacheClip(clip){const actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nconst actionsToRemove=actionsForClip.knownActions;for(let i=0,n=actionsToRemove.length;i!==n;++i){const action=actionsToRemove[i];this._deactivateAction(action);const cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}}// free all resources specific to a particular root target object\nuncacheRoot(root){const rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(const clipUuid in actionsByClip){const actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}const bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(const trackName in bindingByName){const binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}}// remove a targeted clip from the cache\nuncacheAction(clip,optionalRoot){const action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}}AnimationMixer.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Uniform{constructor(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}clone(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());}}function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,array,stride);this.meshPerAttribute=meshPerAttribute||1;}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:true,copy:function(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;},clone:function(data){const ib=InterleavedBuffer.prototype.clone.call(this,data);ib.meshPerAttribute=this.meshPerAttribute;return ib;},toJSON:function(data){const json=InterleavedBuffer.prototype.toJSON.call(this,data);json.isInstancedInterleavedBuffer=true;json.meshPerAttribute=this.meshPerAttribute;return json;}});function GLBufferAttribute(buffer,type,itemSize,elementSize,count){this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.version=0;}Object.defineProperty(GLBufferAttribute.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(GLBufferAttribute.prototype,{isGLBufferAttribute:true,setBuffer:function(buffer){this.buffer=buffer;return this;},setType:function(type,elementSize){this.type=type;this.elementSize=elementSize;return this;},setItemSize:function(itemSize){this.itemSize=itemSize;return this;},setCount:function(count){this.count=count;return this;}});function Raycaster(origin,direction,near=0,far=Infinity){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near;this.far=far;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');return this.Points;}}});}function ascSort(a,b){return a.distance-b.distance;}function intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){const children=object.children;for(let i=0,l=children.length;i<l;i++){intersectObject(children[i],raycaster,intersects,true);}}}Object.assign(Raycaster.prototype,{set:function(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);},setFromCamera:function(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type: '+camera.type);}},intersectObject:function(object,recursive=false,intersects=[]){intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;},intersectObjects:function(objects,recursive=false,intersects=[]){for(let i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}});/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */class Spherical{constructor(radius=1,phi=0,theta=0){this.radius=radius;this.phi=phi;// polar angle\nthis.theta=theta;// azimuthal angle\nreturn this;}set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;}copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;}// restrict phi to be betwee EPS and PI-EPS\nmakeSafe(){const EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(MathUtils.clamp(y/this.radius,-1,1));}return this;}clone(){return new this.constructor().copy(this);}}/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */class Cylindrical{constructor(radius=1,theta=0,y=0){this.radius=radius;// distance from the origin to a point in the x-z plane\nthis.theta=theta;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y;// height above the x-z plane\nreturn this;}set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;}copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}clone(){return new this.constructor().copy(this);}}const _vector$4=/*@__PURE__*/new Vector2();class Box2{constructor(min=new Vector2(+Infinity,+Infinity),max=new Vector2(-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$4.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;}getCenter(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));}intersectsBox(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$4.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}intersect(box){this.min.max(box.min);this.max.min(box.max);return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box2.prototype.isBox2=true;const _startP=/*@__PURE__*/new Vector3();const _startEnd=/*@__PURE__*/new Vector3();class Line3{constructor(start=new Vector3(),end=new Vector3()){this.start=start;this.end=end;}set(start,end){this.start.copy(start);this.end.copy(end);return this;}copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;}getCenter(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);}delta(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3();}return target.subVectors(this.end,this.start);}distanceSq(){return this.start.distanceToSquared(this.end);}distance(){return this.start.distanceTo(this.end);}at(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);const startEnd2=_startEnd.dot(_startEnd);const startEnd_startP=_startEnd.dot(_startP);let t=startEnd_startP/startEnd2;if(clampToLine){t=MathUtils.clamp(t,0,1);}return t;}closestPointToPoint(point,clampToLine,target){const t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}clone(){return new this.constructor().copy(this);}}function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function/* renderCallback */(){};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0;}ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=true;const _vector$3=/*@__PURE__*/new Vector3();class SpotLightHelper extends Object3D{constructor(light,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new BufferGeometry();const positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,j=1,l=32;i<l;i++,j++){const p1=i/l*Math.PI*2;const p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}dispose(){this.cone.geometry.dispose();this.cone.material.dispose();}update(){this.light.updateMatrixWorld();const coneLength=this.light.distance?this.light.distance:1000;const coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$3);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}}}const _vector$2=/*@__PURE__*/new Vector3();const _boneMatrix=/*@__PURE__*/new Matrix4();const _matrixWorldInv=/*@__PURE__*/new Matrix4();class SkeletonHelper extends LineSegments{constructor(object){const bones=getBoneList(object);const geometry=new BufferGeometry();const vertices=[];const colors=[];const color1=new Color(0,0,1);const color2=new Color(0,1,0);for(let i=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(geometry,material);this.type='SkeletonHelper';this.isSkeletonHelper=true;this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}updateMatrixWorld(force){const bones=this.bones;const geometry=this.geometry;const position=geometry.getAttribute('position');_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let i=0,j=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;super.updateMatrixWorld(force);}}function getBoneList(object){const boneList=[];if(object&&object.isBone){boneList.push(object);}for(let i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}class PointLightHelper extends Mesh{constructor(light,sphereSize,color){const geometry=new SphereGeometry(sphereSize,4,2);const material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});super(geometry,material);this.light=light;this.light.updateMatrixWorld();this.color=color;this.type='PointLightHelper';this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/}dispose(){this.geometry.dispose();this.material.dispose();}update(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/}}const _vector$1=/*@__PURE__*/new Vector3();const _color1=/*@__PURE__*/new Color();const _color2=/*@__PURE__*/new Color();class HemisphereLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new OctahedronGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const position=geometry.getAttribute('position');const colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose();}update(){const mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{const colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(let i=0,l=colors.count;i<l;i++){const color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());}}class GridHelper extends LineSegments{constructor(size=10,divisions=10,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const center=divisions/2;const step=size/divisions;const halfSize=size/2;const vertices=[],colors=[];for(let i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);const color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='GridHelper';}}class PolarGridHelper extends LineSegments{constructor(radius=10,radials=16,circles=8,divisions=64,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const vertices=[];const colors=[];// create the radials\nfor(let i=0;i<=radials;i++){const v=i/radials*(Math.PI*2);const x=Math.sin(v)*radius;const z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);const color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(let i=0;i<=circles;i++){const color=i&1?color1:color2;const r=radius-radius/circles*i;for(let j=0;j<divisions;j++){// first vertex\nlet v=j/divisions*(Math.PI*2);let x=Math.sin(v)*r;let z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex\nv=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='PolarGridHelper';}}const _v1=/*@__PURE__*/new Vector3();const _v2=/*@__PURE__*/new Vector3();const _v3=/*@__PURE__*/new Vector3();class DirectionalLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;let geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();}update(){_v1.setFromMatrixPosition(this.light.matrixWorld);_v2.setFromMatrixPosition(this.light.target.matrixWorld);_v3.subVectors(_v2,_v1);this.lightPlane.lookAt(_v2);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2);this.targetLine.scale.z=_v3.length();}}const _vector=/*@__PURE__*/new Vector3();const _camera=/*@__PURE__*/new Camera();/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */class CameraHelper extends LineSegments{constructor(camera){const geometry=new BufferGeometry();const material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});const vertices=[];const colors=[];const pointMap={};// colors\nconst colorFrustum=new Color(0xffaa00);const colorCone=new Color(0xff0000);const colorUp=new Color(0x00aaff);const colorTarget=new Color(0xffffff);const colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));super(geometry,material);this.type='CameraHelper';this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}update(){const geometry=this.geometry;const pointMap=this.pointMap;const w=1,h=1;// we need just camera projection matrix inverse\n// world matrix must be identity\n_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target\nsetPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near\nsetPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far\nsetPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up\nsetPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross\nsetPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;}}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,y,z).unproject(camera);const points=pointMap[point];if(points!==undefined){const position=geometry.getAttribute('position');for(let i=0,l=points.length;i<l;i++){position.setXYZ(points[i],_vector.x,_vector.y,_vector.z);}}}const _box=/*@__PURE__*/new Box3();class BoxHelper extends LineSegments{constructor(object,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=new Float32Array(8*3);const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.object=object;this.type='BoxHelper';this.matrixAutoUpdate=false;this.update();}update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box.setFromObject(this.object);}if(_box.isEmpty())return;const min=_box.min;const max=_box.max;/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/const position=this.geometry.attributes.position;const array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();}setFromObject(object){this.object=object;this.update();return this;}copy(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;}}class Box3Helper extends LineSegments{constructor(box,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.box=box;this.type='Box3Helper';this.geometry.computeBoundingSphere();}updateMatrixWorld(force){const box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);super.updateMatrixWorld(force);}}class PlaneHelper extends Line{constructor(plane,size=1,hex=0xffff00){const color=hex;const positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='PlaneHelper';this.plane=plane;this.size=size;const positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];const geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));}updateMatrixWorld(force){let scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);super.updateMatrixWorld(force);}}const _axis=/*@__PURE__*/new Vector3();let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{// dir is assumed to be normalized\nconstructor(dir=new Vector3(0,0,1),origin=new Vector3(0,0,0),length=1,color=0xffff00,headLength=length*0.2,headWidth=headLength*0.2){super();this.type='ArrowHelper';if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();const radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}}setLength(length,headLength=length*0.2,headWidth=headLength*0.2){this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458\nthis.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();}setColor(color){this.line.material.color.set(color);this.cone.material.color.set(color);}copy(source){super.copy(source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;}}class AxesHelper extends LineSegments{constructor(size=1){const vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];const colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='AxesHelper';}}const _floatView=new Float32Array(1);const _int32View=new Int32Array(_floatView.buffer);const DataUtils={// Converts float32 to float16 (stored as uint16 value).\ntoHalfFloat:function(val){// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */_floatView[0]=val;const x=_int32View[0];let bits=x>>16&0x8000;/* Get the sign */let m=x>>12&0x07ff;/* Keep one extra bit for rounding */const e=x>>23&0xff;/* Using int is faster here */ /* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */if(e<103)return bits;/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */if(e>142){bits|=0x7c00;/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */bits|=(e==255?0:1)&&x&0x007fffff;return bits;}/* If exponent underflows but not too much, return a denormal */if(e<113){m|=0x0800;/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */bits|=(m>>114-e)+(m>>113-e&1);return bits;}bits|=e-112<<10|m>>1;/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */bits+=m&1;return bits;}};const LOD_MIN=4;const LOD_MAX=8;const SIZE_MAX=Math.pow(2,LOD_MAX);// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];const TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES=20;const ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6};const backgroundMaterial=new MeshBasicMaterial({side:BackSide,depthWrite:false,depthTest:false});const backgroundBox=new Mesh(new BoxGeometry(),backgroundMaterial);const _flatCamera=/*@__PURE__*/new OrthographicCamera();const{_lodPlanes,_sizeLods,_sigmas}=/*@__PURE__*/_createPlanes();const _clearColor=/*@__PURE__*/new Color();let _oldTarget=null;// Golden Ratio\nconst PHI=(1+Math.sqrt(5))/2;const INV_PHI=1/PHI;// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections=[/*@__PURE__*/new Vector3(1,1,1),/*@__PURE__*/new Vector3(-1,1,1),/*@__PURE__*/new Vector3(1,1,-1),/*@__PURE__*/new Vector3(-1,1,-1),/*@__PURE__*/new Vector3(0,PHI,INV_PHI),/*@__PURE__*/new Vector3(0,PHI,-INV_PHI),/*@__PURE__*/new Vector3(INV_PHI,0,PHI),/*@__PURE__*/new Vector3(-INV_PHI,0,PHI),/*@__PURE__*/new Vector3(PHI,INV_PHI,0),/*@__PURE__*/new Vector3(-PHI,INV_PHI,0)];/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/function convertLinearToRGBE(color){const maxComponent=Math.max(color.r,color.g,color.b);const fExp=Math.min(Math.max(Math.ceil(Math.log2(maxComponent)),-128.0),127.0);color.multiplyScalar(Math.pow(2.0,-fExp));const alpha=(fExp+128.0)/255.0;return alpha;}class PMREMGenerator{constructor(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader(MAX_SAMPLES);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial);}/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */fromScene(scene,sigma=0,near=0.1,far=100){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);if(sigma>0){this._blur(cubeUVRenderTarget,0,0,sigma);}this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromEquirectangular(equirectangular){return this._fromTexture(equirectangular);}/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromCubemap(cubemap){return this._fromTexture(cubemap);}/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=_getCubemapShader();this._compileMaterial(this._cubemapShader);}}/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=_getEquirectShader();this._compileMaterial(this._equirectShader);}}/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(let i=0;i<_lodPlanes.length;i++){_lodPlanes[i].dispose();}}// private interface\n_cleanup(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=false;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height);}_fromTexture(texture){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}_allocateTargets(texture){// warning: null texture is valid\nconst params={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:false,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(texture)?texture.encoding:RGBEEncoding,depthBuffer:false};const cubeUVRenderTarget=_createRenderTarget(params);cubeUVRenderTarget.depthBuffer=texture?false:true;this._pingPongRenderTarget=_createRenderTarget(params);return cubeUVRenderTarget;}_compileMaterial(material){const tmpMesh=new Mesh(_lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera);}_sceneToCubeUV(scene,near,far,cubeUVRenderTarget){const fov=90;const aspect=1;const cubeCamera=new PerspectiveCamera(fov,aspect,near,far);const upSign=[1,-1,1,1,1,1];const forwardSign=[1,1,1,-1,-1,-1];const renderer=this._renderer;const originalAutoClear=renderer.autoClear;const outputEncoding=renderer.outputEncoding;const toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor);renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;renderer.autoClear=false;let useSolidColor=false;const background=scene.background;if(background){if(background.isColor){backgroundMaterial.color.copy(background).convertSRGBToLinear();scene.background=null;const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}}else{backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}for(let i=0;i<6;i++){const col=i%3;if(col==0){cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(forwardSign[i],0,0);}else if(col==1){cubeCamera.up.set(0,0,upSign[i]);cubeCamera.lookAt(0,forwardSign[i],0);}else{cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(0,0,forwardSign[i]);}_setViewport(cubeUVRenderTarget,col*SIZE_MAX,i>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);if(useSolidColor){renderer.render(backgroundBox,cubeCamera);}renderer.render(scene,cubeCamera);}renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.autoClear=originalAutoClear;}_textureToCubeUV(texture,cubeUVRenderTarget){const renderer=this._renderer;if(texture.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=_getCubemapShader();}}else{if(this._equirectShader==null){this._equirectShader=_getEquirectShader();}}const material=texture.isCubeTexture?this._cubemapShader:this._equirectShader;const mesh=new Mesh(_lodPlanes[0],material);const uniforms=material.uniforms;uniforms['envMap'].value=texture;if(!texture.isCubeTexture){uniforms['texelSize'].value.set(1.0/texture.image.width,1.0/texture.image.height);}uniforms['inputEncoding'].value=ENCODINGS[texture.encoding];uniforms['outputEncoding'].value=ENCODINGS[cubeUVRenderTarget.texture.encoding];_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,_flatCamera);}_applyPMREM(cubeUVRenderTarget){const renderer=this._renderer;const autoClear=renderer.autoClear;renderer.autoClear=false;for(let i=1;i<TOTAL_LODS;i++){const sigma=Math.sqrt(_sigmas[i]*_sigmas[i]-_sigmas[i-1]*_sigmas[i-1]);const poleAxis=_axisDirections[(i-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,i-1,i,sigma,poleAxis);}renderer.autoClear=autoClear;}/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */_blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){const pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,'latitudinal',poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,'longitudinal',poleAxis);}_halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){const renderer=this._renderer;const blurMaterial=this._blurMaterial;if(direction!=='latitudinal'&&direction!=='longitudinal'){console.error('blur direction must be either latitudinal or longitudinal!');}// Number of standard deviations at which to cut off the discrete approximation.\nconst STANDARD_DEVIATIONS=3;const blurMesh=new Mesh(_lodPlanes[lodOut],blurMaterial);const blurUniforms=blurMaterial.uniforms;const pixels=_sizeLods[lodIn]-1;const radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);const sigmaPixels=sigmaRadians/radiansPerPixel;const samples=isFinite(sigmaRadians)?1+Math.floor(STANDARD_DEVIATIONS*sigmaPixels):MAX_SAMPLES;if(samples>MAX_SAMPLES){console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);}const weights=[];let sum=0;for(let i=0;i<MAX_SAMPLES;++i){const x=i/sigmaPixels;const weight=Math.exp(-x*x/2);weights.push(weight);if(i==0){sum+=weight;}else if(i<samples){sum+=2*weight;}}for(let i=0;i<weights.length;i++){weights[i]=weights[i]/sum;}blurUniforms['envMap'].value=targetIn.texture;blurUniforms['samples'].value=samples;blurUniforms['weights'].value=weights;blurUniforms['latitudinal'].value=direction==='latitudinal';if(poleAxis){blurUniforms['poleAxis'].value=poleAxis;}blurUniforms['dTheta'].value=radiansPerPixel;blurUniforms['mipInt'].value=LOD_MAX-lodIn;blurUniforms['inputEncoding'].value=ENCODINGS[targetIn.texture.encoding];blurUniforms['outputEncoding'].value=ENCODINGS[targetIn.texture.encoding];const outputSize=_sizeLods[lodOut];const x=3*Math.max(0,SIZE_MAX-2*outputSize);const y=(lodOut===0?0:2*SIZE_MAX)+2*outputSize*(lodOut>LOD_MAX-LOD_MIN?lodOut-LOD_MAX+LOD_MIN:0);_setViewport(targetOut,x,y,3*outputSize,2*outputSize);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera);}}function _isLDR(texture){if(texture===undefined||texture.type!==UnsignedByteType)return false;return texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;}function _createPlanes(){const _lodPlanes=[];const _sizeLods=[];const _sigmas=[];let lod=LOD_MAX;for(let i=0;i<TOTAL_LODS;i++){const sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);let sigma=1.0/sizeLod;if(i>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1];}else if(i==0){sigma=0;}_sigmas.push(sigma);const texelSize=1.0/(sizeLod-1);const min=-texelSize/2;const max=1+texelSize/2;const uv1=[min,min,max,min,max,max,min,min,max,max,min,max];const cubeFaces=6;const vertices=6;const positionSize=3;const uvSize=2;const faceIndexSize=1;const position=new Float32Array(positionSize*vertices*cubeFaces);const uv=new Float32Array(uvSize*vertices*cubeFaces);const faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(let face=0;face<cubeFaces;face++){const x=face%3*2/3-1;const y=face>2?0:-1;const coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);const fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}const planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes,_sizeLods,_sigmas};}function _createRenderTarget(params){const cubeUVRenderTarget=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping;cubeUVRenderTarget.texture.name='PMREM.cubeUv';cubeUVRenderTarget.scissorTest=true;return cubeUVRenderTarget;}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height);}function _getBlurShader(maxSamples){const weights=new Float32Array(maxSamples);const poleAxis=new Vector3(0,1,0);const shaderMaterial=new RawShaderMaterial({name:'SphericalGaussianBlur',defines:{'n':maxSamples},uniforms:{'envMap':{value:null},'samples':{value:1},'weights':{value:weights},'latitudinal':{value:false},'dTheta':{value:0},'mipInt':{value:0},'poleAxis':{value:poleAxis},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getEquirectShader(){const texelSize=new Vector2(1,1);const shaderMaterial=new RawShaderMaterial({name:'EquirectangularToCubeUV',uniforms:{'envMap':{value:null},'texelSize':{value:texelSize},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCubemapShader(){const shaderMaterial=new RawShaderMaterial({name:'CubemapToCubeUV',uniforms:{'envMap':{value:null},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCommonVertexShader(){return/* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;}function _getEncodings(){return/* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;}const LineStrip=0;const LinePieces=1;const NoColors=0;const FaceColors=1;const VertexColors=2;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(materials=[]){console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');return new BufferAttribute(array,itemSize).setUsage(DynamicDrawUsage);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nPath.prototype.fromPoints=function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);};//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nLoader.prototype.extractUrlBase=function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);};Loader.Handlers={add:function/* regex, loader */(){console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function/* file */(){console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}//\nBox2.prototype.center=function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box2.prototype.empty=function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box2.prototype.isIntersectionBox=function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box2.prototype.size=function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nBox3.prototype.center=function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box3.prototype.empty=function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box3.prototype.isIntersectionBox=function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box3.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};Box3.prototype.size=function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nSphere.prototype.empty=function(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();};//\nFrustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};//\nLine3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};//\nMathUtils.random16=function(){console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');return Math.random();};MathUtils.nearestPowerOfTwo=function(value){console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');return MathUtils.floorPowerOfTwo(value);};MathUtils.nextPowerOfTwo=function(value){console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');return MathUtils.ceilPowerOfTwo(value);};//\nMatrix3.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix3.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);};Matrix3.prototype.multiplyVector3Array=function/* a */(){console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');};Matrix3.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);};Matrix3.prototype.applyToVector3Array=function/* array, offset, length */(){console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');};Matrix3.prototype.getInverse=function(matrix){console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nMatrix4.prototype.extractPosition=function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);};Matrix4.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix4.prototype.getPosition=function(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3().setFromMatrixColumn(this,3);};Matrix4.prototype.setRotationFromQuaternion=function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);};Matrix4.prototype.multiplyToArray=function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');};Matrix4.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector4=function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector3Array=function/* a */(){console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');};Matrix4.prototype.rotateAxis=function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);};Matrix4.prototype.crossVector=function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.translate=function(){console.error('THREE.Matrix4: .translate() has been removed.');};Matrix4.prototype.rotateX=function(){console.error('THREE.Matrix4: .rotateX() has been removed.');};Matrix4.prototype.rotateY=function(){console.error('THREE.Matrix4: .rotateY() has been removed.');};Matrix4.prototype.rotateZ=function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');};Matrix4.prototype.rotateByAxis=function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');};Matrix4.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);};Matrix4.prototype.applyToVector3Array=function/* array, offset, length */(){console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');};Matrix4.prototype.makeFrustum=function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);};Matrix4.prototype.getInverse=function(matrix){console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nPlane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};//\nQuaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Quaternion.prototype.inverse=function(){console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');return this.invert();};//\nRay.prototype.isIntersectionBox=function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Ray.prototype.isIntersectionPlane=function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);};Ray.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};//\nTriangle.prototype.area=function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();};Triangle.prototype.barycoordFromPoint=function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);};Triangle.prototype.midpoint=function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);};Triangle.prototypenormal=function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);};Triangle.prototype.plane=function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);};Triangle.barycoordFromPoint=function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);};Triangle.normal=function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);};//\nShape.prototype.extractAllPoints=function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);};Shape.prototype.extrude=function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);};Shape.prototype.makeGeometry=function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);};//\nVector2.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector2.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector2.prototype.lengthManhattan=function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector3.prototype.setEulerFromRotationMatrix=function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');};Vector3.prototype.setEulerFromQuaternion=function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');};Vector3.prototype.getPositionFromMatrix=function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);};Vector3.prototype.getScaleFromMatrix=function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);};Vector3.prototype.getColumnFromMatrix=function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);};Vector3.prototype.applyProjection=function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);};Vector3.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector3.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector3.prototype.lengthManhattan=function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector4.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector4.prototype.lengthManhattan=function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nObject3D.prototype.getChildByName=function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);};Object3D.prototype.renderDepth=function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');};Object3D.prototype.translate=function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);};Object3D.prototype.getWorldRotation=function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');};Object3D.prototype.applyMatrix=function(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Mesh.prototype.setDrawMode=function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');};Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};Object.defineProperty(Curve.prototype,'__arcLengthDivisions',{get:function(){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');return this.arcLengthDivisions;},set:function(value){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');this.arcLengthDivisions=value;}});//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn('THREE.PerspectiveCamera.setLens is deprecated. '+'Use .setFocalLength and .filmGauge for a photographic setup.');if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function/* value */(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});BufferAttribute.prototype.setDynamic=function(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};BufferAttribute.prototype.copyIndicesArray=function/* indices */(){console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},BufferAttribute.prototype.setArray=function/* array */(){console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nBufferGeometry.prototype.addIndex=function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);};BufferGeometry.prototype.addAttribute=function(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);};BufferGeometry.prototype.addDrawCall=function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);};BufferGeometry.prototype.clearDrawCalls=function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();};BufferGeometry.prototype.computeOffsets=function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');};BufferGeometry.prototype.removeAttribute=function(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);};BufferGeometry.prototype.applyMatrix=function(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function(){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');return this.instanceCount;},set:function(value){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');this.instanceCount=value;}}});Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');return this.params.Line.threshold;},set:function(value){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');this.params.Line.threshold=value;}}});Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function(value){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');this.setUsage(value);}}});InterleavedBuffer.prototype.setDynamic=function(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};InterleavedBuffer.prototype.setArray=function/* array */(){console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nExtrudeGeometry.prototype.getArrays=function(){console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');};ExtrudeGeometry.prototype.addShapeList=function(){console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');};ExtrudeGeometry.prototype.addShape=function(){console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');};//\nScene.prototype.dispose=function(){console.error('THREE.Scene: .dispose() has been removed.');};//\nUniform.prototype.onUpdate=function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;};//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.');},set:function(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}}});Object.defineProperties(MeshPhysicalMaterial.prototype,{transparency:{get:function(){console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');return this.transmission;},set:function(value){console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');this.transmission=value;}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nWebGLRenderer.prototype.clearTarget=function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);};WebGLRenderer.prototype.animate=function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);};WebGLRenderer.prototype.getCurrentRenderTarget=function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();};WebGLRenderer.prototype.getMaxAnisotropy=function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();};WebGLRenderer.prototype.getPrecision=function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;};WebGLRenderer.prototype.resetGLState=function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();};WebGLRenderer.prototype.supportsFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');};WebGLRenderer.prototype.supportsHalfFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');};WebGLRenderer.prototype.supportsStandardDerivatives=function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');};WebGLRenderer.prototype.supportsCompressedTextureS3TC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');};WebGLRenderer.prototype.supportsCompressedTexturePVRTC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');};WebGLRenderer.prototype.supportsBlendMinMax=function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');};WebGLRenderer.prototype.supportsVertexTextures=function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;};WebGLRenderer.prototype.supportsInstancedArrays=function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');};WebGLRenderer.prototype.enableScissorTest=function(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);};WebGLRenderer.prototype.initMaterial=function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');};WebGLRenderer.prototype.addPrePlugin=function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');};WebGLRenderer.prototype.addPostPlugin=function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');};WebGLRenderer.prototype.updateShadowMap=function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');};WebGLRenderer.prototype.setFaceCulling=function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');};WebGLRenderer.prototype.allocTextureUnit=function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');};WebGLRenderer.prototype.setTexture=function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');};WebGLRenderer.prototype.setTexture2D=function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');};WebGLRenderer.prototype.setTextureCube=function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');};WebGLRenderer.prototype.getActiveMipMapLevel=function(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();};Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function/* value */(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}},toneMappingWhitePoint:{get:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');return 1.0;},set:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function/* cullFace */(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});function WebGLRenderTargetCube(width,height,options){console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');return new WebGLCubeRenderTarget(width,options);}//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nAudio.prototype.load=function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');const scope=this;const audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;};AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};CubeCamera.prototype.clear=function(renderer,color,depth,stencil){console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');return this.renderTarget.clear(renderer,color,depth,stencil);};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');const loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');const loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nconst SceneUtils={createMultiMaterialObject:function/* geometry, materials */(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},detach:function/* child, parent, scene */(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},attach:function/* child, scene, parent */(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');}if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}if(typeof window!=='undefined'){if(window.__THREE__){console.warn('WARNING: Multiple instances of Three.js being imported.');}else{window.__THREE__=REVISION;}}export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveAnimationBlendMode,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxGeometry as BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleGeometry as CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeGeometry as ConeBufferGeometry,ConeGeometry,CubeCamera,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CustomToneMapping,CylinderGeometry as CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DataUtils,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry as DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeGeometry as ExtrudeBufferGeometry,ExtrudeGeometry,FaceColors,FileLoader,FlatShading,Float16BufferAttribute,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontSide,Frustum,GLBufferAttribute,GLSL1,GLSL3,GammaEncoding,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronGeometry as IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheGeometry as LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalAnimationBlendMode,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronGeometry as OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricGeometry as ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneGeometry as PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronGeometry as PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingGeometry as RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeGeometry as ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereGeometry as SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,SplineCurve,SpotLight,SpotLightHelper,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronGeometry as TetrahedronBufferGeometry,TetrahedronGeometry,TextGeometry as TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusGeometry as TorusBufferGeometry,TorusGeometry,TorusKnotGeometry as TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry as TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGL1Renderer,WebGLCubeRenderTarget,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding};","import * as THREE from \"three\";\n\nconst textureLoader = new THREE.TextureLoader ();\nconst texture = textureLoader.load(\"dist/assets/ZebranoVeneer_512_albedo.png\");\nconst roughness = textureLoader.load(\"dist/assets/ZebranoVeneer_512_roughness.png\");\nconst normal = textureLoader.load(\"dist/assets/ZebranoVeneer_512_normal.png\")\nconst textureD = textureLoader.load(\"dist/assets/Wenge_512_albedo.png\");\nconst roughnessD = textureLoader.load(\"dist/assets/Wenge_512_roughness.png\");\nconst normalD = textureLoader.load(\"dist/assets/Wenge_512_normal.png\")\n\nconst array = [texture, roughness, normal, textureD, roughnessD, normalD];\nfor (let i=0; i < array.length; i++) {\n  [array[i]].wrapT = THREE.RepeatWrapping;\n  array[i].wrapS = THREE.RepeatWrapping;\n  array[i].repeat.set(2,2);\n  array[i].offset.set(10, 9);\n}\n\nexport default class Piece {\n  constructor( dark, box, hollow, tall) {\n    this.tall = tall;\n    this.dark = dark;\n    this.hollow = hollow;\n    this.box = box;\n    this.selected = false;\n    this.model = this.initModel();      \n  }\n\n  initModel() {\n    const shape = new THREE.Shape();\n    if (this.box) {\n      shape.moveTo(-.20, .20);\n      shape.lineTo(-.20, -.20);\n      shape.lineTo(.20, -.20);\n      shape.lineTo(.20, .20);\n    }\n    else { \n      shape.moveTo(0, .25);\n      shape.absarc(0,0,.25, 0, 2*Math.PI, false);\n      shape.closePath();\n    }\n    if (this.hollow) {\n      const hole = new THREE.Shape();\n      hole.absarc(0,0,.2, 0, 2*Math.PI, true);\n      shape.holes.push(hole);\n    }\n    const height = this.tall ? 1.5 : .75;\n    \n    const geometry = new THREE.ExtrudeGeometry(shape, {depth: height, curveSegments: 32, steps: 8, bevelThickness: .1, bevelSize: .07, bevelSegments: 8})\n    \n    const material = this.dark ?\n      new THREE.MeshStandardMaterial( { map: textureD, normalMap: normalD, roughnessMap: roughnessD} ) :\n      new THREE.MeshStandardMaterial( { map: texture, normalMap: normal, roughnessMap: roughness} );\n    const model = new THREE.Mesh( geometry, material );\n    model.castShadow = true;\n    model.userData = {piece: true};\n    return model;\n  }\n}\n","import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.05;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n  // The four arrow keys\n  this.keys = {\n    LEFT: 'ArrowLeft',\n    UP: 'ArrowUp',\n    RIGHT: 'ArrowRight',\n    BOTTOM: 'ArrowDown'\n  };\n\n  // Mouse buttons\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  };\n\n  // Touch fingers\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  // the target DOM element for key events\n  this._domElementKeyEvents = null;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n  this.listenToKeyEvents = function (domElement) {\n    domElement.addEventListener('keydown', onKeyDown);\n    this._domElementKeyEvents = domElement;\n  };\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function () {\n    var offset = new Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().invert();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    var twoPI = 2 * Math.PI;\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      }\n\n      // restrict theta to be between desired limits\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n      if (isFinite(min) && isFinite(max)) {\n        if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n        if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n        if (min <= max) {\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n        } else {\n          spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n        }\n      }\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n      // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n      return false;\n    };\n  }();\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu);\n    scope.domElement.removeEventListener('pointerdown', onPointerDown);\n    scope.domElement.removeEventListener('wheel', onMouseWheel);\n    scope.domElement.removeEventListener('touchstart', onTouchStart);\n    scope.domElement.removeEventListener('touchend', onTouchEnd);\n    scope.domElement.removeEventListener('touchmove', onTouchMove);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n    if (scope._domElementKeyEvents !== null) {\n      scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n    }\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n  function handleMouseUp( /*event*/\n  ) {\n\n    // no-op\n  }\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyIn(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyOut(getZoomScale());\n    }\n    scope.update();\n  }\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n    switch (event.code) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyOut(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n  function handleTouchEnd( /*event*/\n  ) {\n\n    // no-op\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onPointerDown(event) {\n    if (scope.enabled === false) return;\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n\n      // TODO touch\n    }\n  }\n  function onPointerMove(event) {\n    if (scope.enabled === false) return;\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n\n      // TODO touch\n    }\n  }\n  function onPointerUp(event) {\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n\n      // TODO touch\n    }\n  }\n  function onMouseDown(event) {\n    // Prevent the browser from scrolling.\n    event.preventDefault();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n    var mouseAction;\n    switch (event.button) {\n      case 0:\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n      case 1:\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n      case 2:\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n      default:\n        mouseAction = -1;\n    }\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n        break;\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n        break;\n      default:\n        state = STATE.NONE;\n    }\n    if (state !== STATE.NONE) {\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n  function onMouseUp(event) {\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n          default:\n            state = STATE.NONE;\n        }\n        break;\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n          default:\n            state = STATE.NONE;\n        }\n        break;\n      default:\n        state = STATE.NONE;\n    }\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n      default:\n        state = STATE.NONE;\n    }\n  }\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  }\n\n  //\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu);\n  scope.domElement.addEventListener('pointerdown', onPointerDown);\n  scope.domElement.addEventListener('wheel', onMouseWheel);\n  scope.domElement.addEventListener('touchstart', onTouchStart);\n  scope.domElement.addEventListener('touchend', onTouchEnd);\n  scope.domElement.addEventListener('touchmove', onTouchMove);\n\n  // force an update at start\n\n  this.update();\n};\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };","import * as THREE from \"three\";\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass PieceContainer {\n\n    constructor() {\n        this.camera = new THREE.PerspectiveCamera( 50, 100/150, 2, 5 );\n        this.camera.position.set(-.1, -5, 3);\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\n        this.renderer.setSize(100, 150);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.enableZoom = false;\n    }\n\n    setLights (scene) {\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n        const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n        dirLight.position.set(10,20,5);\n        const pointLight = new THREE.PointLight(0xffffff, 1, 100, 2);\n        pointLight.position.set(-5,-10, 15);\n        \n        scene.add(ambientLight);\n        scene.add(dirLight);\n        scene.add(pointLight);\n    }\n}\n\nexport default class PieceToPlay extends PieceContainer {\n\n    constructor() {\n        super();\n        this.piece = null;\n        this.scene = new THREE.Scene();\n        this.setLights(this.scene);\n        this.scene.background = new THREE.Color(0xd3d3d3);\n        this.animationID = null;\n\n        this.animate = this.animate.bind(this);\n        this.animate(false);\n    }\n    \n    animate (shouldAnimate) {\n        this.animationID = shouldAnimate ?  requestAnimationFrame(this.animate) : null;\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera );\n    }\n    \n    addPiece(piece) {\n        this.piece = piece.model.clone();\n        if (piece.tall) {\n            this.piece.translateY(-.95); \n            this.piece.translateX(+.1);\n            this.camera.position.set(0, -3.4, 2.6); \n        }\n        else this.camera.position.set(-.1,-1.8,2.6);\n        this.camera.updateMatrix();\n        this.scene.add(this.piece);\n        this.scene.userData.tall = piece.tall;\n        this.animate(true);\n    }\n    \n    removePiece() {\n        this.scene.remove(this.piece);\n        this.piece = null;\n        this.scene.userData.tall = null;\n        cancelAnimationFrame(this.animationID);\n        // render once to remove the piece\n        this.animate(false);\n    }\n}","import Piece from \"./piece\"\nimport PieceToPlay from './pieceToPlay'\nimport * as THREE from \"three\";\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\n\nexport default class PiecePool {\n\n    constructor() {\n        this.pool = new Array(16);\n        this.currentSelection = -1;\n        this.player1PieceToPlay = new PieceToPlay();\n        this.player2PieceToPlay = new PieceToPlay();\n        for (let i=1; i <=2; i++) {\n            let ptpHTML = document.getElementById(`player${i}-ptp`);\n            ptpHTML.prepend(this[`player${i}PieceToPlay`].renderer.domElement);\n        }\n        this.scenes = [];\n\n        this.camera = new THREE.PerspectiveCamera( 50, 50/120, .1, 5 );\n        this.camera.position.set(-.7, -1.8, 3);\n\n        const canvas = document.getElementById(\"canvas\");\n        const piecePoolHTML = document.getElementById(\"piece-pool\");\n        const rect = piecePoolHTML.getBoundingClientRect();\n        canvas.width = rect.right - rect.left;\n        canvas.height = rect.bottom - rect.top;\n\n        this.renderer = new THREE.WebGLRenderer({canvas: canvas, alpha: true, antialias: true});\n        this.renderer.setScissorTest( true );\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.enableZoom = false;\n\n        //Populate the pool\n        for (let i=0, dark = true; i<2; i++, dark = false) {\n          for (let j=0, box = true; j<2; j++, box = false ) {\n            for (let k=0, hollow = true; k<2; k++, hollow = false) {\n              for (let l=0, tall = true; l<2; l++, tall = false) {\n                this.pool[i*8+j*4+k*2+l]= new Piece(dark, box, hollow, tall);\n              }\n            }\n          }\n        }\n\n        this.animate = this.animate.bind(this);\n        \n        this.animationID = null;\n        this.initDisplay();\n    }\n\n    reset() {\n        for (let i=0; i < 16; i++) {\n            const li = document.getElementById(`item${i}`);\n            li.classList.remove(\"selected\");\n            this.pool[i].selected = false;\n        }\n        this.currentSelection = -1;\n    }\n\n    initDisplay() {\n        const piecePool = document.getElementById(\"piece-pool\");\n        const canvas = piecePool.firstElementChild;\n        this.pool.forEach ((piece, idx) => {\n            let li = document.createElement('li');\n            li.classList.add(\"piece-pool-item\");\n            li.setAttribute(\"id\", `item${idx}`);\n            li.setAttribute(\"data-idx\", `${idx}`);\n            piecePool.append(li);\n            \n            // Create scene\n            const scene = new THREE.Scene();\n            if (piece.tall) {\n                piece.model.translateY(-.23);\n                piece.model.translateX(-.1);\n            }\n            scene.add(piece.model);\n            this.setLights(scene);\n            scene.background = new THREE.Color(0xd3d3d3);\n            scene.userData = {li: li};\n\n            this.scenes.push(scene);\n        });\n        this.animate();\n    }\n\n\n    animate () {\n        this.scenes.forEach((scene) => {\n            const ul = document.getElementById(\"piece-pool\");\n            const ulRect = ul.getBoundingClientRect();\n            const li = scene.userData.li;\n            const index = li.dataset.idx;\n            const rect = li.getBoundingClientRect();\n            const left = rect.left - ulRect.left + li.clientLeft;\n            const width = li.clientWidth;\n            const height = li.clientHeight;\n            const margin = getComputedStyle(li);\n            const offsetRowHeight = (li.offsetHeight+parseInt(margin.marginTop)+parseInt(margin.marginBottom)) * (1+Math.floor(index/2));\n            const bottom = this.renderer.domElement.height - offsetRowHeight + parseInt(margin.marginBottom) + li.clientTop;\n            \n            this.renderer.setScissor(left, bottom, width, height);\n            this.renderer.setViewport(left, bottom, width, height);\n            this.camera.aspect = width/height;\n            this.camera.updateProjectionMatrix();\n            this.controls.update();\n            this.renderer.render( scene, this.camera );\n        }, this);\n        this.animationID = requestAnimationFrame(this.animate);\n    }\n\n    setLights (scene) {\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n        const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n        dirLight.position.set(10,20,5);\n        const pointLight = new THREE.PointLight(0xffffff, 1, 100, 2)\n        pointLight.position.set(5,-10, 15);\n        \n        scene.add(ambientLight);\n        scene.add(dirLight);\n        scene.add(pointLight);\n    }\n}\n","export default class Board {\n  constructor () {\n    this.initBoard();\n  }\n\n  initBoard() {\n    this.board = Array(16);\n    this.winningAttribute = \"\";\n    this.winningSquares = [];\n    this.currentPiece = null;\n    this.numMoves = 0;\n  }\n\n  isGameTie() {\n    // Assumes game has already checked for win\n    return this.numMoves === 16\n  }\n\n  isGameWon (move) {\n    return (\n      this.rowWinner(move) ||\n      this.columnWinner(move) ||\n      this.diagonalWinner(move)\n    );\n  }\n\n  rowWinner(move) {\n    const rowOffset = Math.floor(move/4)*4;\n    for (let i = rowOffset; i < rowOffset+4; i++)\n      if (this.board[i] === undefined) return false;\n    \n    const attributes = [\"tall\", \"dark\", \"hollow\",\"box\"];\n    const opposites = [\"small\", \"light\", \"solid\", \"cylinder\"];\n    for (let a = 0; a < 4; a++) {\n      for (let i = rowOffset + 1; i < rowOffset+4; i++) {\n        if (this.board[rowOffset][attributes[a]] !== this.board[i][attributes[a]]) break;\n        if (i === rowOffset+3) {\n          this.winningAttribute = this.board[rowOffset][attributes[a]] ? attributes[a] : opposites[a];\n          this.winningSquares = [rowOffset, rowOffset + 1, rowOffset + 2, rowOffset + 3];\n          return true;\n        }\n      }\n    }\n  }\n\n  columnWinner(move) {\n    const columnOffset = move%4;\n    for (let i = columnOffset; i < 16; i += 4)\n      if (this.board[i] === undefined) return false;\n    \n    const attributes = [\"tall\", \"dark\", \"hollow\",\"box\"];\n    const opposites = [\"small\", \"light\", \"solid\", \"cylinder\"];\n    for (let a = 0; a < 4; a++) {\n      for (let i = columnOffset + 4; i < 16; i += 4) {\n        if (this.board[columnOffset][attributes[a]] !== this.board[i][attributes[a]]) break;\n        if (i === columnOffset + 12) {\n          this.winningAttribute = this.board[columnOffset][attributes[a]] ? attributes[a] : opposites[a];\n          this.winningSquares = [columnOffset, columnOffset + 4, columnOffset + 8, columnOffset + 12];\n          return true;\n        }\n      }\n    }\n  }\n\n  diagonalWinner(move) {\n    let diagonal = [0, 5, 10, 15];\n    if (!diagonal.includes(move)) {\n      diagonal = [3, 6, 9, 12];\n      if (!diagonal.includes(move)) \n        return false;\n    }\n\n    for (let i = 0; i < 4; i++)\n      if (this.board[diagonal[i]] === undefined) return false;\n    \n    const attributes = [\"tall\", \"dark\", \"hollow\",\"box\"];\n    const opposites = [\"small\", \"light\", \"solid\", \"cylinder\"];\n    for (let a = 0; a < 4; a++) {\n      for (let i = 1; i < 4; i++) {\n        if (this.board[diagonal[0]][attributes[a]] !== this.board[diagonal[i]][attributes[a]]) break;\n        if (i === 3) {\n          this.winningAttribute = this.board[diagonal[0]][attributes[a]] ? attributes[a] : opposites[a];\n          this.winningSquares = diagonal;\n          return true;\n        }\n      }\n    } \n  }\n}\n","import * as THREE from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Board from './board'\n\nexport default class Board3D extends Board {\n  constructor() {\n    super();\n\n    this.scene = new THREE.Scene();\n    this.scene.rotateX(-Math.PI/2);\n    this.camera = new THREE.PerspectiveCamera( 50, 100 / 100, .5, 15 );\n    const canvas = document.getElementById(\"board\");\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableZoom = false;\n    \n    this.animate = this.animate.bind(this);\n    this.initScene();\n  }\n\n  reset() {\n    this.winningSquares.forEach ((square) => {\n      const mesh = this.scene.getObjectByName(square);\n      mesh.material.uniforms.fill.value = false;\n    });\n    let piece;\n    while (piece = this.scene.getObjectByName(\"piece\"))\n      this.scene.remove(piece);\n    this.initBoard();\n    this.animate();\n  }\n        \n  initScene() {\n    const boardDiv = document.getElementById(\"board-container\");\n    boardDiv.append (this.renderer.domElement);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    dirLight.castShadow = true;\n    dirLight.position.set(10,20,5);\n    this.scene.add(ambientLight);\n    this.scene.add(dirLight);\n    this.scene.background = new THREE.Color (0xffffff);\n\n    this.camera.position.set(0.5, 4.345, -6);\n    \n    this.init3DBoard();\n\n    this.animate();\n  }\n\n  animate () {\n    requestAnimationFrame( this.animate );\n    this.controls.update();\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  init3DBoard() {\n    const boxGeo = new THREE.BoxGeometry(6, 6, .5);\n    const board = new THREE.Mesh(boxGeo, new THREE.MeshStandardMaterial({color: 0x800000}));\n    board.rotateZ(Math.PI/4);\n    board.position.set(0, 0, -.3501);\n    board.receiveShadow = true;\n    this.scene.add(board);\n\n    let uniforms = {\n      innerColor: {type: 'vec3', value: new THREE.Color(0xffff00)},\n      borderColor: {type: 'vec3', value: new THREE.Color(0xbc8f8f)},\n      fill: {type: 'bool', value: false },\n      radius: {type: 'float', value: 1.05},\n      strokeWidth: {type:'float', value: .02}\n    }\n    const boardCircleGeo = new THREE.PlaneGeometry(6, 6);\n    const boardCircle = new THREE.Mesh(boardCircleGeo, new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: circleVertexShader(),\n      fragmentShader: bigCircleFragmentShader()\n    })); \n    boardCircle.rotateZ(Math.PI/4);\n    boardCircle.position.set(0, 0, 0);\n    boardCircle.receiveShadow = true;\n    this.scene.add(boardCircle);\n\n    const unitSquare = new THREE.PlaneGeometry(1,1,1,1);\n      \n    uniforms.radius.value = .4;\n    uniforms.strokeWidth.value = .05;\n    let index = 0;\n    const material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: circleVertexShader(),\n      fragmentShader: circleFragmentShader()\n    });\n    for (let y = 1.5; y >= -1.5; y--) {\n      for (let x = -1.5; x <=1.5; x++) {\n        let square = new THREE.Mesh(unitSquare, material.clone());\n        square.name=index; // used to find and highlight winning Board squares \n        square.userData = {\n          boardId: index++,\n          empty: true\n        }\n        square.position.set (x, y, 0);\n        this.scene.add(square);\n      }\n    }\n  }\n\n  placePieceOnBoard(piece, index) {\n    const model = piece.model.clone();\n    model.position.set(-1.5 + (index%4), 1.5 - Math.floor(index/4), 0);\n    model.name = \"piece\"\n    this.scene.add(model);\n    this.numMoves++;\n  }\n\n  markWin() {\n    this.winningSquares.forEach ((square) => {\n      const mesh = this.scene.getObjectByName(square);\n      mesh.material.uniforms.fill.value = true;\n    })\n  }\n}\n\nconst circleVertexShader = function () {\n  return `\n    varying vec3 vUv;\n    \n    void main() {\n        vUv = position;\n        gl_Position = projectionMatrix * (modelViewMatrix * vec4(position, 1.0));\n    }\n  `\n}\n\nconst circleFragmentShader = function () {\n  return `\n    uniform vec3 borderColor;\n    uniform vec3 innerColor;\n    uniform float radius;\n    uniform float strokeWidth;\n    uniform bool fill;\n\n    varying vec3 vUv;\n\n    void main() {\n        vec2 pos = abs(vUv.xy);\n        if (pos.x >= 1.0) pos.x -= 1.0;\n        if (pos.y >= 1.0) pos.y -= 1.0;\n\n        float d = distance(pos, vec2 (0, 0));\n        if ( d < radius) {\n            if (fill) gl_FragColor = vec4(innerColor, 1.0);\n            else discard;\n        }\n        else if (d < radius + strokeWidth) gl_FragColor = vec4(borderColor, 1.0);\n        else discard;\n    }\n  `\n}\n\nconst bigCircleFragmentShader = function () {\n  return `\n    uniform vec3 borderColor;\n    uniform vec3 innerColor;\n    uniform float radius;\n    uniform float strokeWidth;\n\n    varying vec3 vUv;\n\n    void main() {\n        vec2 pos = abs(vUv.xy)/vec2 (6.0, 6.0);\n\n        float d = distance(pos, vec2 (0, 0));\n        if ( d < radius + .05) discard;\n        else if (d < radius + .06) gl_FragColor = vec4(borderColor, 1.0);\n        else discard;\n    }\n  `\n}\n","import PiecePool from \"./piecePool\";\nimport Board3D from \"./board3D\";\nimport { Raycaster, Vector2 } from \"three\";\n\nexport default class Quarto {\n    \n  constructor () {\n    this.piecePool = new PiecePool(); \n    this.board = new Board3D();\n    this.piecePoolHTML = document.getElementById(\"piece-pool\");\n    this.boardHTML = document.getElementById(\"board\");\n    this.selectedPiece = null;\n    this.player1 = \"\";\n    this.player2 = \"\";\n    this.AILevel = 1;\n    this.currentPlayer = 1;\n    this.opposingPlayer = 2;\n    this.click = false; // Used to determine mouse click vs drag\n    this.clickTimer = null;\n\n    this.modal = document.getElementById(\"modal\");\n    this.modalSubmitButton = document.getElementById(\"modal-submit\");\n    this.body = document.getElementsByClassName(\"modal-open\")[0];\n\n    this.handleModalSubmit = this.handleModalSubmit.bind(this);\n    // Listen for click instead of submit so url will not update\n    this.modalSubmitButton.addEventListener(\"click\", this.handleModalSubmit);\n    this.initializeModalRadioButtons();\n\n    this.resetButton = document.getElementById(\"play-again-button\");\n    this.resetGame = this.resetGame.bind(this);\n    this.resetButton.addEventListener(\"click\", this.resetGame)\n\n    this.handlePiecePoolClick = this.handlePiecePoolClick.bind(this);\n    this.handleBoardClick = this.handleBoardClick.bind(this);\n  }\n  \n  startGame () {\n    printMessage(`${this['player' + this.opposingPlayer]}:\\nSelect a piece for ${this['player' + this.currentPlayer]} to play`);\n    this.activatePiecePool();\n  }\n\n  resetGame(e) {\n    this.board.reset();\n    this.piecePool.reset(); \n    this.currentPlayer = 1;\n    this.opposingPlayer = 2;\n    this.body.classList.add(\"modal-open\");\n    this.modal.classList.remove(\"hidden\"); \n    this.resetButton.style.visibility = \"hidden\";\n  }\n\n  // initializeModalRadioButtons and handlePlayer2ModalInput enable the \n  // textbox for Player 2's Name to appear in the modal only when Human Player is checked.\n  initializeModalRadioButtons () {\n    const AI1RadioButton = document.getElementById(\"player2-input-AI1\");\n    const AI2RadioButton = document.getElementById(\"player2-input-AI2\");\n    const humanRadioButton = document.getElementById(\"player2-input-human\");\n\n    AI1RadioButton.addEventListener(\"click\", this.handlePlayer2ModalInput);\n    AI2RadioButton.addEventListener(\"click\", this.handlePlayer2ModalInput);\n    humanRadioButton.addEventListener(\"click\", this.handlePlayer2ModalInput);\n    \n    const humanNameInput = document.getElementById(\"player2-input\")\n    humanNameInput.style.visibility = humanRadioButton.checked ? \"visible\" : \"hidden\";\n  }\n\n  handlePlayer2ModalInput () {\n    const humanRadioButton = document.getElementById(\"player2-input-human\");\n    const humanNameInput = document.getElementById(\"player2-input\")\n    humanNameInput.style.visibility = humanRadioButton.checked ? \"visible\" : \"hidden\";\n  }\n\n  handleModalSubmit (e) {\n    let player1Input = document.getElementById(\"player1-input\").value;\n    player1Input = (player1Input === \"\" ? \"Player 1\" : player1Input);\n    this.player1 = player1Input;\n    const player1PieceToPlay = document.getElementById(\"player1-piece-to-play-text\");\n    player1PieceToPlay.innerHTML = player1Input;\n    \n    const player2Inputs = document.getElementsByName(\"player2\");\n    for (let i=0; i<player2Inputs.length; i++) {\n      if (!player2Inputs[i].checked) continue;\n      const player2PieceToPlay = document.getElementById(\"player2-piece-to-play-text\");\n      switch (i) {\n        case 0:\n        case 1:\n          this.AILevel = i+1;\n          this.player2 = `${player2Inputs[i].value}`;\n          player2PieceToPlay.innerHTML = this.player2;\n          break;\n        default:\n          this.AILevel = 0;\n          let player2Input = document.getElementById(\"player2-input\").value;\n          player2Input = (player2Input === \"\" ? \"Player 2\" : player2Input);\n          this.player2 = player2Input;\n          player2PieceToPlay.innerHTML = player2Input;\n      }\n      break;\n    }\n    this.body.classList.remove(\"modal-open\");\n    this.modal.classList.add(\"hidden\"); \n    this.startGame();\n  }\n\n  activatePiecePool () {\n    if (this.currentPlayer === 2 || this.AILevel === 0)\n      this.piecePoolHTML.addEventListener(\"click\", this.handlePiecePoolClick);\n    else {\n      const piece = this['AIChoosePiece' + this.AILevel]();\n      this.choosePiece(piece);\n    }\n  }\n\n  handlePiecePoolClick(e) {\n    const idx = e.target.dataset.idx;\n    if (this.piecePool.pool[idx].selected) return null;\n    this.choosePiece(idx);   \n  }\n\n  AIChoosePiece1() {\n    let idx = Math.floor(Math.random() * 16);\n    while (this.piecePool.pool[idx].selected)\n      idx = (idx + 1) % 16;\n    return idx;\n  }\n\n  AIChoosePiece2() {\n    if (this.board.numMoves < 3)\n      return this.AIChoosePiece1();\n    let idx = Math.floor(Math.random() * 16);\n    for (let i=0; i < 16; i++, idx = (idx + 1) % 16) {\n      if (this.piecePool.pool[idx].selected) continue;\n      if (this.findWinningMove(this.piecePool.pool[idx]) !== -1) \n        continue;\n      return idx;\n    }\n    return this.AIChoosePiece1();\n  }\n\n  choosePiece(idx) {\n    const li = document.getElementById(`item${idx}`);\n    li.classList.add(\"selected\");\n    this.piecePool.pool[idx].selected = true;\n    this.piecePool.currentSelection = idx;\n    this.selectedPiece = this.piecePool.pool[idx];\n    this.piecePool[`player${this.currentPlayer}PieceToPlay`].addPiece(this.selectedPiece);\n    printMessage(`${this['player' + this.currentPlayer]}:\\nClick a circle on the board to play the selected piece`);  \n    if (this.currentPlayer === 2 || this.AILevel === 0)\n      this.piecePoolHTML.removeEventListener(\"click\", this.handlePiecePoolClick);\n    this.activateBoard();\n  }\n\n  activateBoard () {\n    if (this.currentPlayer === 1 || this.AILevel === 0) {\n        this.boardHTML.addEventListener(\"pointerdown\", this.handleBoardClick);\n        this.boardHTML.addEventListener(\"pointerup\", this.handleBoardClick);\n        this.boardHTML.addEventListener(\"mousedown\", this.handleBoardClick);\n        this.boardHTML.addEventListener(\"mouseup\", this.handleBoardClick);\n        this.boardHTML.addEventListener(\"ontouchstart\", this.handleBoardClick);\n        this.boardHTML.addEventListener(\"ontouchend\", this.handleBoardClick);\n    }\n    else {\n      const move = this['AIChooseBoardSpot' + this.AILevel]();\n      this.makeMove(move);\n    }\n  }\n\n  handleBoardClick (e) {\n    if (e.type === \"pointerdown\" || e.type === \"mousedown\" || e.type === \"ontouchstart\") {\n      this.click = true;\n      this.clickTimer = setTimeout(() => this.click = false, 300);\n      return;\n    }\n    // Event must be pointerup\n    if (!this.click) return;\n    clearTimeout(this.clickTimer);\n    this.click = false;\n\n    const raycaster = new Raycaster();\n    const mouse = new Vector2();\n    const size = new Vector2();\n\n    this.board.renderer.getSize(size);\n    mouse.x= (e.offsetX / size.x) * 2 - 1;\n    mouse.y= -(e.offsetY / size.y) * 2 + 1;\n\n    raycaster.setFromCamera( mouse, this.board.camera);\n    const intersects = raycaster.intersectObjects(this.board.scene.children);\n    \n    // Don't want to select board spaces _through_ a piece,\n    // so just return if first object hit is a piece \n    if (intersects[0] && intersects[0].object.userData.piece) return;\n    \n    for (let i = 0; i < intersects.length; i++) {\n      if (intersects[i].object.userData.boardId !== undefined) {\n        const idx = intersects[i].object.userData.boardId;\n        if (this.board.board[idx] !== undefined) return;\n        this.makeMove(idx);\n      }\n    }\n  }\n\n  makeMove(idx) {\n    this.board.board[idx] = this.selectedPiece;\n    this.board.placePieceOnBoard(this.selectedPiece, idx);\n    this.selectedPiece = null;\n    this.piecePool[`player${this.currentPlayer}PieceToPlay`].removePiece();\n    if (this.board.isGameWon(idx)) {\n      this.board.markWin(); \n      printMessage(`${this['player' + this.currentPlayer]} wins with 4 ${this.board.winningAttribute} pieces in a row!`);\n    }\n    else if (this.board.isGameTie())\n      printMessage(\"Tie Game!\");\n    else {\n      [this.currentPlayer, this.opposingPlayer] = [this.opposingPlayer, this.currentPlayer]; \n      printMessage(`${this['player' + this.opposingPlayer]}:\\nSelect a piece for ${this['player' + this.currentPlayer]} to play`);\n      if (this.AILevel === 0 || this.currentPlayer === 2) {\n          this.boardHTML.removeEventListener(\"pointerdown\", this.handleBoardClick);\n          this.boardHTML.removeEventListener(\"pointerup\", this.handleBoardClick);                \n          this.boardHTML.removeEventListener(\"mousedown\", this.handleBoardClick);\n          this.boardHTML.removeEventListener(\"mouseup\", this.handleBoardClick);\n          this.boardHTML.removeEventListener(\"ontouchstart\", this.handleBoardClick);\n          this.boardHTML.removeEventListener(\"ontouchend\", this.handleBoardClick);\n      }\n      this.activatePiecePool();\n      return;\n    }\n      \n    if (this.AILevel === 0 || this.currentPlayer === 1) {\n        this.boardHTML.removeEventListener(\"pointerdown\", this.handleBoardClick);\n        this.boardHTML.removeEventListener(\"pointerup\", this.handleBoardClick);                \n        this.boardHTML.removeEventListener(\"mousedown\", this.handleBoardClick);\n        this.boardHTML.removeEventListener(\"mouseup\", this.handleBoardClick);\n        this.boardHTML.removeEventListener(\"ontouchstart\", this.handleBoardClick);\n        this.boardHTML.removeEventListener(\"ontouchend\", this.handleBoardClick);\n    }\n    this.resetButton.style.visibility = \"visible\";\n  }\n\n  AIChooseBoardSpot1() {\n    let idx = Math.floor(Math.random() * 16);\n    while (this.board.board[idx] !== undefined)\n      idx = (idx + 1) % 16;      \n    return idx;\n  }\n  \n  AIChooseBoardSpot2() {\n    if (this.board.numMoves < 3)\n      return this.AIChooseBoardSpot1();\n    let idx = this.findWinningMove(this.selectedPiece);\n    if (idx !== -1) return idx;\n      \n    // If no winning move, at least\n    // find a move that does not set up opponent for win\n    idx = Math.floor(Math.random() * 16);\n    for (let i=0; i < 16; i++, idx = (idx + 1) % 16) {\n      if (this.board.board[idx] !== undefined) continue; \n      this.board.board[idx] = this.selectedPiece;\n      if (!this.nextPieceMustWin()) {\n        this.board.board[idx] = undefined;\n        return idx;\n      }\n      this.board.board[idx] = undefined;\n    }\n\n    // If no winning move and no move to keep opponent from winning,\n    // the game is lost. Just choose a random move.\n    return this.AIChooseBoardSpot1();\n  }\n\n  // Returns the index of winning move for given piece or -1 if no move wins\n  findWinningMove(piece) {\n    for (let idx = 0; idx < 16; idx++) {\n      if (this.board.board[idx] !== undefined) continue;\n      this.board.board[idx] = piece;\n      if (this.board.isGameWon(idx)) {\n        this.board.board[idx] = undefined;\n        return idx;\n      }\n      else this.board.board[idx] = undefined;\n    }\n    return -1;\n  }\n\n  nextPieceMustWin() {\n    for (let i=0; i < 16; i++) {\n      if (this.piecePool.pool[i].selected) continue;\n      if (this.findWinningMove(this.piecePool.pool[i]) === -1) return false;\n    }\n    return true;\n  }\n}\n\n\nexport const printMessage = (msg) => {\n  const msgHTML = document.getElementById(\"message\");\n  msgHTML.innerHTML = msg;      \n}\n","export default class Instructions {\n  constructor() {\n    this.instructionsHTML = document.getElementById(\"instructions\");\n    this.setup = {\n      element: document.getElementById(\"setup\"),\n      hidden: true\n    };\n    this.objective = {\n      element: document.getElementById(\"objective\"),\n      hidden: true\n    };\n    this.gamePlay = {\n      element: document.getElementById(\"game-play\"),\n      hidden: true\n    };\n    this.gameMechanics = {\n      element: document.getElementById(\"game-mechanics\"),\n      hidden: true\n    };\n    this.prev = null;\n\n    this.setup.element.addEventListener(\"click\", () => {\n      this.processClick(\"setup\");\n    });\n    this.objective.element.addEventListener(\"click\", () => {\n      this.processClick(\"objective\");\n    });\n    this.gamePlay.element.addEventListener(\"click\", () => {\n      this.processClick(\"gamePlay\");\n    });\n    this.gameMechanics.element.addEventListener(\"click\", () => {\n      this.processClick(\"gameMechanics\");\n    });\n  }\n  \n  processClick (field) {\n    if (this[field].hidden) {\n      // Only allow one open bullet at a time\n      if (this.prev != null) {\n        // Change the arrow\n        this[this.prev].element.children[0].children[0].classList.replace(\"down-arrow\",\"left-arrow\");\n        // Hide the instructions\n        this[this.prev].element.children[1].classList.add(\"hidden\");\n        this[this.prev].hidden = true;\n      }\n      // Change the arrow\n      this[field].element.children[0].children[0].classList.replace(\"left-arrow\", \"down-arrow\");\n      // Show instructions\n      this[field].element.children[1].classList.remove(\"hidden\");\n      this.prev = field;\n    }\n    else {\n      // Change the arrow\n      this[field].element.children[0].children[0].classList.replace(\"down-arrow\",\"left-arrow\");\n      // Hide the instructions\n      this[field].element.children[1].classList.add(\"hidden\");\n      this.prev = null;\n    }\n    this[field].hidden = !this[field].hidden;\n    this.prev = field;\n  }\n}\n","import \"./styles/reset.scss\";\nimport \"./styles/index.scss\";\nimport \"./styles/instructions.scss\";\nimport \"./styles/modal.scss\";\nimport Quarto from \"./gameLogic/quarto\";\nimport Instructions from './gameLogic/instructions';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const i = new Instructions();\n    const q = new Quarto();\n});\n\n"],"names":["CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","KeepStencilOp","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","GLSL3","EventDispatcher","Object","assign","prototype","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","_seed","MathUtils","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","constructor","width","height","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","_canvas","isMatrix3","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","super","defineProperty","uuid","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","updateMatrix","source","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispose","transformUv","uv","needsUpdate","HTMLImageElement","ImageBitmap","data","isTexture","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","isWebGLRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpQuaternions","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","isVector3","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","count","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$b","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","create","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","JSON","stringify","isInstancedMesh","instanceMatrix","instanceColor","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","_vector1","_vector2$1","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","start","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","isMaterial","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","NAMES","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isFloat16BufferAttribute","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","Infinity","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","checkBufferGeometryIntersection","raycaster","morphPosition","morphInfluences","morphTargetInfluences","influence","boneTransform","intersection","checkIntersection","face","morphTargetDictionary","ml","String","intersects","groupMaterial","faceIndex","isGeometry","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","DataTexture","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","has","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","physical","transmission","transmissionMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","bindFramebuffer","framebuffer","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isCube","isRenderTarget3D","createFramebuffer","createRenderbuffer","glTextureType","webglDepthTexture","setupDepthTexture","setupDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","forEach","disconnect","isPresenting","onInputSourcesChange","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","transform","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","projectObject","isGroup","isLOD","isImmediateRenderObject","renderObjects","camera2","renderObjectImmediate","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","window","opaqueObjects","transparentObjects","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","joints","inputState","pinching","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","transformVertex","vertexPosition","mvPosition","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","Bone","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","isBone","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","_start","_end","LineSegments","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","CompressedTexture","isCanvasTexture","linkedList","dim","clockwise","last","sum","signedArea","insertNode","removeNode","filterPoints","again","steiner","prev","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","hole","outerNode","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","getLeftmost","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","holeIndices","faces","removeDupEndPts","addContour","holeIndex","hasHoles","outerLen","queue","eliminateHoles","Earcut","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","hl","ahole","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","toJSON$1","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","vertex","ior","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","json","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","NormalAnimationBlendMode","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","o","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","toLowerCase","getTrackTypeForValueTypeName","Cache","files","file","DefaultLoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","CompressedTextureLoader","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","DataTextureLoader","TextureLoader","Curve","arcLengthDivisions","texData","isJPEG","search","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","segments","closed","mat","MAX_VALUE","tz","fromJSON","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","LineCurve3","isLineCurve3","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","isSphericalHarmonics3","LightProbe","InstancedBufferGeometry","InstancedBufferAttribute","ImageBitmapLoader","createImageBitmap","fetch","isImageBitmapLoader","setOptions","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","AudioLoader","bufferCopy","AudioContext","webkitAudioContext","decodeAudioData","audioBuffer","sky","ground","isHemisphereLightProbe","isAmbientLightProbe","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","nodeName","firstValidIndex","nCachedObjects_","bindings","unbind","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","lastIndexOf","substring","bone","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","stats","actions","total","inUse","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","nBindings","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","LOD","Sprite","PointCloud","ascSort","intersectObject","setBuffer","setType","setItemSize","setCount","setFromCamera","coords","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","_vector$4","Box2","ImmediateRenderObject","isBox2","_vector$2","_boneMatrix","_matrixWorldInv","getBoneList","boneList","_floatView","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","backgroundMaterial","_lodPlanes","_sizeLods","_sigmas","_createPlanes","lod","sizeLod","sigma","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","construct","fromPoints","setColors","isSkeletonHelper","extractUrlBase","LoaderUtils","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","inverse","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","drawcalls","offsets","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","shading","transparency","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","gain","createGain","connect","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","setTargetAtTime","getDetune","getFilter","setFilter","getPlaybackRate","getLoop","setLoopStart","setLoopEnd","getVolume","setVolume","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","textureLoader","THREE","textureD","roughnessD","normalD","Piece","dark","hollow","tall","selected","model","initModel","piece","OrbitControls","quat","quatInverse","lastPosition","lastQuaternion","twoPI","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","listenToKeyEvents","onKeyDown","saveState","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","handleMouseWheel","code","handleKeyDown","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","MapControls","PieceContainer","controls","setLights","ambientLight","dirLight","pointLight","PieceToPlay","animationID","shouldAnimate","addPiece","removePiece","PiecePool","pool","currentSelection","player1PieceToPlay","player2PieceToPlay","getElementById","prepend","scenes","rect","getBoundingClientRect","initDisplay","classList","piecePool","firstElementChild","idx","li","createElement","append","ulRect","dataset","clientLeft","margin","getComputedStyle","offsetRowHeight","offsetHeight","marginTop","marginBottom","clientTop","Board","initBoard","board","winningAttribute","winningSquares","currentPiece","numMoves","isGameTie","isGameWon","move","rowWinner","columnWinner","diagonalWinner","rowOffset","opposites","columnOffset","diagonal","includes","Board3D","initScene","square","init3DBoard","innerColor","borderColor","strokeWidth","boardCircle","circleVertexShader","bigCircleFragmentShader","unitSquare","circleFragmentShader","boardId","placePieceOnBoard","markWin","Quarto","piecePoolHTML","boardHTML","selectedPiece","player1","player2","AILevel","currentPlayer","opposingPlayer","click","clickTimer","modal","modalSubmitButton","body","getElementsByClassName","handleModalSubmit","initializeModalRadioButtons","resetButton","resetGame","handlePiecePoolClick","handleBoardClick","startGame","printMessage","activatePiecePool","visibility","AI1RadioButton","AI2RadioButton","humanRadioButton","handlePlayer2ModalInput","checked","player1Input","innerHTML","player2Inputs","getElementsByName","player2Input","choosePiece","AIChoosePiece1","AIChoosePiece2","findWinningMove","activateBoard","makeMove","clearTimeout","mouse","AIChooseBoardSpot1","AIChooseBoardSpot2","nextPieceMustWin","msg","Instructions","instructionsHTML","hidden","objective","gamePlay","gameMechanics","processClick","field"],"sourceRoot":""}